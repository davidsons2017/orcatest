local function a(...)
    guiL = {}
    zxc = " (Open World ONLY)"
    if GetLocale() == "zhCN" then guiL[zxc] = "（仅限开放世界）" elseif GetLocale() == "koKR" then guiL[zxc] =
        " (오픈 월드 전용)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        " (Sólo mundo abierto)" elseif GetLocale() == "ruRU" then guiL[zxc] = " (Только в открытом мире)" elseif GetLocale() == "frFR" then guiL[zxc] =
        " (Monde ouvert seulement)" elseif GetLocale() == "deDE" then guiL[zxc] = " (Nur in der offenen Welt)" end
    ; zxc = " seconds!"
    if GetLocale() == "zhCN" then guiL[zxc] = "秒！" elseif GetLocale() == "koKR" then guiL[zxc] = "초!" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "segundos!" elseif GetLocale() == "ruRU" then guiL[zxc] = "секунд!" elseif GetLocale() == "frFR" then guiL[zxc] =
        "secondes!" elseif GetLocale() == "deDE" then guiL[zxc] = "Sekunden!" end
    ; zxc = "2hand weapon name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "双手武器名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "양손 무기 이름:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre de arma de 2 manos:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Название двуручного оружия:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom de l'arme à 2 mains:" elseif GetLocale() == "deDE" then guiL[zxc] = "Name der Zweihandwaffe:" end
    ; zxc = ">=# to Arcane Explosion"
    if GetLocale() == "zhCN" then guiL[zxc] = ">=#到奥术爆炸" elseif GetLocale() == "koKR" then guiL[zxc] =
        ">=#을(를) 화염 폭발에 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        ">=# para Explosión Arcana" elseif GetLocale() == "ruRU" then guiL[zxc] = ">=# для взрыва чар" elseif GetLocale() == "frFR" then guiL[zxc] =
        ">=# pour Explosion des arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = ">=# für Arkane Explosion" end
    ; zxc = ">=# to Blizzard"
    if GetLocale() == "zhCN" then guiL[zxc] = ">=#到暴风雪" elseif GetLocale() == "koKR" then guiL[zxc] =
        ">=#을(를) 눈보라에 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        ">=# para Ventisca" elseif GetLocale() == "ruRU" then guiL[zxc] = ">=# для морозного дождя" elseif GetLocale() == "frFR" then guiL[zxc] =
        ">=# pour Blizzard" elseif GetLocale() == "deDE" then guiL[zxc] = ">=# für Blizzard" end
    ; zxc = ">=# to Hellfire"
    if GetLocale() == "zhCN" then guiL[zxc] = ">=#到地狱火" elseif GetLocale() == "koKR" then guiL[zxc] =
        ">=#을(를) 지옥불에 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        ">=# para Infierno" elseif GetLocale() == "ruRU" then guiL[zxc] = ">=# для адского пламени" elseif GetLocale() == "frFR" then guiL[zxc] =
        ">=# pour Flammes infernales" elseif GetLocale() == "deDE" then guiL[zxc] = ">=# für Höllenfeuer" end
    ; zxc = ">=# to Pet Freeze"
    if GetLocale() == "zhCN" then guiL[zxc] = ">=#到宠物冰冻" elseif GetLocale() == "koKR" then guiL[zxc] =
        ">=#을(를) 애완동물 얼림에 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        ">=# para Congelar mascota" elseif GetLocale() == "ruRU" then guiL[zxc] = ">=# для заморозки питомца" elseif GetLocale() == "frFR" then guiL[zxc] =
        ">=# pour Gel du familier" elseif GetLocale() == "deDE" then guiL[zxc] = ">=# für Haustier einfrieren" end
    ; zxc = ">=# to Rain of Fire"
    if GetLocale() == "zhCN" then guiL[zxc] = ">=#到火焰之雨" elseif GetLocale() == "koKR" then guiL[zxc] =
        ">=#을(를) 불의 비에 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        ">=# para Lluvia de Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = ">=# для дождя огня" elseif GetLocale() == "frFR" then guiL[zxc] =
        ">=# pour Pluie de feu" elseif GetLocale() == "deDE" then guiL[zxc] = ">=# für Feuerregen" end
    ; zxc = "Abolish Poison"
    if GetLocale() == "zhCN" then guiL[zxc] = "驱毒术" elseif GetLocale() == "koKR" then guiL[zxc] = "해독" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Abolir veneno" elseif GetLocale() == "ruRU" then guiL[zxc] = "Снятие яда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Abolir le poison" elseif GetLocale() == "deDE" then guiL[zxc] = "Gifte bannen" end
    ; zxc = "Aimed Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "瞄准射击" elseif GetLocale() == "koKR" then guiL[zxc] = "조준 사격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Disparo certero" elseif GetLocale() == "ruRU" then guiL[zxc] = "Прицельный выстрел" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de précision" elseif GetLocale() == "deDE" then guiL[zxc] = "Gezielter Schuss" end
    ; zxc = "Air Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "空气图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tótem de aire" elseif GetLocale() == "ruRU" then guiL[zxc] = "Воздушный тотем" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem d'air" elseif GetLocale() == "deDE" then guiL[zxc] = "Lufttotem" end
    ; zxc = "Ambush"
    if GetLocale() == "zhCN" then guiL[zxc] = "伏击" elseif GetLocale() == "koKR" then guiL[zxc] = "암습" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Emboscada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Засада" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Embuscade" elseif GetLocale() == "deDE" then guiL[zxc] = "Hinterhalt" end
    ; zxc = "Amount of grind points loaded: "
    if GetLocale() == "zhCN" then guiL[zxc] = "加载的磨点数量: " elseif GetLocale() == "koKR" then guiL[zxc] =
        "로드된 그라인드 포인트의 양: " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cantidad de puntos de molienda cargados: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Количество загруженных точек: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nombre de points de grind chargés: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Anzahl der geladenen Grindpunkte: " end
    ; zxc = "Anything on this list will be interrupted always."
    if GetLocale() == "zhCN" then guiL[zxc] = "此列表中的任何技能都将被总是打断。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 목록에 있는 모든 기술은 항상 방해됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cualquier cosa en esta lista será interrumpida siempre." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Все, что на этом списке, будет всегда прервано." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tout ce qui figure sur cette liste sera toujours interrompu." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Alles auf dieser Liste wird immer unterbrochen." end
    ; zxc = "Arcane Blast"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术冲击" elseif GetLocale() == "koKR" then guiL[zxc] = "신비한 폭발" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Explosión Arcana" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чародейский взрыв" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Explosion des arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = "Arkane Explosion" end
    ; zxc = "Arcane Missiles"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术飞弹" elseif GetLocale() == "koKR" then guiL[zxc] = "신비한 화살" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Misiles Arcanos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чародейские стрелы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Missiles des arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = "Arkane Geschosse" end
    ; zxc = "Arcane Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术射击" elseif GetLocale() == "koKR" then guiL[zxc] = "신비한 사격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Disparo Arcano" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чародейский выстрел" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait des arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = "Arkanschuss" end
    ; zxc = "Arcane Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术法术" elseif GetLocale() == "koKR" then guiL[zxc] = "신비한 마법" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos Arcanos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чародейские заклинания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts des arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = "Arkane Zauber" end
    ; zxc = "Arcane"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术" elseif GetLocale() == "koKR" then guiL[zxc] = "신비" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arcano" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чародейство" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arcanes" elseif GetLocale() == "deDE" then guiL[zxc] = "Arkan" end
    ; zxc = "Arms Abilities"
    if GetLocale() == "zhCN" then guiL[zxc] = "武器技能" elseif GetLocale() == "koKR" then guiL[zxc] = "무기 능력" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilidades de Armas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Armes" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenfähigkeiten" end
    ; zxc = "Arms"
    if GetLocale() == "zhCN" then guiL[zxc] = "武器" elseif GetLocale() == "koKR" then guiL[zxc] = "무기류" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Armas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Armes" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffen" end
    ; zxc = "Art of War"
    if GetLocale() == "zhCN" then guiL[zxc] = "战争之艺" elseif GetLocale() == "koKR" then guiL[zxc] = "전쟁의 예술" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arte de la Guerra" elseif GetLocale() == "ruRU" then guiL[zxc] = "Искусство войны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Art de la guerre" elseif GetLocale() == "deDE" then guiL[zxc] = "Kunst des Krieges" end
    ; zxc = "Asp. of Pack (out of combat)"
    if GetLocale() == "zhCN" then guiL[zxc] = "守护宠物(非战斗)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "무리의 상 (비전투)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aspecto del Rebaño (fuera de combate)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дух стаи (вне боя)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aspect du faucon (hors combat)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Aspekt des Rudels (außerhalb des Kampfes)" end
    ; zxc = "Aspect of Cheetah Always"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎豹守护总是开启" elseif GetLocale() == "koKR" then guiL[zxc] =
        "치타의 상 항상 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aspecto del Guepardo siempre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дух гепарда всегда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aspect du guépard toujours" elseif GetLocale() == "deDE" then guiL[zxc] = "Aspekt des Geparden immer" end
    ; zxc = "Aspect of Cheetah Weave"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎豹守护交错" elseif GetLocale() == "koKR" then guiL[zxc] =
        "치타의 상 교차 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aspecto del Guepardo entrelazado" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дух гепарда вплетенный" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aspect du guépard tissé" elseif GetLocale() == "deDE" then guiL[zxc] = "Aspekt des Geparden weben" end
    ; zxc = "Aspect of the Viper"
    if GetLocale() == "zhCN" then guiL[zxc] = "毒蛇守护" elseif GetLocale() == "koKR" then guiL[zxc] = "독사의 상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aspecto de la Víbora" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дух гадюки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aspect de la vipère" elseif GetLocale() == "deDE" then guiL[zxc] = "Aspekt der Viper" end
    ; zxc = "Attempt HS Cancelling"
    if GetLocale() == "zhCN" then guiL[zxc] = "尝试取消英勇打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "영웅의 일격 취소 시도" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Intentar cancelar Golpe heroico" elseif GetLocale() == "ruRU" then guiL[zxc] = "Попытка отмены удара героя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Annuler les coups héroïques" elseif GetLocale() == "deDE" then guiL[zxc] = "Versuch HS Abbruch" end
    ; zxc = "Auras"
    if GetLocale() == "zhCN" then guiL[zxc] = "光环" elseif GetLocale() == "koKR" then guiL[zxc] = "오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Auras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ауры" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Auras" elseif GetLocale() == "deDE" then guiL[zxc] = "Auren" end
    ; zxc = "Auto Beacon"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动圣疗光环" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 성스러운 십자가" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sello de Luz automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Светящийся Яростный" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sceau de lumière automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Siegel" end
    ; zxc = "Auto Blink"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动闪现" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 점멸" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Parpadeo automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Мерцание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Transfert automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto blinken" end
    ; zxc = "Auto Blood Tap"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动鲜血分流" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 피의 흡수" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Toma de sangre automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Кровавый удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sang automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Bluttap" end
    ; zxc = "Auto Cooldowns"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动冷却" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 쿨다운" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reutilización automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Кулдауны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cooldowns automatiques" elseif GetLocale() == "deDE" then guiL[zxc] = "Automatische Abklingzeiten" end
    ; zxc = "Auto Decurse"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动驱散" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Deshechizo automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Рассеивание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dissipation automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Entfernen" end
    ; zxc = "Auto Dispel"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动驱散" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Deshechizo automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Рассеивание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dissipation automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Entfernen" end
    ; zxc = "Auto Enrag"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动激怒" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 격노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Enfurecimiento automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Ярость" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enrager automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Wutanfall" end
    ; zxc = "Auto Eviscerate"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动剔骨" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 갈기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Eviscerar automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Потрошение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Eviscérer automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Ausweiden" end
    ; zxc = "Auto Fear"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动恐惧" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 공포" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Miedo automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Страх" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Peur automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Furcht" end
    ; zxc = "Auto Fel Domination"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动恶魔支配" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 지배" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dominación vil automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Подчинение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Domination automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Teufelsbeherrschung" end
    ; zxc = "Auto Feral Charge"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动猛禽一击" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 돌진" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Carga feral automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Лютый удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Charge automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Wilder Stoß" end
    ; zxc = "Auto Growl"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动低吼" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 울부짖기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Gruñido automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Рык" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rugissement automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Knurren" end
    ; zxc = "Auto Heal %"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动治疗 %" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 치유 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sanación automática %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Лечение %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soin automatique %" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Heilung %" end
    ; zxc = "Auto Heal"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 치유" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sanación automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Лечение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soin automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Heilung" end
    ; zxc = "Auto Interact"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动交互" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 상호작용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interacción automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Взаимодействие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interaction automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Interagieren" end
    ; zxc = "Auto Kick"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动脚踢" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 발차기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Patada automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Пинок" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de pied automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Tritt" end
    ; zxc = "Auto Multibox"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动多开" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 멀티박스" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Multibox automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Мультибокс" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Multibox automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Multibox" end
    ; zxc = "Auto Silence"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动沉默" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 침묵" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Silencio automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Безмолвие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Silence automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Stille" end
    ; zxc = "Auto Spell Reflect"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动法术反射" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 주문 반사" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reflejo de hechizos automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Отражение заклинаний" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réflexion automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Zauberreflexion" end
    ; zxc = "Auto Start Questing"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动开始任务" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 퀘스트 시작" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comienzo de misión automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Начало заданий" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Démarrage automatique des quêtes" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Queststart" end
    ; zxc = "Auto Stealth Out of Combat"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动潜行" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 은신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sigilo automático fuera de combate" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Незаметность вне боя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Camouflage automatique hors combat" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auto Verstohlenheit außerhalb des Kampfes" end
    ; zxc = "Auto Summon"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动召唤" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 소환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Invocación automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Призыв" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Invocation automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Beschwörung" end
    ; zxc = "Auto Taunt"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动嘲讽" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 도발" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Burla automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Провокация" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Provocation automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Spott" end
    ; zxc = "Auto Tiger's Fury"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动猛虎之怒" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 호랑이의 격노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Furia del tigre automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Ярость тигра" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Fureur du tigre automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Tigeraufschrei" end
    ; zxc = "Auto target for threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动目标威胁" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 대상 위협" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Objetivo automático para amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто цель для угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cible automatique pour la menace" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Ziel für Bedrohung" end
    ; zxc = "AutoHeal %"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动治疗 %" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 치유 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AutoCuración %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Лечение %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AutoSoins %" elseif GetLocale() == "deDE" then guiL[zxc] = "AutoHeilung %" end
    ; zxc = "AutoHeal"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 치유" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AutoCuración" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Лечение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AutoSoins" elseif GetLocale() == "deDE" then guiL[zxc] = "AutoHeilung" end
    ; zxc = "AutoLoot"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动拾取" elseif GetLocale() == "koKR" then guiL[zxc] = "자동 전리품 획득" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Botín automático" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Добыча" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Butin automatique" elseif GetLocale() == "deDE" then guiL[zxc] = "Auto Plündern" end
    ; zxc = "AutoStart Battleground Bot"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动开启战场机器人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 시작 전장 봇" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AutoIniciar Bot de Campo de Batalla" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Запуск Поле Боя Бот" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AutoDémarrer Bot de Champ de Bataille" elseif GetLocale() == "deDE" then guiL[zxc] =
        "AutoStart Schlachtfeld Bot" end
    ; zxc = "AutoStart Grind"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动开启打怪" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 시작 그린드" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AutoIniciar Moler" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Запуск Землекоп" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AutoDémarrer Grind" elseif GetLocale() == "deDE" then guiL[zxc] = "AutoStart Grind" end
    ; zxc = "AutoStart Rotation ONLY"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动开启仅旋转" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 시작 회전 전용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AutoIniciar Rotación ÚNICAMENTE" elseif GetLocale() == "ruRU" then guiL[zxc] = "Авто Запуск Только Поворот" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AutoDémarrer Rotation SEULEMENT" elseif GetLocale() == "deDE" then guiL[zxc] = "AutoStart Rotation NUR" end
    ; zxc = "Avenger's Shield this many"
    if GetLocale() == "zhCN" then guiL[zxc] = "复仇者之盾这么多" elseif GetLocale() == "koKR" then guiL[zxc] =
        "응징의 방패 이만큼" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo del Vengador esta cantidad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит Мстителя это много" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier du vengeur ce nombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Rächerschild so viele" end
    ; zxc = "Avenging Wrath friendly hp"
    if GetLocale() == "zhCN" then guiL[zxc] = "复仇之怒友好血量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "응징의 격노 친구 hp" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cólera vengadora salud amistosa" elseif GetLocale() == "ruRU" then guiL[zxc] = "Гнев карателя дружественный hp" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Colère vengeresse hp amical" elseif GetLocale() == "deDE" then guiL[zxc] = "Zorn der Vergeltung freundliche hp" end
    ; zxc = "Avoid water"
    if GetLocale() == "zhCN" then guiL[zxc] = "避开水" elseif GetLocale() == "koKR" then guiL[zxc] = "물 피하기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Evitar agua" elseif GetLocale() == "ruRU" then guiL[zxc] = "Избегать воды" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Éviter l'eau" elseif GetLocale() == "deDE" then guiL[zxc] = "Wasser vermeiden" end
    ; zxc = "Backstab"
    if GetLocale() == "zhCN" then guiL[zxc] = "背刺" elseif GetLocale() == "koKR" then guiL[zxc] = "백스탯" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Puñalada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар в спину" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Attaque sournoise" elseif GetLocale() == "deDE" then guiL[zxc] = "Rückstab" end
    ; zxc = "Balance"
    if GetLocale() == "zhCN" then guiL[zxc] = "平衡" elseif GetLocale() == "koKR" then guiL[zxc] = "균형" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Equilibrio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Баланс" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Équilibre" elseif GetLocale() == "deDE" then guiL[zxc] = "Balance" end
    ; zxc = "Barkskin @ Hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "树皮@血量%" elseif GetLocale() == "koKR" then guiL[zxc] = "나무껍질 @ Hp%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Piel de roble @ Hp%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кора @ Hp%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Peau de sylve @ Hp%" elseif GetLocale() == "deDE" then guiL[zxc] = "Baumrinde @ Hp%" end
    ; zxc = "Bash Interrupt"
    if GetLocale() == "zhCN" then guiL[zxc] = "重击打断" elseif GetLocale() == "koKR" then guiL[zxc] = "바실 인터럽트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aturdimiento Interrumpir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оглушить прерывание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interruption de Coup de bouclier" elseif GetLocale() == "deDE" then guiL[zxc] = "Einschüchtern Unterbrechen" end
    ; zxc = "Bash for Threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "重击威胁" elseif GetLocale() == "koKR" then guiL[zxc] = "바실 위협" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aturdimiento para amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оглушить для угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de bouclier pour la menace" elseif GetLocale() == "deDE" then guiL[zxc] = "Einschüchtern für Bedrohung" end
    ; zxc = "Battle Stance"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗姿态" elseif GetLocale() == "koKR" then guiL[zxc] = "전투 태세" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Actitud de batalla" elseif GetLocale() == "ruRU" then guiL[zxc] = "Боевая стойка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Posture de combat" elseif GetLocale() == "deDE" then guiL[zxc] = "Kampfhaltung" end
    ; zxc = "Battlemaster (slot13)"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗大师 (slot13)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전투의달인 (slot13)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maestro de batalla (slot13)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Боевой мастер (slot13)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Maître de guerre (slot13)" elseif GetLocale() == "deDE" then guiL[zxc] = "Kampfmeister (slot13)" end
    ; zxc = "Battlemaster (slot14)"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗大师 (slot14)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전투의달인 (slot14)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maestro de batalla (slot14)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Боевой мастер (slot14)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Maître de guerre (slot14)" elseif GetLocale() == "deDE" then guiL[zxc] = "Kampfmeister (slot14)" end
    ; zxc = "Battlemaster Name"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗大师名称" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전투의달인 이름" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre del maestro de batalla" elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя боевого мастера" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du maître de guerre" elseif GetLocale() == "deDE" then guiL[zxc] = "Name des Kampfmeisters" end
    ; zxc = "Battlemaster Name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗大师名称:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전투의달인 이름:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre del maestro de batalla:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя боевого мастера:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du maître de guerre:" elseif GetLocale() == "deDE" then guiL[zxc] = "Name des Kampfmeisters:" end
    ; zxc = "Bear Form"
    if GetLocale() == "zhCN" then guiL[zxc] = "熊形态" elseif GetLocale() == "koKR" then guiL[zxc] = "곰 변신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de oso" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облик медведя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'ours" elseif GetLocale() == "deDE" then guiL[zxc] = "Bärengestalt" end
    ; zxc = "Bear form @ #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "熊形态 @ #敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "곰 변신 @ #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de oso @ #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облик медведя @ #врагов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'ours @ #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Bärengestalt @ #Feinden" end
    ; zxc = "Bear form @ Hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "熊形态 @ 血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "곰 변신 @ 체력%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de oso @ Vida%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облик медведя @ ХП%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'ours @ PV%" elseif GetLocale() == "deDE" then guiL[zxc] = "Bärengestalt @ HP%" end
    ; zxc = "Bear"
    if GetLocale() == "zhCN" then guiL[zxc] = "熊" elseif GetLocale() == "koKR" then guiL[zxc] = "곰" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Oso" elseif GetLocale() == "ruRU" then guiL[zxc] = "Медведь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ours" elseif GetLocale() == "deDE" then guiL[zxc] = "Bär" end
    ; zxc = "Berserk #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂暴 #敌人" elseif GetLocale() == "koKR" then guiL[zxc] = "광폭화 #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Furia #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Берсерк #врагов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Furie #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Berserker #Feinde" end
    ; zxc = "Berserker Stance"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂暴姿态" elseif GetLocale() == "koKR" then guiL[zxc] = "광폭화 태세" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Actitud de furia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Стойка берсерка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Posture de furie" elseif GetLocale() == "deDE" then guiL[zxc] = "Berserkerhaltung" end
    ; zxc = "Big Cooldowns"
    if GetLocale() == "zhCN" then guiL[zxc] = "大冷却" elseif GetLocale() == "koKR" then guiL[zxc] = "큰 재사용 대기시간" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Grandes tiempos de reutilización" elseif GetLocale() == "ruRU" then guiL[zxc] = "Большие перезарядки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Grands temps de recharge" elseif GetLocale() == "deDE" then guiL[zxc] = "Große Abklingzeiten" end
    ; zxc = "Bite @ enemy hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "咬击 @ 敌人血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "물기 @ 적 체력%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mordisco @ vida enemiga%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Укус @ ХП врага%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Morsure @ PV ennemi%" elseif GetLocale() == "deDE" then guiL[zxc] = "Beißen @ Feind HP%" end
    ; zxc = "Bite to kill only"
    if GetLocale() == "zhCN" then guiL[zxc] = "只咬杀" elseif GetLocale() == "koKR" then guiL[zxc] = "죽이기만 물기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mordisco para matar solo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Укус только для убийства" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Morsure pour tuer seulement" elseif GetLocale() == "deDE" then guiL[zxc] = "Nur beißen um zu töten" end
    ; zxc = "Bladestorm X Units"
    if GetLocale() == "zhCN" then guiL[zxc] = "剑刃风暴 X 单位" elseif GetLocale() == "koKR" then guiL[zxc] =
        "칼날 폭풍 X 유닛" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tormenta de hojas X unidades" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вихрь клинков X юнитов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tempête de lames X unités" elseif GetLocale() == "deDE" then guiL[zxc] = "Klingensturm X Einheiten" end
    ; zxc = "Blast Wave"
    if GetLocale() == "zhCN" then guiL[zxc] = "冲击波" elseif GetLocale() == "koKR" then guiL[zxc] = "작열 폭발" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ola expansiva" elseif GetLocale() == "ruRU" then guiL[zxc] = "Взрывная волна" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vague explosive" elseif GetLocale() == "deDE" then guiL[zxc] = "Schockwelle" end
    ; zxc = "Blessing of Sacrifice"
    if GetLocale() == "zhCN" then guiL[zxc] = "牺牲祝福" elseif GetLocale() == "koKR" then guiL[zxc] = "희생의 축복" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Bendición de sacrificio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Благословение жертвенности" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bénédiction du sacrifice" elseif GetLocale() == "deDE" then guiL[zxc] = "Segen der Opferung" end
    ; zxc = "Blessings (names separated by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "祝福 (名字用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "축복 (이름 쉼표로 분리)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Bendiciones (nombres separados por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Благословения (имена разделены запятыми)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bénédictions (noms séparés par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Segen (Namen durch Komma getrennt)" end
    ; zxc = "Blood Boil >= #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "血之疫病 >= #敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "피의 역병 >= #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ebullición de sangre >= #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кровавая кипень >= #врагов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ébullition de sang >= #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutkochen >= #Feinde" end
    ; zxc = "Blood Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "血系法术" elseif GetLocale() == "koKR" then guiL[zxc] = "피의 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos de sangre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кровавые заклинания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts de sang" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutzauber" end
    ; zxc = "Blood"
    if GetLocale() == "zhCN" then guiL[zxc] = "血系" elseif GetLocale() == "koKR" then guiL[zxc] = "피의" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sangre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кровь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sang" elseif GetLocale() == "deDE" then guiL[zxc] = "Blut" end
    ; zxc = "BloodStrike for Desolation"
    if GetLocale() == "zhCN" then guiL[zxc] = "血之疫病用血液打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "피의 역병에 피의 찌르기 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de sangre para Desolación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кровавый удар для Опустошения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe de sang pour Désolation" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutstoß für Verwüstung" end
    ; zxc = "Bloodrage on cd"
    if GetLocale() == "zhCN" then guiL[zxc] = "血性狂暴冷却中" elseif GetLocale() == "koKR" then guiL[zxc] =
        "피의 분노 사용 가능" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ira de sangre en cd" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кровавая ярость на восстановлении" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rage de sang en cd" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutrausch auf Abklingzeit" end
    ; zxc = "BoP friendly @ hp"
    if GetLocale() == "zhCN" then guiL[zxc] = "保护友方 @ 血量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "우호적 대상에게 보호막 사용 @ 생명력" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "PdP aliado @ hp" elseif GetLocale() == "ruRU" then guiL[zxc] = "Защита дружественной цели @ hp" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier protecteur allié @ hp" elseif GetLocale() == "deDE" then guiL[zxc] = "BoP freundlich @ hp" end
    ; zxc = "Buildings"
    if GetLocale() == "zhCN" then guiL[zxc] = "建筑" elseif GetLocale() == "koKR" then guiL[zxc] = "건물" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Edificios" elseif GetLocale() == "ruRU" then guiL[zxc] = "Здания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bâtiments" elseif GetLocale() == "deDE" then guiL[zxc] = "Gebäude" end
    ; zxc = "Caster/Moonkin Form"
    if GetLocale() == "zhCN" then guiL[zxc] = "施法/枭兽形态" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시전/달빛야수 변신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de lanzador/Chamán lunar" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Форма заклинателя/Лунного совуха" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme de lanceur/Moonkin" elseif GetLocale() == "deDE" then guiL[zxc] = "Zauberer/Mondkin Form" end
    ; zxc = "Cat (RAKE ONLY)"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎豹 (只用扫击)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "표범 (오로라만 사용)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Gato (RAKE ONLY)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кошка (ТОЛЬКО РЫК)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Félin (RAKE ONLY)" elseif GetLocale() == "deDE" then guiL[zxc] = "Katze (RAKE ONLY)" end
    ; zxc = "Cat Form"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎豹形态" elseif GetLocale() == "koKR" then guiL[zxc] = "표범 변신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de gato" elseif GetLocale() == "ruRU" then guiL[zxc] = "Форма кошки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme de félin" elseif GetLocale() == "deDE" then guiL[zxc] = "Katzen Form" end
    ; zxc = "Cat"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎豹" elseif GetLocale() == "koKR" then guiL[zxc] = "표범" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Gato" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кошка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Félin" elseif GetLocale() == "deDE" then guiL[zxc] = "Katze" end
    ; zxc = "Cheap Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "偷袭" elseif GetLocale() == "koKR" then guiL[zxc] = "비열한 일격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe bajo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Низко лежащий жертвы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup bas" elseif GetLocale() == "deDE" then guiL[zxc] = "Fieser Trick" end
    ; zxc = "Circle Path"
    if GetLocale() == "zhCN" then guiL[zxc] = "圆形路径" elseif GetLocale() == "koKR" then guiL[zxc] = "원형 경로" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ruta circular" elseif GetLocale() == "ruRU" then guiL[zxc] = "Круговой путь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chemin circulaire" elseif GetLocale() == "deDE" then guiL[zxc] = "Kreis Pfad" end
    ; zxc = "Class Rotation"
    if GetLocale() == "zhCN" then guiL[zxc] = "职业旋转" elseif GetLocale() == "koKR" then guiL[zxc] = "직업 회전" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rotación de clase" elseif GetLocale() == "ruRU" then guiL[zxc] = "Классовая ротация" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rotation de classe" elseif GetLocale() == "deDE" then guiL[zxc] = "Klassen Rotation" end
    ; zxc = "Classic Battlegrounds"
    if GetLocale() == "zhCN" then guiL[zxc] = "经典战场" elseif GetLocale() == "koKR" then guiL[zxc] = "고전 전장" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Campos de batalla clásicos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Классические поля боя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Champs de bataille classiques" elseif GetLocale() == "deDE" then guiL[zxc] = "Klassische Schlachtfelder" end
    ; zxc = "Cleave"
    if GetLocale() == "zhCN" then guiL[zxc] = "顺劈斩" elseif GetLocale() == "koKR" then guiL[zxc] = "베기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aplastar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рассекающий удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cleave" elseif GetLocale() == "deDE" then guiL[zxc] = "Cleave" end
    ; zxc = "Click to record Z axis+: "
    if GetLocale() == "zhCN" then guiL[zxc] = "点击记录Z轴+: " elseif GetLocale() == "koKR" then guiL[zxc] =
        "클릭하여 Z축 + 레코딩: " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Haga clic para grabar el eje Z +: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Нажмите, чтобы записать ось Z +: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cliquez pour enregistrer l'axe Z +: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Klicken Sie, um die Z-Achse + aufzuzeichnen: " end
    ; zxc = "Cloak of Shadows @ HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "影遁 @ 血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "그림자 망토 @ HP%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Manto de las Sombras @ HP%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Плащ Теней @ HP%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cape d'ombres @ HP%" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenmantel @ HP%" end
    ; zxc = "Combustion"
    if GetLocale() == "zhCN" then guiL[zxc] = "燃烧" elseif GetLocale() == "koKR" then guiL[zxc] = "작열" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Combustión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сгорание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Combustion" elseif GetLocale() == "deDE" then guiL[zxc] = "Verbrennung" end
    ; zxc = "Command R1"
    if GetLocale() == "zhCN" then guiL[zxc] = "命令 R1" elseif GetLocale() == "koKR" then guiL[zxc] = "명령 R1" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comando R1" elseif GetLocale() == "ruRU" then guiL[zxc] = "Команда R1" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Commande R1" elseif GetLocale() == "deDE" then guiL[zxc] = "Befehl R1" end
    ; zxc = "Command"
    if GetLocale() == "zhCN" then guiL[zxc] = "命令" elseif GetLocale() == "koKR" then guiL[zxc] = "명령" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comando" elseif GetLocale() == "ruRU" then guiL[zxc] = "Команда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Commande" elseif GetLocale() == "deDE" then guiL[zxc] = "Befehl" end
    ; zxc = "Concentration Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "专注光环" elseif GetLocale() == "koKR" then guiL[zxc] = "집중 오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de concentración" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура концентрации" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de concentration" elseif GetLocale() == "deDE" then guiL[zxc] = "Aura der Konzentration" end
    ; zxc = "Concussive Blow @ Enemy %"
    if GetLocale() == "zhCN" then guiL[zxc] = "震荡猛击 @ 敌人%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "충격의 일격 @ 적 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe conmocionante @ Enemigo %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оглушающий удар @ Противник %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de boule @ Ennemi %" elseif GetLocale() == "deDE" then guiL[zxc] = "Erschütternder Schlag @ Feind %" end
    ; zxc = "Concussive Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "震荡射击" elseif GetLocale() == "koKR" then guiL[zxc] = "충격 사격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Disparo conmocionante" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оглушающий выстрел" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de choc" elseif GetLocale() == "deDE" then guiL[zxc] = "Erschütternder Schuss" end
    ; zxc = "Concussive gain back threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "震荡获得仇恨" elseif GetLocale() == "koKR" then guiL[zxc] =
        "충격의 일격 적대성" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe conmocionante recuperar amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Оглушающий удар восстановление угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de boule récupérer la menace" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Erschütternder Schlag wieder Bedrohung" end
    ; zxc = "Cone of Cold"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰锥术" elseif GetLocale() == "koKR" then guiL[zxc] = "냉기 돌풍" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cono de frío" elseif GetLocale() == "ruRU" then guiL[zxc] = "Конус холода" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cône de froid" elseif GetLocale() == "deDE" then guiL[zxc] = "Kältekegel" end
    ; zxc = "Consumables"
    if GetLocale() == "zhCN" then guiL[zxc] = "消耗品" elseif GetLocale() == "koKR" then guiL[zxc] = "소비용품" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Consumibles" elseif GetLocale() == "ruRU" then guiL[zxc] = "Расходуемые" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Consommables" elseif GetLocale() == "deDE" then guiL[zxc] = "Verbrauchbares" end
    ; zxc = "Cooldowns"
    if GetLocale() == "zhCN" then guiL[zxc] = "冷却" elseif GetLocale() == "koKR" then guiL[zxc] = "재사용 대기시간" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tiempo de reutilización" elseif GetLocale() == "ruRU" then guiL[zxc] = "Перезарядка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Temps de recharge" elseif GetLocale() == "deDE" then guiL[zxc] = "Abklingzeit" end
    ; zxc = "Corpse Explode #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "尸体爆炸 #敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시체 폭발 #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Explosión de cadáver #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Взрыв трупа #враги" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Explosion de cadavre #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Leichnam explodiert #Feinde" end
    ; zxc = "Crusader always"
    if GetLocale() == "zhCN" then guiL[zxc] = "十字军总是" elseif GetLocale() == "koKR" then guiL[zxc] = "성전사 항상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cruzado siempre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рыцарь всегда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Croisé toujours" elseif GetLocale() == "deDE" then guiL[zxc] = "Kreuzfahrer immer" end
    ; zxc = "Crusader for debuff only"
    if GetLocale() == "zhCN" then guiL[zxc] = "十字军仅用于减益" elseif GetLocale() == "koKR" then guiL[zxc] =
        "성전사는 디버프에만" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cruzado para debuff sólo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рыцарь только для дебаффа" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Croisé pour le debuff seulement" elseif GetLocale() == "deDE" then guiL[zxc] = "Kreuzfahrer für Debuff nur" end
    ; zxc = "Current Player Coords"
    if GetLocale() == "zhCN" then guiL[zxc] = "当前玩家坐标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "현재 플레이어 좌표" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Coordenadas del jugador actual" elseif GetLocale() == "ruRU" then guiL[zxc] = "Текущие координаты игрока" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coordonnées du joueur actuel" elseif GetLocale() == "deDE" then guiL[zxc] = "Aktuelle Spielerkoordinaten" end
    ; zxc = "Curse of Agony"
    if GetLocale() == "zhCN" then guiL[zxc] = "痛苦诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "고통의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de agonía" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие агонии" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction d'agonie" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Pein" end
    ; zxc = "Curse of Recklessness"
    if GetLocale() == "zhCN" then guiL[zxc] = "鲁莽诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "무모함의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de temeridad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие безрассудства" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction de témérité" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Tollkühnheit" end
    ; zxc = "Curse of Shadow"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "암흑의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de las Sombras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие Тьмы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction d'ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Schatten" end
    ; zxc = "Curse of Tongues"
    if GetLocale() == "zhCN" then guiL[zxc] = "语言诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "언어의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de las lenguas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие языка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction des langages" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Sprachen" end
    ; zxc = "Curse of Weakness"
    if GetLocale() == "zhCN" then guiL[zxc] = "虚弱诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "약화의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de debilidad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие слабости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction de faiblesse" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Schwäche" end
    ; zxc = "Curse of the Elements"
    if GetLocale() == "zhCN" then guiL[zxc] = "元素诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "원소의 저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldición de los elementos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятие стихий" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédiction des éléments" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Elemente" end
    ; zxc = "Curses"
    if GetLocale() == "zhCN" then guiL[zxc] = "诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "저주" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Maldiciones" elseif GetLocale() == "ruRU" then guiL[zxc] = "Проклятия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Malédictions" elseif GetLocale() == "deDE" then guiL[zxc] = "Flüche" end
    ; zxc = "DPS Trinket (slot13)"
    if GetLocale() == "zhCN" then guiL[zxc] = "DPS饰品 (slot13)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "DPS 장신구 (slot13)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Abalorio DPS (slot13)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аксессуар урона (slot13)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bijou DPS (slot13)" elseif GetLocale() == "deDE" then guiL[zxc] = "DPS Schmuckstück (slot13)" end
    ; zxc = "DPS Trinket (slot14)"
    if GetLocale() == "zhCN" then guiL[zxc] = "DPS饰品 (slot14)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "DPS 장신구 (slot14)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Abalorio DPS (slot14)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аксессуар урона (slot14)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bijou DPS (slot14)" elseif GetLocale() == "deDE" then guiL[zxc] = "DPS Schmuckstück (slot14)" end
    ; zxc = "Dagger"
    if GetLocale() == "zhCN" then guiL[zxc] = "匕首" elseif GetLocale() == "koKR" then guiL[zxc] = "단검" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Daga" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кинжал" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dague" elseif GetLocale() == "deDE" then guiL[zxc] = "Dolch" end
    ; zxc = "Damage"
    if GetLocale() == "zhCN" then guiL[zxc] = "伤害" elseif GetLocale() == "koKR" then guiL[zxc] = "데미지" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Daño" elseif GetLocale() == "ruRU" then guiL[zxc] = "Урон" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dégâts" elseif GetLocale() == "deDE" then guiL[zxc] = "Schaden" end
    ; zxc = "Dampen Magic"
    if GetLocale() == "zhCN" then guiL[zxc] = "魔法抑制" elseif GetLocale() == "koKR" then guiL[zxc] = "마법 차단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Atenuar magia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Затухание магии" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Atténuation de la magie" elseif GetLocale() == "deDE" then guiL[zxc] = "Magie dämpfen" end
    ; zxc = "Dancing Rune #enemies >= "
    if GetLocale() == "zhCN" then guiL[zxc] = "符文刃舞 #敌人 >= " elseif GetLocale() == "koKR" then guiL[zxc] =
        "무용의 룬 #적 >= " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rune de baile #enemigos >= " elseif GetLocale() == "ruRU" then guiL[zxc] = "Танцующая руна #врагов >= " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rune de danse #ennemis >= " elseif GetLocale() == "deDE" then guiL[zxc] = "Tanzende Rune #Feinde >= " end
    ; zxc = "Dark Command"
    if GetLocale() == "zhCN" then guiL[zxc] = "黑暗命令" elseif GetLocale() == "koKR" then guiL[zxc] = "어둠의 명령" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mando oscuro" elseif GetLocale() == "ruRU" then guiL[zxc] = "Темное приказание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Commande ténébreuse" elseif GetLocale() == "deDE" then guiL[zxc] = "Dunkles Gebot" end
    ; zxc = "Dark Pact %"
    if GetLocale() == "zhCN" then guiL[zxc] = "黑暗契约 % " elseif GetLocale() == "koKR" then guiL[zxc] = "암흑 계약 % " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pacto oscuro % " elseif GetLocale() == "ruRU" then guiL[zxc] = "Темный договор % " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pacte noir % " elseif GetLocale() == "deDE" then guiL[zxc] = "Dunkler Pakt % " end
    ; zxc = "Death Grip Interrupt"
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡之握打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 손아귀 차단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Agarre de la muerte Interrumpir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Схватка с смертью Прерывание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Saisie de la mort Interruption" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesschlag Unterbrechen" end
    ; zxc = "Death Strike when health <="
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡打击当血量 <=" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 일격 생명력 <=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de la muerte cuando salud <=" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Удар смерти когда здоровье <=" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe mortelle quand la vie <=" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesschlag wenn Gesundheit <=" end
    ; zxc = "DeathCoil when power >="
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡缠绕当能量 >=" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 손아귀 마력 >=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mordedura de la muerte cuando poder >=" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Смертоносный жгут когда энергия >=" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Voile mortel quand puissance >=" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesmantel wenn Kraft >=" end
    ; zxc = "Deathcoil on enemy hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡缠绕在敌人血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 손아귀 적 hp%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mordedura de la muerte en enemigo hp%" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Смертоносный жгут на врага hp%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Voile mortel sur ennemi hp%" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesmantel auf Gegner hp%" end
    ; zxc = "Deathcoil on my hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡缠绕在我的血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 손아귀 내 hp%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mordedura de la muerte en mi hp%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Смертоносный жгут на моего hp%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Voile mortel sur ma hp%" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesmantel auf mein hp%" end
    ; zxc = "Decurse"
    if GetLocale() == "zhCN" then guiL[zxc] = "解除诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Decurse" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рассеивание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dissiper" elseif GetLocale() == "deDE" then guiL[zxc] = "Entfernen" end
    ; zxc = "Default Behavior"
    if GetLocale() == "zhCN" then guiL[zxc] = "默认行为" elseif GetLocale() == "koKR" then guiL[zxc] = "기본 동작" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comportamiento por defecto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Поведение по умолчанию" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Comportement par défaut" elseif GetLocale() == "deDE" then guiL[zxc] = "Standardverhalten" end
    ; zxc = "Default Settings"
    if GetLocale() == "zhCN" then guiL[zxc] = "默认设置" elseif GetLocale() == "koKR" then guiL[zxc] = "기본 설정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Configuración por defecto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Настройки по умолчанию" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Paramètres par défaut" elseif GetLocale() == "deDE" then guiL[zxc] = "Standardeinstellungen" end
    ; zxc = "Defensive Stance"
    if GetLocale() == "zhCN" then guiL[zxc] = "防御姿态" elseif GetLocale() == "koKR" then guiL[zxc] = "방어 태세" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Actitud defensiva" elseif GetLocale() == "ruRU" then guiL[zxc] = "Стойка защиты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Posture défensive" elseif GetLocale() == "deDE" then guiL[zxc] = "Verteidigungshaltung" end
    ; zxc = "Defensive"
    if GetLocale() == "zhCN" then guiL[zxc] = "防御" elseif GetLocale() == "koKR" then guiL[zxc] = "방어" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Defensivo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Защита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Défensif" elseif GetLocale() == "deDE" then guiL[zxc] = "Verteidigung" end
    ; zxc = "Defensives"
    if GetLocale() == "zhCN" then guiL[zxc] = "防御" elseif GetLocale() == "koKR" then guiL[zxc] = "방어" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Defensivos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Защита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Défensifs" elseif GetLocale() == "deDE" then guiL[zxc] = "Verteidigung" end
    ; zxc = "Delete Items(separate by comma):"
    if GetLocale() == "zhCN" then guiL[zxc] = "删除物品(用逗号分隔):" elseif GetLocale() == "koKR" then guiL[zxc] =
        "삭제 아이템(쉼표로 구분):" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Eliminar objetos(separados por comas):" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Удалить предметы(разделить запятой):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Supprimer les objets(séparés par des virgules):" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Lösche Gegenstände(durch Komma getrennt):" end
    ; zxc = "Demo X Units"
    if GetLocale() == "zhCN" then guiL[zxc] = "演示X个单位" elseif GetLocale() == "koKR" then guiL[zxc] = "데모 X 유닛" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Demo X Unidades" elseif GetLocale() == "ruRU" then guiL[zxc] = "Демо X юнитов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Démonstration X unités" elseif GetLocale() == "deDE" then guiL[zxc] = "Demo X Einheiten" end
    ; zxc = "Desperate Prayer"
    if GetLocale() == "zhCN" then guiL[zxc] = "绝望祷言" elseif GetLocale() == "koKR" then guiL[zxc] = "절망의 기원" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Oración desesperada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отчаянный молитва" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Prière du désespoir" elseif GetLocale() == "deDE" then guiL[zxc] = "Verzweifeltes Gebet" end
    ; zxc = "Destruction"
    if GetLocale() == "zhCN" then guiL[zxc] = "毁灭" elseif GetLocale() == "koKR" then guiL[zxc] = "파괴" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Destrucción" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разрушение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Destruction" elseif GetLocale() == "deDE" then guiL[zxc] = "Zerstörung" end
    ; zxc = "Devotion Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "虔诚光环" elseif GetLocale() == "koKR" then guiL[zxc] = "기원의 오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de devoción" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура благочестия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de dévotion" elseif GetLocale() == "deDE" then guiL[zxc] = "Aura der Hingabe" end
    ; zxc = "Disable Auto Charge"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用自动充能" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자동 충전 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar carga automática" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить авто заряд" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la charge automatique" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Automatische Aufladung deaktivieren" end
    ; zxc = "Disable Collision"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用碰撞" elseif GetLocale() == "koKR" then guiL[zxc] = "충돌 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar colisión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить столкновение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la collision" elseif GetLocale() == "deDE" then guiL[zxc] = "Kollision deaktivieren" end
    ; zxc = "Disable Execute"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用斩杀" elseif GetLocale() == "koKR" then guiL[zxc] = "마무리 일격 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar ejecutar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить выполнение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver l'exécution" elseif GetLocale() == "deDE" then guiL[zxc] = "Ausführen deaktivieren" end
    ; zxc = "Disable Heroic Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用英勇打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "영웅의 일격 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar golpe heroico" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить героический удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la frappe héroïque" elseif GetLocale() == "deDE" then guiL[zxc] = "Heldenhafter Stoß deaktivieren" end
    ; zxc = "Disable Local Nav Unstuck"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用本地导航卡住" elseif GetLocale() == "koKR" then guiL[zxc] =
        "로컬 네비게이션 고정 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar navegación local atascada" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Отключить локальную навигацию" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la navigation locale" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Lokale Nav-Verhängnis deaktivieren" end
    ; zxc = "Disable Whirlwind"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用旋风斩" elseif GetLocale() == "koKR" then guiL[zxc] =
        "소용돌이치는 칼날 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar remolino" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить вихрь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la tempête de lames" elseif GetLocale() == "deDE" then guiL[zxc] = "Wirbelwind deaktivieren" end
    ; zxc = "Disable facing"
    if GetLocale() == "zhCN" then guiL[zxc] = "禁用面向" elseif GetLocale() == "koKR" then guiL[zxc] = "향상 비활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desactivar orientación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отключить ориентацию" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désactiver la direction" elseif GetLocale() == "deDE" then guiL[zxc] = "Ausrichtung deaktivieren" end
    ; zxc = "Disarm Bladestorm"
    if GetLocale() == "zhCN" then guiL[zxc] = "解除剑刃风暴" elseif GetLocale() == "koKR" then guiL[zxc] =
        "칼날 폭풍 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desarmar tormenta de cuchillas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разоружить бурю клинков" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désarmer la tempête de lames" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutsturm entwaffnen" end
    ; zxc = "Disarm Melee Cds"
    if GetLocale() == "zhCN" then guiL[zxc] = "解除近战冷却" elseif GetLocale() == "koKR" then guiL[zxc] =
        "근접 쿨다운 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desarmar cd cuerpo a cuerpo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разоружить ближний бой" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désarmer les Cds au corps à corps" elseif GetLocale() == "deDE" then guiL[zxc] = "Nahkampf-CDs entwaffnen" end
    ; zxc = "Disarm on CD"
    if GetLocale() == "zhCN" then guiL[zxc] = "解除冷却" elseif GetLocale() == "koKR" then guiL[zxc] = "쿨다운 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desarmar en cd" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разоружить по кд" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désarmer sur CD" elseif GetLocale() == "deDE" then guiL[zxc] = "Entwaffnen bei CD" end
    ; zxc = "Disarm when friendly below %"
    if GetLocale() == "zhCN" then guiL[zxc] = "友方血量低于%时解除" elseif GetLocale() == "koKR" then guiL[zxc] =
        "아군 체력이 % 이하일 때 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desarmar cuando aliado por debajo %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Разоружить, когда союзник ниже %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désarmer quand l'ami est en dessous de %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Entwaffnen, wenn freundlich unter %" end
    ; zxc = "Dispels only spell names on this list (Separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "只解除此列表中的法术名称（用逗号分隔）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 목록에있는 주문 이름 만 해제 (쉼표로 구분)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Despeja solo nombres de hechizos en esta lista (separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рассеивать только заклинания по этому списку (разделять запятой)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dissipe uniquement les noms de sorts sur cette liste (séparés par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Entfernt nur Zaubernamen auf dieser Liste (durch Komma trennen)" end
    ; zxc = "Dispersion %"
    if GetLocale() == "zhCN" then guiL[zxc] = "散魔% " elseif GetLocale() == "koKR" then guiL[zxc] = "산만함 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersión %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рассеивание %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dispersion %" elseif GetLocale() == "deDE" then guiL[zxc] = "Dispersion %" end
    ; zxc = "Display Spells Casted"
    if GetLocale() == "zhCN" then guiL[zxc] = "显示施放的法术" elseif GetLocale() == "koKR" then guiL[zxc] =
        "표시 주문 시전" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mostrar hechizos lanzados" elseif GetLocale() == "ruRU" then guiL[zxc] = "Показать заклинания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Afficher les sorts lancés" elseif GetLocale() == "deDE" then guiL[zxc] = "Zauber anzeigen" end
    ; zxc = "Divine Illumination"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣启示" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 계시" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Iluminación divina" elseif GetLocale() == "ruRU" then guiL[zxc] = "Божественное просвещение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Illumination divine" elseif GetLocale() == "deDE" then guiL[zxc] = "Göttliche Erleuchtung" end
    ; zxc = "Divine Sacrifice @ friendly hp below"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣牺牲 @友方血量低于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 희생 @ 아군 체력이 아래" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sacrificio divino @ aliado hp por debajo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Божественное жертвоприношение @ союзник hp ниже" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sacrifice divin @ hp amical en dessous de" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Göttliches Opfer @ freundlich hp unter" end
    ; zxc = "Divine Sacrifice @ self hp above"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣牺牲 @自身血量高于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 희생 @ 자신의 체력이 위" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sacrificio divino @ hp propio por encima" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Божественное жертвоприношение @ собственный hp выше" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sacrifice divin @ hp personnel au-dessus de" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Göttliches Opfer @ selbst hp über" end
    ; zxc = "Divine Sacrifice"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣牺牲" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 희생" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sacrificio divino" elseif GetLocale() == "ruRU" then guiL[zxc] = "Божественное жертвоприношение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sacrifice divin" elseif GetLocale() == "deDE" then guiL[zxc] = "Göttliches Opfer" end
    ; zxc = "Divine Shield %"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣盾术% " elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 보호막 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo divino %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит небес %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier divin %" elseif GetLocale() == "deDE" then guiL[zxc] = "Göttlicher Schild %" end
    ; zxc = "Divine Storm this many"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣风暴这么多" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 폭풍이 이렇게 많이" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tormenta divina esta cantidad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Божественный шторм это много" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tempête divine ce nombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Göttlicher Sturm diese viele" end
    ; zxc = "Do not intiate combat with:\n\(separated by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "不要与战斗:\n\(用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시작하지 않는 전투:\n\(쉼표로 구분)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No intiate combate con:\n\(separado por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Не начинать бой с:\n\(разделенные запятыми)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ne pas intiate combat avec:\n\(séparé par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Nicht intiate Kampf mit:\n\(durch Komma getrennt)" end
    ; zxc = "Dont Mail (Separate by Comma):"
    if GetLocale() == "zhCN" then guiL[zxc] = "不邮件(用逗号分隔):" elseif GetLocale() == "koKR" then guiL[zxc] =
        "메일하지 않습니다 (쉼표로 구분):" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No correo (separado por comas):" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Не почта (разделенные запятыми):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ne pas courrier (séparé par des virgules):" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Nicht Mail (durch Komma getrennt):" end
    ; zxc = "Dont Sell (Separate by Comma):"
    if GetLocale() == "zhCN" then guiL[zxc] = "不卖(用逗号分隔):" elseif GetLocale() == "koKR" then guiL[zxc] =
        "판매하지 않습니다 (쉼표로 구분):" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No vender (separado por comas):" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Не продавать (разделенные запятыми):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ne pas vendre (séparé par des virgules):" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Nicht verkaufen (durch Komma getrennt):" end
    ; zxc = "Dont use Drain Soul"
    if GetLocale() == "zhCN" then guiL[zxc] = "不使用吸取灵魂" elseif GetLocale() == "koKR" then guiL[zxc] =
        "드레인 소울 사용하지 않습니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No utilice Drenar alma" elseif GetLocale() == "ruRU" then guiL[zxc] = "Не использовать душу" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ne pas utiliser Drain Soul" elseif GetLocale() == "deDE" then guiL[zxc] = "Nicht verwenden Drain Soul" end
    ; zxc = "Dont use pet"
    if GetLocale() == "zhCN" then guiL[zxc] = "不使用宠物" elseif GetLocale() == "koKR" then guiL[zxc] =
        "애완동물 사용하지 않습니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No utilice mascota" elseif GetLocale() == "ruRU" then guiL[zxc] = "Не использовать питомца" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ne pas utiliser l'animal de compagnie" elseif GetLocale() == "deDE" then guiL[zxc] = "Nicht verwenden Haustier" end
    ; zxc = "Dots"
    if GetLocale() == "zhCN" then guiL[zxc] = "点" elseif GetLocale() == "koKR" then guiL[zxc] = "점" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Puntos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Точки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Points" elseif GetLocale() == "deDE" then guiL[zxc] = "Punkte" end
    ; zxc = "DrainLife %"
    if GetLocale() == "zhCN" then guiL[zxc] = "吸取生命 %" elseif GetLocale() == "koKR" then guiL[zxc] = "드레인 라이프 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Drenar vida %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Душа %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "DrainLife %" elseif GetLocale() == "deDE" then guiL[zxc] = "DrainLife %" end
    ; zxc = "DrainSoul %"
    if GetLocale() == "zhCN" then guiL[zxc] = "吸取灵魂 %" elseif GetLocale() == "koKR" then guiL[zxc] = "드레인 소울 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Drenar alma %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Душа %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "DrainSoul %" elseif GetLocale() == "deDE" then guiL[zxc] = "DrainSoul %" end
    ; zxc = "Draw Player name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "显示玩家名字:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "플레이어 이름 표시:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar nombre del jugador:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Нарисовать имя игрока:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner le nom du joueur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Zeichnen Sie den Spielernamen:" end
    ; zxc = "Draw deadzone"
    if GetLocale() == "zhCN" then guiL[zxc] = "显示死亡区域" elseif GetLocale() == "koKR" then guiL[zxc] =
        "사망 지대 그리기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar zona muerta" elseif GetLocale() == "ruRU" then guiL[zxc] = "Нарисовать мертвую зону" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner la zone morte" elseif GetLocale() == "deDE" then guiL[zxc] = "Zeichnen Sie die Todeszone" end
    ; zxc = "Drink: "
    if GetLocale() == "zhCN" then guiL[zxc] = "喝水: " elseif GetLocale() == "koKR" then guiL[zxc] = "음료: " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Bebida: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Напиток: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Boisson: " elseif GetLocale() == "deDE" then guiL[zxc] = "Trinken: " end
    ; zxc = "Dump Rage @"
    if GetLocale() == "zhCN" then guiL[zxc] = "释放怒气 @" elseif GetLocale() == "koKR" then guiL[zxc] = "무기류 덤프 @" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Descarga de la ira @" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сброс ярости @" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Décharge de rage @" elseif GetLocale() == "deDE" then guiL[zxc] = "Dump Rage @" end
    ; zxc = "Dungeon"
    if GetLocale() == "zhCN" then guiL[zxc] = "地下城" elseif GetLocale() == "koKR" then guiL[zxc] = "던전" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mazmorra" elseif GetLocale() == "ruRU" then guiL[zxc] = "Подземелье" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Donjon" elseif GetLocale() == "deDE" then guiL[zxc] = "Dungeon" end
    ; zxc = "Dynamic Objects"
    if GetLocale() == "zhCN" then guiL[zxc] = "动态物体" elseif GetLocale() == "koKR" then guiL[zxc] = "동적 객체" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Objetos dinámicos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Динамические объекты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Objets dynamiques" elseif GetLocale() == "deDE" then guiL[zxc] = "Dynamische Objekte" end
    ; zxc = "Earth Shock"
    if GetLocale() == "zhCN" then guiL[zxc] = "大地震击" elseif GetLocale() == "koKR" then guiL[zxc] = "대지 충격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Choque de tierra" elseif GetLocale() == "ruRU" then guiL[zxc] = "Земной шок" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Choc de terre" elseif GetLocale() == "deDE" then guiL[zxc] = "Erdschock" end
    ; zxc = "Earth Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "大地图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "대지 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tótem de tierra" elseif GetLocale() == "ruRU" then guiL[zxc] = "Земной тотем" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem de terre" elseif GetLocale() == "deDE" then guiL[zxc] = "Erde Totem" end
    ; zxc = "Edit Grind Points"
    if GetLocale() == "zhCN" then guiL[zxc] = "编辑磨点" elseif GetLocale() == "koKR" then guiL[zxc] = "편집 그린드 포인트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Editar puntos de molienda" elseif GetLocale() == "ruRU" then guiL[zxc] = "Изменить точки молотка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Modifier les points de meulage" elseif GetLocale() == "deDE" then guiL[zxc] = "Bearbeiten Sie Mahlzeiten" end
    ; zxc = "Edit"
    if GetLocale() == "zhCN" then guiL[zxc] = "编辑" elseif GetLocale() == "koKR" then guiL[zxc] = "편집" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Editar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Редактировать" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Modifier" elseif GetLocale() == "deDE" then guiL[zxc] = "Bearbeiten" end
    ; zxc = "Elemental Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "元素法术" elseif GetLocale() == "koKR" then guiL[zxc] = "원소 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos elementales" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заклинания стихий" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts élémentaires" elseif GetLocale() == "deDE" then guiL[zxc] = "Elementarzauber" end
    ; zxc = "Enable Fishing"
    if GetLocale() == "zhCN" then guiL[zxc] = "启用钓鱼" elseif GetLocale() == "koKR" then guiL[zxc] = "낚시 활성화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilitar pesca" elseif GetLocale() == "ruRU" then guiL[zxc] = "Включить рыбалку" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Activer la pêche" elseif GetLocale() == "deDE" then guiL[zxc] = "Fischen aktivieren" end
    ; zxc = "Enable Unstuck Drawings"
    if GetLocale() == "zhCN" then guiL[zxc] = "启用卡住绘图" elseif GetLocale() == "koKR" then guiL[zxc] =
        "활성화 Unstuck 그리기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilitar dibujos atascados" elseif GetLocale() == "ruRU" then guiL[zxc] = "Включить привязку рисунков" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Activer les dessins de déblocage" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Aktivieren Sie Unstuck Zeichnungen" end
    ; zxc = "Enable this when you are tanking for correct targeting and stances."
    if GetLocale() == "zhCN" then guiL[zxc] = "启用此项当你在坦克时正确的目标和姿态。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "탱킹 할 때 올바른 대상 및 자세를 위해이를 활성화합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilitar esto cuando se está tanking para el objetivo correcto y posturas." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Включите это, когда вы танковать для правильного выбора и позиции." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Activez cette option lorsque vous êtes tanking pour la cible correcte et les postures." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Aktivieren Sie diese, wenn Sie tanking für korrekte Ziel und Haltungen." end
    ; zxc = "Enhancement"
    if GetLocale() == "zhCN" then guiL[zxc] = "增强" elseif GetLocale() == "koKR" then guiL[zxc] = "강화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mejora" elseif GetLocale() == "ruRU" then guiL[zxc] = "Улучшение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Amélioration" elseif GetLocale() == "deDE" then guiL[zxc] = "Verbesserung" end
    ; zxc = "Evasion @ HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "闪避 @ HP%" elseif GetLocale() == "koKR" then guiL[zxc] = "회피 @ HP%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Evasión @ HP%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Уклонение @ HP%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Evasion @ HP%" elseif GetLocale() == "deDE" then guiL[zxc] = "Ausweichen @ HP%" end
    ; zxc = "Eviscerate @"
    if GetLocale() == "zhCN" then guiL[zxc] = "剔骨 @ " elseif GetLocale() == "koKR" then guiL[zxc] = "암살 @ " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Eviscerar @" elseif GetLocale() == "ruRU" then guiL[zxc] = "Потрошение @" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Eviscération @" elseif GetLocale() == "deDE" then guiL[zxc] = "Ausweiden @" end
    ; zxc = "Evocation @"
    if GetLocale() == "zhCN" then guiL[zxc] = "唤醒 @ " elseif GetLocale() == "koKR" then guiL[zxc] = "소환 @ " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Evocación @" elseif GetLocale() == "ruRU" then guiL[zxc] = "Призывание @" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Evocation @" elseif GetLocale() == "deDE" then guiL[zxc] = "Evozieren @" end
    ; zxc = "Exorcism for AoW"
    if GetLocale() == "zhCN" then guiL[zxc] = "驱邪为AoW" elseif GetLocale() == "koKR" then guiL[zxc] =
        "축복의 빛을 위한 신성한 불꽃" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Exorcismo para AoW" elseif GetLocale() == "ruRU" then guiL[zxc] = "Экзорцизм для AoW" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Exorcisme pour AoW" elseif GetLocale() == "deDE" then guiL[zxc] = "Exorzismus für AoW" end
    ; zxc = "Exorcism for threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "驱邪为威胁" elseif GetLocale() == "koKR" then guiL[zxc] =
        "위협을 위한 신성한 불꽃" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Exorcismo para amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Экзорцизм для угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Exorcisme pour la menace" elseif GetLocale() == "deDE" then guiL[zxc] = "Exorzismus für Bedrohung" end
    ; zxc = "Exorcism"
    if GetLocale() == "zhCN" then guiL[zxc] = "驱邪" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 불꽃" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Exorcismo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Экзорцизм" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Exorcisme" elseif GetLocale() == "deDE" then guiL[zxc] = "Exorzismus" end
    ; zxc = "Feign Death%"
    if GetLocale() == "zhCN" then guiL[zxc] = "假死%" elseif GetLocale() == "koKR" then guiL[zxc] = "죽은척하기%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fingir muerte%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Притвориться мертвым%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Feindre la mort%" elseif GetLocale() == "deDE" then guiL[zxc] = "Totstellen%" end
    ; zxc = "Feint"
    if GetLocale() == "zhCN" then guiL[zxc] = "佯攻" elseif GetLocale() == "koKR" then guiL[zxc] = "속임수" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Feint" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар ногой" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Feinte" elseif GetLocale() == "deDE" then guiL[zxc] = "Täuschung" end
    ; zxc = "Felguard"
    if GetLocale() == "zhCN" then guiL[zxc] = "恶魔卫士" elseif GetLocale() == "koKR" then guiL[zxc] = "지옥수호병" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Guardia vil" elseif GetLocale() == "ruRU" then guiL[zxc] = "Страж Скверны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Gangregarde" elseif GetLocale() == "deDE" then guiL[zxc] = "Teufelswache" end
    ; zxc = "Felhunter"
    if GetLocale() == "zhCN" then guiL[zxc] = "地狱猎犬" elseif GetLocale() == "koKR" then guiL[zxc] = "지옥사냥개" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Manáfago" elseif GetLocale() == "ruRU" then guiL[zxc] = "Охотник Скверны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chasseur corrompu" elseif GetLocale() == "deDE" then guiL[zxc] = "Teufelsjäger" end
    ; zxc = "Feral Charge for Threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "猛禽一击为威胁" elseif GetLocale() == "koKR" then guiL[zxc] =
        "위협을 위한 공성" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Carga feral para amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Звериная атака для угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Charge farouche pour la menace" elseif GetLocale() == "deDE" then guiL[zxc] = "Wilder Stoß für Bedrohung" end
    ; zxc = "Fill with Death Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "用死亡打击填充" elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽음의 일격으로 채우기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Llenar con golpe de la muerte" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заполнить ударом смерти" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Remplir avec Frappe de la mort" elseif GetLocale() == "deDE" then guiL[zxc] = "Mit Todesstoß auffüllen" end
    ; zxc = "Fill with DrainLife"
    if GetLocale() == "zhCN" then guiL[zxc] = "用吸取生命填充" elseif GetLocale() == "koKR" then guiL[zxc] =
        "생명력 흡수로 채우기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Llenar con drenar vida" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заполнить сосанием жизни" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Remplir avec Drain de vie" elseif GetLocale() == "deDE" then guiL[zxc] = "Mit Blutsauger auffüllen" end
    ; zxc = "Filler"
    if GetLocale() == "zhCN" then guiL[zxc] = "填充技能" elseif GetLocale() == "koKR" then guiL[zxc] = "채우기 기술" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rellenar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заполнитель" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Remplisseur" elseif GetLocale() == "deDE" then guiL[zxc] = "Füllung" end
    ; zxc = "Fire Blast"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰冲击" elseif GetLocale() == "koKR" then guiL[zxc] = "화염 작렬" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Llamarada de fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Взрыв огня" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuerschlag" end
    ; zxc = "Fire Nova @enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰新星 @敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "화염 회오리 @적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nova de fuego @enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Огненный новый @враги" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nova de feu @ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuernova @Feinde" end
    ; zxc = "Fire Resist Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰抗性光环" elseif GetLocale() == "koKR" then guiL[zxc] =
        "화염 저항의 오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de resistencia al Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура сопротивления огню" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de résistance au Feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuerwiderstandsaura" end
    ; zxc = "Fire Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰法术" elseif GetLocale() == "koKR" then guiL[zxc] = "화염 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos de Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Огненные заклинания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuerzauber" end
    ; zxc = "Fire Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "불꽃 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tótem de Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Тотем огня" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuertotem" end
    ; zxc = "Fire"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰" elseif GetLocale() == "koKR" then guiL[zxc] = "화염" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Огонь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuer" end
    ; zxc = "Fishing Enchant"
    if GetLocale() == "zhCN" then guiL[zxc] = "钓鱼附魔" elseif GetLocale() == "koKR" then guiL[zxc] = "낚시 마법부여" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Encantar pesca" elseif GetLocale() == "ruRU" then guiL[zxc] = "Зачарование для рыбной ловли" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enchantement de pêche" elseif GetLocale() == "deDE" then guiL[zxc] = "Angelrute verzaubern" end
    ; zxc = "Fishing Skill Name"
    if GetLocale() == "zhCN" then guiL[zxc] = "钓鱼" elseif GetLocale() == "koKR" then guiL[zxc] = "낚시" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pesca" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рыбная ловля" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pêche" elseif GetLocale() == "deDE" then guiL[zxc] = "Angeln" end
    ; zxc = "Flame Shock"
    if GetLocale() == "zhCN" then guiL[zxc] = "烈焰震击" elseif GetLocale() == "koKR" then guiL[zxc] = "화염 충격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Choque de llamas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вспышка пламени" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Choc de flammes" elseif GetLocale() == "deDE" then guiL[zxc] = "Flammenschock" end
    ; zxc = "Flamestrike"
    if GetLocale() == "zhCN" then guiL[zxc] = "烈焰风暴" elseif GetLocale() == "koKR" then guiL[zxc] = "화염 폭발" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuego estelar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вспышка пламени" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Flammenstoß" end
    ; zxc = "Flametongue Weapon"
    if GetLocale() == "zhCN" then guiL[zxc] = "火舌武器" elseif GetLocale() == "koKR" then guiL[zxc] = "불꽃의 무기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arma lengua de fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие языка пламени" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arme Langue de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffe Feuerschweif" end
    ; zxc = "Flash heal for AoW"
    if GetLocale() == "zhCN" then guiL[zxc] = "瞬发治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "급속 치유" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sanación instantánea" elseif GetLocale() == "ruRU" then guiL[zxc] = "Мгновенное исцеление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins rapides" elseif GetLocale() == "deDE" then guiL[zxc] = "Blitzheilung" end
    ; zxc = "Fly"
    if GetLocale() == "zhCN" then guiL[zxc] = "飞行" elseif GetLocale() == "koKR" then guiL[zxc] = "날기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Volar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Полет" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vol" elseif GetLocale() == "deDE" then guiL[zxc] = "Fliegen" end
    ; zxc = "Food: "
    if GetLocale() == "zhCN" then guiL[zxc] = "食物: " elseif GetLocale() == "koKR" then guiL[zxc] = "음식: " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comida: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Еда: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nourriture: " elseif GetLocale() == "deDE" then guiL[zxc] = "Essen: " end
    ; zxc = "Force of Nature @ X enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "自然之力 @ X敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자연의 힘 @ X 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuerza de la naturaleza @ X enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сила природы @ X врагов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Force de la nature @ X ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Kraft der Natur @ X Gegner" end
    ; zxc = "Frenzied Regen HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂暴回复血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "광포한 회복 체력%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Regeneración frenética HP%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Бешеное восстановление HP%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Régénération frénétique HP%" elseif GetLocale() == "deDE" then guiL[zxc] = "Wütendes Regenerieren HP%" end
    ; zxc = "Frost Bolt"
    if GetLocale() == "zhCN" then guiL[zxc] = "寒冰箭" elseif GetLocale() == "koKR" then guiL[zxc] = "얼음 화살" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Descarga de Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяная стрела" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frostblitz" end
    ; zxc = "Frost Nova"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜新星" elseif GetLocale() == "koKR" then guiL[zxc] = "냉기 회오리" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nova de Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяная новая" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nova de givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frostnova" end
    ; zxc = "Frost Resist Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜抗性光环" elseif GetLocale() == "koKR" then guiL[zxc] =
        "냉기 저항 오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de resistencia a la Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура сопротивления льду" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de résistance au Givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frostwiderstand Aura" end
    ; zxc = "Frost Shock"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜震击" elseif GetLocale() == "koKR" then guiL[zxc] = "냉기 충격" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Choque de Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяной шок" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Horion de givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frost Schock" end
    ; zxc = "Frost Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜法术" elseif GetLocale() == "koKR" then guiL[zxc] = "냉기 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos de Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяные заклинания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts de givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frost Zauber" end
    ; zxc = "Frost"
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜" elseif GetLocale() == "koKR" then guiL[zxc] = "냉기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escarcha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Лед" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Frost" end
    ; zxc = "Fury Abiltiies"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂怒技能" elseif GetLocale() == "koKR" then guiL[zxc] = "분노 능력" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilidades de furia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Способности ярости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Capacités de fureur" elseif GetLocale() == "deDE" then guiL[zxc] = "Zorn Fähigkeiten" end
    ; zxc = "Fury"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂怒" elseif GetLocale() == "koKR" then guiL[zxc] = "분노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Furia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ярость" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Fureur" elseif GetLocale() == "deDE" then guiL[zxc] = "Zorn" end
    ; zxc = "Gargoyle #enemies >= "
    if GetLocale() == "zhCN" then guiL[zxc] = "石像鬼 #敌人 >= " elseif GetLocale() == "koKR" then guiL[zxc] =
        "가고일 #적 >= " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Gárgola #enemigos >= " elseif GetLocale() == "ruRU" then guiL[zxc] = "Горгулья #врагов >= " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Gargouille #ennemis >= " elseif GetLocale() == "deDE" then guiL[zxc] = "Gargoyle #Feinde >= " end
    ; zxc = "Garrote"
    if GetLocale() == "zhCN" then guiL[zxc] = "绞喉" elseif GetLocale() == "koKR" then guiL[zxc] = "목 조르기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Garrote" elseif GetLocale() == "ruRU" then guiL[zxc] = "Гаррота" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Garrote" elseif GetLocale() == "deDE" then guiL[zxc] = "Garrote" end
    ; zxc = "Getting Ready"
    if GetLocale() == "zhCN" then guiL[zxc] = "准备中" elseif GetLocale() == "koKR" then guiL[zxc] = "준비중" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Preparándose" elseif GetLocale() == "ruRU" then guiL[zxc] = "Подготовка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Préparation" elseif GetLocale() == "deDE" then guiL[zxc] = "Bereitstellung" end
    ; zxc = "Gift of the Naaru%"
    if GetLocale() == "zhCN" then guiL[zxc] = "纳鲁的赐福%" elseif GetLocale() == "koKR" then guiL[zxc] = "나루의 선물%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Don de los naaru%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дар наару%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Don des naaru%" elseif GetLocale() == "deDE" then guiL[zxc] = "Gabe der Naaru%" end
    ; zxc = "Grace of Air Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "风之优雅图腾" elseif GetLocale() == "koKR" then guiL[zxc] =
        "풍의 은총 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tótem de gracia aérea" elseif GetLocale() == "ruRU" then guiL[zxc] = "Тотем легкости воздуха" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem de grâce aérienne" elseif GetLocale() == "deDE" then guiL[zxc] = "Totem der luftgleichen Anmut" end
    ; zxc = "Grats on R1"
    if GetLocale() == "zhCN" then guiL[zxc] = "恭喜你达到R1" elseif GetLocale() == "koKR" then guiL[zxc] =
        "축하합니다 R1" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Felicidades por R1" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Поздравляем с R1" elseif GetLocale() == "frFR" then guiL[zxc] = "Félicitations pour R1" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Gratulation für R1" end
    ; zxc = "Grind Distance to Switch"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换距离" elseif GetLocale() == "koKR" then guiL[zxc] = "스위치 거리" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Distancia para cambiar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Расстояние для смены" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Distance de changement" elseif GetLocale() == "deDE" then guiL[zxc] = "Entfernung zum Wechseln" end
    ; zxc = "Grind Path"
    if GetLocale() == "zhCN" then guiL[zxc] = "打怪路径" elseif GetLocale() == "koKR" then guiL[zxc] = "그라인드 경로" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ruta de molienda" elseif GetLocale() == "ruRU" then guiL[zxc] = "Путь для грабежа" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chemin de grind" elseif GetLocale() == "deDE" then guiL[zxc] = "Grind-Pfad" end
    ; zxc = "Guardian Spirit %"
    if GetLocale() == "zhCN" then guiL[zxc] = "守护之魂%" elseif GetLocale() == "koKR" then guiL[zxc] = "수호의 정신%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Espíritu guardián%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Дух стража%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Esprit gardien%" elseif GetLocale() == "deDE" then guiL[zxc] = "Wächterspiritu%" end
    ; zxc = "Ham Righteous this many"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义之锤" elseif GetLocale() == "koKR" then guiL[zxc] = "정의의 망치" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de la justicia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молот праведности" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de la vertu" elseif GetLocale() == "deDE" then guiL[zxc] = "Hammer der Gerechtigkeit" end
    ; zxc = "Hammer of Wrath"
    if GetLocale() == "zhCN" then guiL[zxc] = "愤怒之锤" elseif GetLocale() == "koKR" then guiL[zxc] = "천벌의 망치" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de cólera" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молот гнева" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de courroux" elseif GetLocale() == "deDE" then guiL[zxc] = "Hammer des Zorns" end
    ; zxc = "Hamstring Fill"
    if GetLocale() == "zhCN" then guiL[zxc] = "断筋填充" elseif GetLocale() == "koKR" then guiL[zxc] = "무력화 채우기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rompemuslos relleno" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сокращение запаса" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Remplissage de la Brise-genou" elseif GetLocale() == "deDE" then guiL[zxc] = "Kniesehne auffüllen" end
    ; zxc = "Hamstring for Flurry"
    if GetLocale() == "zhCN" then guiL[zxc] = "断筋为怒" elseif GetLocale() == "koKR" then guiL[zxc] = "플러리를 위한 무력화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rompemuslos para ráfaga" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сокращение для бешенства" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brise-genou pour Frénésie" elseif GetLocale() == "deDE" then guiL[zxc] = "Kniesehne für Raserei" end
    ; zxc = "Hamstring"
    if GetLocale() == "zhCN" then guiL[zxc] = "断筋" elseif GetLocale() == "koKR" then guiL[zxc] = "무력화" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rompemuslos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сокращение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brise-genou" elseif GetLocale() == "deDE" then guiL[zxc] = "Kniesehne" end
    ; zxc = "Hand of Freedom enemy hp"
    if GetLocale() == "zhCN" then guiL[zxc] = "自由祝福敌人血量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자유의 손 아군 HP" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de libertad enemigo hp" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рука Свободы врага hp" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main de liberté ennemi hp" elseif GetLocale() == "deDE" then guiL[zxc] = "Hand der Freiheit Feind hp" end
    ; zxc = "Hand of Freedom hp"
    if GetLocale() == "zhCN" then guiL[zxc] = "自由祝福血量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자유의 손 아군 HP" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de libertad hp" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рука Свободы hp" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main de liberté hp" elseif GetLocale() == "deDE" then guiL[zxc] = "Hand der Freiheit hp" end
    ; zxc = "Hand of Reckoning"
    if GetLocale() == "zhCN" then guiL[zxc] = "审判" elseif GetLocale() == "koKR" then guiL[zxc] = "심판의 손" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de castigo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рука Правосудия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main de la rétribution" elseif GetLocale() == "deDE" then guiL[zxc] = "Hand des Richturteils" end
    ; zxc = "Heal out of combat only"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗外治疗" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전투중 아닐때만 치유" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sanar fuera de combate" elseif GetLocale() == "ruRU" then guiL[zxc] = "Исцеление только вне боя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins hors combat uniquement" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilung nur außerhalb des Kampfes" end
    ; zxc = "Healing Stream"
    if GetLocale() == "zhCN" then guiL[zxc] = "治疗之泉图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "치유의 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Torrente curativo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Исцеляющий поток" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Flux de soins" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilender Strom" end
    ; zxc = "Healing"
    if GetLocale() == "zhCN" then guiL[zxc] = "治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "치유" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sanación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Исцеление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilung" end
    ; zxc = "Heals only the names on this list, if blank, heals everyone (Separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "只治疗列表中的玩家, 留空则治疗所有人 (用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이름 목록에 있는 사람만 치유, 비워두면 모두 치유 (쉼표로 구분)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sólo cura a los nombres en esta lista, si está en blanco, cura a todos (Separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Исцеляет только имена в этом списке, если пусто, исцеляет всех (Разделить запятой)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soigne uniquement les noms de cette liste, si vide, soigne tout le monde (Séparer par virgule)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Heilt nur die Namen in dieser Liste, wenn leer, heilt alle (Durch Komma trennen)" end
    ; zxc = "HealthFunnel %"
    if GetLocale() == "zhCN" then guiL[zxc] = "生命通道 %" elseif GetLocale() == "koKR" then guiL[zxc] = "생명력 집중 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Canalizar vida %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Канал здоровья %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Transfert de vie %" elseif GetLocale() == "deDE" then guiL[zxc] = "Lebenslinie %" end
    ; zxc = "Heart Strike >= #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "心脏打击 >= #敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "심장 찌르기 >= #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe del corazón >= #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар сердца >= #врагов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe du cœur >= #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Herzschlag >= #Feinde" end
    ; zxc = "Helpful drawings"
    if GetLocale() == "zhCN" then guiL[zxc] = "有用的绘图" elseif GetLocale() == "koKR" then guiL[zxc] = "도움이 되는 그림" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujos útiles" elseif GetLocale() == "ruRU" then guiL[zxc] = "Полезные рисунки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessins utiles" elseif GetLocale() == "deDE" then guiL[zxc] = "Nützliche Zeichnungen" end
    ; zxc = "HoJ @ Enemy hp %"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义之锤 @ 敌人血量 %" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 망치 @ 적 체력 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de justicia @ Vida enemiga %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Молот правосудия @ Здоровье врага %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de la justice @ Vida ennemie %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Hammer der Gerechtigkeit @ Feindliches Leben %" end
    ; zxc = "HoJ Interrupt"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义之锤打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 망치 차단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de justicia Interrumpir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молот правосудия Прерывание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de la justice Interruption" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Hammer der Gerechtigkeit Unterbrechen" end
    ; zxc = "HoJ for threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义之锤威胁" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 망치 위협" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de justicia para amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молот правосудия для угрозы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de la justice pour la menace" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Hammer der Gerechtigkeit für Bedrohung" end
    ; zxc = "Hold key to perform action"
    if GetLocale() == "zhCN" then guiL[zxc] = "按住按键执行动作" elseif GetLocale() == "koKR" then guiL[zxc] =
        "키를 누르고 있으면 작업을 수행합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mantenga la tecla para realizar la acción" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Удерживайте клавишу для выполнения действия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Maintenez la touche pour effectuer l'action" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Halten Sie die Taste gedrückt, um die Aktion auszuführen" end
    ; zxc = "Holy Fire"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣之火" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 불꽃" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuego sagrado" elseif GetLocale() == "ruRU" then guiL[zxc] = "Священный огонь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Feu sacré" elseif GetLocale() == "deDE" then guiL[zxc] = "Heiliges Feuer" end
    ; zxc = "Holy Nova"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣新星" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 폭발" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nova sagrada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Священная новолуние" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nova sacrée" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilige Nova" end
    ; zxc = "Holy Shock Enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣震击敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성 충격 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Shock sagrado Enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Священный шок Враги" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Choc sacré Ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Heiliger Schock Feinde" end
    ; zxc = "Holy Wrath this many"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣愤怒这么多" elseif GetLocale() == "koKR" then guiL[zxc] =
        "신성한 격노 이 많은" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cólera sagrada este muchos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Священная ярость это много" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Colère sacrée ce beaucoup" elseif GetLocale() == "deDE" then guiL[zxc] = "Heiliger Zorn diese viele" end
    ; zxc = "Holy"
    if GetLocale() == "zhCN" then guiL[zxc] = "神圣" elseif GetLocale() == "koKR" then guiL[zxc] = "신성" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sagrado" elseif GetLocale() == "ruRU" then guiL[zxc] = "Священный" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sacré" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilig" end
    ; zxc = "Howling Blast"
    if GetLocale() == "zhCN" then guiL[zxc] = "嚎风冲击" elseif GetLocale() == "koKR" then guiL[zxc] = "울부짖는 냉기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Blast aullante" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вой ужаса" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Souffle hurlant" elseif GetLocale() == "deDE" then guiL[zxc] = "Heulender Schlag" end
    ; zxc = "Hunter's Mark"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎人印记" elseif GetLocale() == "koKR" then guiL[zxc] = "사냥꾼의 징표" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Marca del cazador" elseif GetLocale() == "ruRU" then guiL[zxc] = "Метка охотника" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marque du chasseur" elseif GetLocale() == "deDE" then guiL[zxc] = "Mal des Jägers" end
    ; zxc = "Hurricane this many"
    if GetLocale() == "zhCN" then guiL[zxc] = "飓风这么多" elseif GetLocale() == "koKR" then guiL[zxc] = "폭풍우 이 많은" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Huracán este muchos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ураган это много" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ouragan ce beaucoup" elseif GetLocale() == "deDE" then guiL[zxc] = "Wirbelsturm diese viele" end
    ; zxc = "Ice Barrier"
    if GetLocale() == "zhCN" then guiL[zxc] = "寒冰护体" elseif GetLocale() == "koKR" then guiL[zxc] = "얼음 보호막" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Barrera de hielo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяная преграда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Barrière de glace" elseif GetLocale() == "deDE" then guiL[zxc] = "Eisbarriere" end
    ; zxc = "Ice Block @ HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "寒冰屏障@HP%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "얼음 방패 @ HP%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Bloqueo de hielo @ HP%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ледяная глыба @ HP%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bloc de glace @ HP%" elseif GetLocale() == "deDE" then guiL[zxc] = "Eisblock @ HP%" end
    ; zxc = "Ice Lance Frozen Targets"
    if GetLocale() == "zhCN" then guiL[zxc] = "寒冰镰刀冰冻目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "얼음창 빙결된 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Lanza de hielo Objetivos congelados" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Ледяной шип Замороженные цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lance de glace Cibles gelées" elseif GetLocale() == "deDE" then guiL[zxc] = "Eislanze gefrorene Ziele" end
    ; zxc = "Icebound Fortitude when health <="
    if GetLocale() == "zhCN" then guiL[zxc] = "冰封之韧当生命值<=" elseif GetLocale() == "koKR" then guiL[zxc] =
        "얼음의 인내 when health <=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fortaleza helada cuando la salud <=" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Защита от льда когда здоровье <=" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Endurance de glace quand la santé <=" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Eisige Entschlossenheit wenn Gesundheit <=" end
    ; zxc = "Icy Touch when remains <= "
    if GetLocale() == "zhCN" then guiL[zxc] = "冰霜之触当遗迹<=" elseif GetLocale() == "koKR" then guiL[zxc] =
        "얼음 손길 when remains <= " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Toque gélido cuando queda <= " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Ледяное касание когда остатки <= " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Toucher glacial quand reste <= " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Eisiger Berührung wenn bleibt <= " end
    ; zxc = "If an elite enemy is around a node the bot will blacklist the node."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果一个精英敌人是周围的节点机器人将黑名单节点。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "엘리트 적이 노드 주위에 있으면 봇은 노드를 블랙리스트에 올립니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si un enemigo de élite está alrededor de un nodo el bot va a bloquear el nodo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если элитный враг вокруг узла бот будет черный список узла." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si un ennemi de l'élite est autour d'un nœud le bot va mettre en liste noire le nœud." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn ein Elite-Gegner um einen Knoten der Bot wird den Knoten auf die schwarze Liste." end
    ; zxc = "If another player is around a node the bot will blacklist the node."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果另一个玩家是周围的节点机器人将黑名单节点。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "다른 플레이어가 노드 주위에 있으면 봇은 노드를 블랙리스트에 올리게됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si otro jugador está alrededor de un nodo el bot va a bloquear el nodo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если другой игрок вокруг узла бот будет черный список узла." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si un autre joueur est autour d'un nœud le bot va mettre en liste noire le nœud." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn ein anderer Spieler um einen Knoten der Bot wird den Knoten auf die schwarze Liste." end
    ; zxc = "If below this HP, the bot will wait until full HP to continue botting."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果低于这个HP，机器人将等待直到满HP继续机器人。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 HP 아래의 경우, 봇은 전체 HP까지 기다려 계속 봇팅을합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si por debajo de este HP, el bot esperará hasta que HP completa para continuar botting." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если ниже этого HP, бот будет ждать, пока полный HP, чтобы продолжить ботинг." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si en dessous de ce HP, le bot attendra jusqu'à ce que HP complet pour continuer botting." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn unter diesem HP, der Bot wird warten, bis voll HP weiter botting." end
    ; zxc = "If below this MP, the bot will wait until full HP to continue botting."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果低于这个MP，机器人将等待直到满HP继续机器人。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 MP 아래의 경우, 봇은 전체 HP까지 기다려 계속 봇팅을합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si por debajo de este MP, el bot esperará hasta que HP completa para continuar botting." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если ниже этого MP, бот будет ждать, пока полный HP, чтобы продолжить ботинг." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si en dessous de ce MP, le bot attendra jusqu'à ce que HP complet pour continuer botting." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn unter diesem MP, der Bot wird warten, bis voll HP weiter botting." end
    ; zxc = "If have a target will freedom that, if not, freedoms self"
    if GetLocale() == "zhCN" then guiL[zxc] = "如果有一个目标将自由，如果没有，自由自己" elseif GetLocale() == "koKR" then guiL[zxc] =
        "대상이있는 경우 자유가 아니라면 자유를 자유롭게 할 것입니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si tiene un objetivo será la libertad de que, si no, libertades de sí mismo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если имеет цель будет свобода, что, если нет, свободы себя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si avoir une cible sera la liberté de celui-ci, si non, libertés de soi-même" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn haben ein Ziel wird Freiheit, dass, wenn nicht, Freiheiten selbst" end
    ; zxc =
    "If multiboxing dungeons, make sure to load the profile on all slaves aswell so they know where the dungeon entrance is."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果多盒子地下城，确保在所有从伙伴加载配置文件，所以他们知道地下城入口在哪里。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "멀티 팝싱 던전 인 경우 모든 노예에 프로파일을로드하여 던전 입구가 어디에 있는지 알 수 있습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si multiboxing mazmorras, asegúrese de cargar el perfil en todos los esclavos aswell así que saben dónde está la entrada de la mazmorra." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если multiboxing подземелья, убедитесь, что загрузить профиль на всех рабах aswell так, чтобы они знали, где вход в подземелье." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si multiboxing donjons, assurez-vous de charger le profil sur tous les esclaves aswell afin qu'ils sachent où l'entrée du donjon est." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn multiboxing Dungeons, stellen Sie sicher, dass das Profil auf allen Sklaven aswell so sie wissen, wo der Eingang der Dungeon ist." end
    ; zxc = "If the mailbox you are trying to use is not named 'Mailbox', you should use this to specify what name it is"
    if GetLocale() == "zhCN" then guiL[zxc] = "如果你试图使用的邮箱不是命名为“邮箱”，你应该使用这个来指定它的名称" elseif GetLocale() == "koKR" then guiL[zxc] =
        "사용하려는 사서함의 이름이 '사서함'이 아닌 경우이 이름을 사용하여 이름을 지정해야합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si el buzón que está tratando de utilizar no se llama 'Buzón', debe utilizar esto para especificar qué nombre es" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если почтовый ящик, который вы пытаетесь использовать не называется 'Почтовый ящик', вы должны использовать это, чтобы указать, какое имя это" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si la boîte aux lettres que vous essayez d'utiliser n'est pas nommée 'Boîte aux lettres', vous devriez utiliser ceci pour spécifier quel nom il est" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn die Poststelle, die Sie versuchen zu verwenden nicht 'Poststelle' genannt, sollten Sie dies verwenden, um anzugeben, was Name es ist" end
    ; zxc =
    "If this is blank, the class rotation will dispel everything. If you put something in here, it will only dispel the spells you put in here."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果这是空白的，职业旋转将驱散一切。如果你把什么在这里，它将只驱散你放在这里的法术。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것이 비어 있으면 클래스 로테이션이 모든 것을 제거합니다.당신이 여기에 무언가를 넣으면 여기에 넣은 주문 만 제거합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si esto está en blanco, la rotación de clase se deshacerá de todo. Si usted pone algo aquí, sólo se deshacerá de los hechizos que usted pone aquí." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если это пусто, класс вращения будет рассеивать все. Если вы что-то здесь, он будет только рассеивать заклинания, которые вы здесь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si c'est vide, la rotation de classe va dissiper tout. Si vous mettez quelque chose ici, il va seulement dissiper les sorts que vous mettez ici." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn dies leer ist, wird die Klassenrotation alles auflösen. Wenn Sie etwas hier setzen, wird es nur auflösen die Zauber, die Sie hier setzen." end
    ; zxc =
    "If this is blank, the class rotation will purge nothing. If you put something in here, it will only purge the spells you put in here."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果这是空白的，职业旋转将清除一切。如果你把什么在这里，它将只清除你放在这里的法术。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것이 비어 있으면 클래스 회전은 아무것도 제거하지 않습니다.여기에 무언가를 넣으면 여기에 넣은 주문 만 제거합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si esto está en blanco, la rotación de clase se purgará nada. Si usted pone algo aquí, sólo se purgará los hechizos que usted pone aquí." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если это пусто, класс вращения будет очищать ничего. Если вы что-то здесь, он будет только очищать заклинания, которые вы здесь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si c'est vide, la rotation de classe va purger rien. Si vous mettez quelque chose ici, il va seulement purger les sorts que vous mettez ici." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn dies leer ist, wird die Klassenrotation nichts auflösen. Wenn Sie etwas hier setzen, wird es nur auflösen die Zauber, die Sie hier setzen." end
    ; zxc = "Ignore these node names (Separate by Comma):"
    if GetLocale() == "zhCN" then guiL[zxc] = "忽略这些节点名称（用逗号分隔）：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 노드 이름을 무시합니다 (쉼표별로 별도) :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ignorar estos nombres de nodo (separados por comas):" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Игнорировать эти имена узлов (разделенные запятыми):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ignorer ces noms de nœuds (séparés par des virgules):" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Ignorieren Sie diese Knotennamen (durch Komma getrennt):" end
    ; zxc = "Imp"
    if GetLocale() == "zhCN" then guiL[zxc] = "小鬼" elseif GetLocale() == "koKR" then guiL[zxc] = "꼬마 도깨비" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Diablillo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Бес" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Diablotin" elseif GetLocale() == "deDE" then guiL[zxc] = "Wichtel" end
    ; zxc = "Incinerate"
    if GetLocale() == "zhCN" then guiL[zxc] = "烧尽" elseif GetLocale() == "koKR" then guiL[zxc] = "태워서 재로 만들다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Incinerar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Испепеление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Incinérer" elseif GetLocale() == "deDE" then guiL[zxc] = "Verbrennen" end
    ; zxc = "Insect Swarm"
    if GetLocale() == "zhCN" then guiL[zxc] = "虫群" elseif GetLocale() == "koKR" then guiL[zxc] = "곤충 떼" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Enjambre de insectos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рой насекомых" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Essaim d'insectes" elseif GetLocale() == "deDE" then guiL[zxc] = "Insektenschwarm" end
    ; zxc = "Intercept/Juggernaut"
    if GetLocale() == "zhCN" then guiL[zxc] = "拦截/压制" elseif GetLocale() == "koKR" then guiL[zxc] = "인터셉트/저글러" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interceptar/Atropellar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Перехват/Жнец" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Intercepter/Chargeur" elseif GetLocale() == "deDE" then guiL[zxc] = "Abfangen/Juggernaut" end
    ; zxc = "Interrupt always"
    if GetLocale() == "zhCN" then guiL[zxc] = "总是打断" elseif GetLocale() == "koKR" then guiL[zxc] = "항상 방해합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interrumpir siempre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Всегда прерывать" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Toujours interrompre" elseif GetLocale() == "deDE" then guiL[zxc] = "Immer unterbrechen" end
    ; zxc = "Interrupt when either below %"
    if GetLocale() == "zhCN" then guiL[zxc] = "当目标血量低于%时打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "% 미만의 경우 방해" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interrumpir cuando esté por debajo de %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Прерывать, когда один из ниже %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interrompre quand l'un des deux est en dessous de %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Unterbrechen, wenn einer unter %" end
    ; zxc = "Interrupt when enemy below %"
    if GetLocale() == "zhCN" then guiL[zxc] = "当敌人血量低于%时打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "적을 미만으로 방해" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interrumpir cuando el enemigo esté por debajo de %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Прерывать, когда враг ниже %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interrompre quand l'ennemi est en dessous de %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Unterbrechen, wenn Gegner unter %" end
    ; zxc = "Interrupt when friendly below %"
    if GetLocale() == "zhCN" then guiL[zxc] = "当友方血量低于%时打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "% 미만의 친근한 경우 방해" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interrumpir cuando el aliado esté por debajo de %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Прерывать, когда союзник ниже %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interrompre quand l'ami est en dessous de %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Unterbrechen, wenn Freund unter %" end
    ; zxc = "Interrupt with Mind Freeze"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用心灵冰冻打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "마인드 동결과 중단하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Interrumpir con congelación mental" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Прерывать с помощью Заморозки разума" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Interrompre avec Gel mental" elseif GetLocale() == "deDE" then guiL[zxc] = "Unterbrechen mit Gedankenfrost" end
    ; zxc = "Item Buying"
    if GetLocale() == "zhCN" then guiL[zxc] = "购买物品" elseif GetLocale() == "koKR" then guiL[zxc] = "품목 구매" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comprar objetos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Покупка предметов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Acheter des objets" elseif GetLocale() == "deDE" then guiL[zxc] = "Gegenstand kaufen" end
    ; zxc = "Judge for Debuff only"
    if GetLocale() == "zhCN" then guiL[zxc] = "只判断Debuff" elseif GetLocale() == "koKR" then guiL[zxc] = "디버프 만 판사" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juzgar sólo por el debuff" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оценивать только дебафф" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Juger seulement par le debuff" elseif GetLocale() == "deDE" then guiL[zxc] = "Nur Debuff bewerten" end
    ; zxc = "Judge for threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "判断仇恨" elseif GetLocale() == "koKR" then guiL[zxc] = "위협에 대한 판사" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juzgar por amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оценивать угрозу" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Juger par la menace" elseif GetLocale() == "deDE" then guiL[zxc] = "Bedrohung bewerten" end
    ; zxc = "Judge on Cooldown"
    if GetLocale() == "zhCN" then guiL[zxc] = "判断冷却" elseif GetLocale() == "koKR" then guiL[zxc] = "재사용 대기 시간 판사" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juzgar en tiempo de reutilización" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оценивать по кулдауну" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Juger sur le temps de recharge" elseif GetLocale() == "deDE" then guiL[zxc] = "Bewerten bei Abklingzeit" end
    ; zxc = "Judgement of Justice"
    if GetLocale() == "zhCN" then guiL[zxc] = "公正审判" elseif GetLocale() == "koKR" then guiL[zxc] = "정의의 판단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juicio de justicia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Правосудие справедливости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Jugement de justice" elseif GetLocale() == "deDE" then guiL[zxc] = "Gerechtigkeitsspruch" end
    ; zxc = "Judgement of Light"
    if GetLocale() == "zhCN" then guiL[zxc] = "光明审判" elseif GetLocale() == "koKR" then guiL[zxc] = "빛의 판단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juicio de Luz" elseif GetLocale() == "ruRU" then guiL[zxc] = "Правосудие Света" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Jugement de lumière" elseif GetLocale() == "deDE" then guiL[zxc] = "Lichtspruch" end
    ; zxc = "Judgement of Wisdom"
    if GetLocale() == "zhCN" then guiL[zxc] = "智慧审判" elseif GetLocale() == "koKR" then guiL[zxc] = "지혜의 판단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juicio de sabiduría" elseif GetLocale() == "ruRU" then guiL[zxc] = "Правосудие мудрости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Jugement de sagesse" elseif GetLocale() == "deDE" then guiL[zxc] = "Weisheitsspruch" end
    ; zxc = "Judgement"
    if GetLocale() == "zhCN" then guiL[zxc] = "审判" elseif GetLocale() == "koKR" then guiL[zxc] = "심판" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Juicio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Правосудие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Jugement" elseif GetLocale() == "deDE" then guiL[zxc] = "Gerechtigkeitsspruch" end
    ; zxc = "Kill Distance"
    if GetLocale() == "zhCN" then guiL[zxc] = "杀距" elseif GetLocale() == "koKR" then guiL[zxc] = "거리를 죽입니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Distancia de muerte" elseif GetLocale() == "ruRU" then guiL[zxc] = "Расстояние до убийства" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Distance de tuer" elseif GetLocale() == "deDE" then guiL[zxc] = "Tötungsabstand" end
    ; zxc = "Last Stand @"
    if GetLocale() == "zhCN" then guiL[zxc] = "破釜沉舟 @" elseif GetLocale() == "koKR" then guiL[zxc] =
        "lastStand @" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Último recurso @" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Последний шанс @" elseif GetLocale() == "frFR" then guiL[zxc] = "Dernier rempart @" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Letztes Gefecht @" end
    ; zxc = "Lay on Hands %"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣疗术 %" elseif GetLocale() == "koKR" then guiL[zxc] = "손에 눕다 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de protección %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возложение рук %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Imposition des mains %" elseif GetLocale() == "deDE" then guiL[zxc] = "Handauflegung %" end
    ; zxc = "Leave form after (s)"
    if GetLocale() == "zhCN" then guiL[zxc] = "离开形态后 (s)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "다음 양식을 남기기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dejar forma después (s)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Покинуть форму после (s)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Quitter la forme après (s)" elseif GetLocale() == "deDE" then guiL[zxc] = "Form verlassen nach (s)" end
    ; zxc = "Level to switch"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换等级" elseif GetLocale() == "koKR" then guiL[zxc] = "스위치 레벨" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nivel para cambiar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Уровень для переключения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Niveau pour changer" elseif GetLocale() == "deDE" then guiL[zxc] = "Level zum Wechseln" end
    ; zxc = "Lifetap %"
    if GetLocale() == "zhCN" then guiL[zxc] = "生命分流 %" elseif GetLocale() == "koKR" then guiL[zxc] = "수명 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Absorción de vida %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Похищение жизни %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Connexion de vie %" elseif GetLocale() == "deDE" then guiL[zxc] = "Lebensentzug %" end
    ; zxc = "Light Always"
    if GetLocale() == "zhCN" then guiL[zxc] = "总是圣光" elseif GetLocale() == "koKR" then guiL[zxc] = "항상 빛" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Luz siempre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Свет всегда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lumière toujours" elseif GetLocale() == "deDE" then guiL[zxc] = "Licht immer" end
    ; zxc = "Light Debuff"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣光减益" elseif GetLocale() == "koKR" then guiL[zxc] = "가벼운 디버프" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Luz de debuff" elseif GetLocale() == "ruRU" then guiL[zxc] = "Свет дебафф" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lumière de débuff" elseif GetLocale() == "deDE" then guiL[zxc] = "Licht Debuff" end
    ; zxc = "Lightning Bolt"
    if GetLocale() == "zhCN" then guiL[zxc] = "闪电箭" elseif GetLocale() == "koKR" then guiL[zxc] = "번갯불" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Descarga de relámpagos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молния" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Eclair" elseif GetLocale() == "deDE" then guiL[zxc] = "Blitzschlag" end
    ; zxc = "Lightning Shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "闪电护盾" elseif GetLocale() == "koKR" then guiL[zxc] = "번개 방패" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo de relámpagos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит молний" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier de foudre" elseif GetLocale() == "deDE" then guiL[zxc] = "Blitzschlagschild" end
    ; zxc = "Lists"
    if GetLocale() == "zhCN" then guiL[zxc] = "列表" elseif GetLocale() == "koKR" then guiL[zxc] = "기울기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Listas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Списки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Listes" elseif GetLocale() == "deDE" then guiL[zxc] = "Listen" end
    ; zxc = "Load Profile"
    if GetLocale() == "zhCN" then guiL[zxc] = "载入配置" elseif GetLocale() == "koKR" then guiL[zxc] = "로드 프로파일" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cargar perfil" elseif GetLocale() == "ruRU" then guiL[zxc] = "Загрузить профиль" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Charger le profil" elseif GetLocale() == "deDE" then guiL[zxc] = "Profil laden" end
    ; zxc = "Maelstrom Weapon"
    if GetLocale() == "zhCN" then guiL[zxc] = "漩涡武器" elseif GetLocale() == "koKR" then guiL[zxc] = "소용돌이 무기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arma de maelstrom" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие водоворота" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arme de maelström" elseif GetLocale() == "deDE" then guiL[zxc] = "Maelstromwaffe" end
    ; zxc = "Mage Armor"
    if GetLocale() == "zhCN" then guiL[zxc] = "魔甲术" elseif GetLocale() == "koKR" then guiL[zxc] = "마법사 갑옷" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Armadura de mago" elseif GetLocale() == "ruRU" then guiL[zxc] = "Магический доспех" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Armure du mage" elseif GetLocale() == "deDE" then guiL[zxc] = "Magische Rüstung" end
    ; zxc = "Magma @enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "熔岩@敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "마그마 @enemies" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Magma @enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Магма @враги" elseif GetLocale() == "frFR" then guiL[zxc] = "Magma @ennemis" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Magma @Feinde" end
    ; zxc = "Mail Blue"
    if GetLocale() == "zhCN" then guiL[zxc] = "蓝色锁甲" elseif GetLocale() == "koKR" then guiL[zxc] = "메일 블루" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Malla azul" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кольчуга синего цвета" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cotte de mailles bleue" elseif GetLocale() == "deDE" then guiL[zxc] = "Blauer Panzer" end
    ; zxc = "Mail Certain Items (Separate by Comma):"
    if GetLocale() == "zhCN" then guiL[zxc] = "邮寄特定物品(用逗号分隔):" elseif GetLocale() == "koKR" then guiL[zxc] =
        "특정 품목 (쉼표별로 별도)을 우편으로 보내십시오." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mandar ciertos objetos (separados por comas):" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Отправлять определенные предметы (разделять запятыми):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Envoyer certains objets (séparés par des virgules):" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Versende bestimmte Gegenstände (durch Komma getrennt):" end
    ; zxc = "Mail Green"
    if GetLocale() == "zhCN" then guiL[zxc] = "绿色锁甲" elseif GetLocale() == "koKR" then guiL[zxc] = "메일 그린" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Malla verde" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кольчуга зеленого цвета" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cotte de mailles verte" elseif GetLocale() == "deDE" then guiL[zxc] = "Grüner Panzer" end
    ; zxc = "Mail Purple"
    if GetLocale() == "zhCN" then guiL[zxc] = "紫色锁甲" elseif GetLocale() == "koKR" then guiL[zxc] = "우편 보라색" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Malla púrpura" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кольчуга фиолетового цвета" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cotte de mailles violette" elseif GetLocale() == "deDE" then guiL[zxc] = "Lila Panzer" end
    ; zxc = "Mail To:"
    if GetLocale() == "zhCN" then guiL[zxc] = "邮寄给:" elseif GetLocale() == "koKR" then guiL[zxc] = "메일 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mandar a:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отправить:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Envoyer à:" elseif GetLocale() == "deDE" then guiL[zxc] = "Versende an:" end
    ; zxc = "Mail White"
    if GetLocale() == "zhCN" then guiL[zxc] = "白色锁甲" elseif GetLocale() == "koKR" then guiL[zxc] = "우편 화이트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Malla blanca" elseif GetLocale() == "ruRU" then guiL[zxc] = "Кольчуга белого цвета" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cotte de mailles blanche" elseif GetLocale() == "deDE" then guiL[zxc] = "Weißer Panzer" end
    ; zxc = "Mail"
    if GetLocale() == "zhCN" then guiL[zxc] = "邮寄" elseif GetLocale() == "koKR" then guiL[zxc] = "Mail" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mandar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отправить" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Envoyer" elseif GetLocale() == "deDE" then guiL[zxc] = "Versende" end
    ; zxc = "Mailbox Name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "邮箱名字:" elseif GetLocale() == "koKR" then guiL[zxc] = "사서함 이름 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre de buzón:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Название почтового ящика:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom de la boîte aux lettres:" elseif GetLocale() == "deDE" then guiL[zxc] = "Briefkastenname:" end
    ; zxc = "Main Stance"
    if GetLocale() == "zhCN" then guiL[zxc] = "主姿态" elseif GetLocale() == "koKR" then guiL[zxc] = "주요 자세" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Actitud principal" elseif GetLocale() == "ruRU" then guiL[zxc] = "Основная стойка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Posture principale" elseif GetLocale() == "deDE" then guiL[zxc] = "Haupthaltung" end
    ; zxc = "Mainhand Enchant"
    if GetLocale() == "zhCN" then guiL[zxc] = "主手附魔" elseif GetLocale() == "koKR" then guiL[zxc] = "메인 핸드 마법" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Encantamiento de mano principal" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чары на основной руке" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enchantement de la main droite" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenhandverzauberung" end
    ; zxc = "Mainhand Poison:"
    if GetLocale() == "zhCN" then guiL[zxc] = "主手毒药:" elseif GetLocale() == "koKR" then guiL[zxc] = "메인 핸드 독 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Veneno de mano principal:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Яд на основной руке:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Poison de la main droite:" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenhandvergiftung:" end
    ; zxc = "Mainhand weapon name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "主手武器名字:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "메인 핸드 무기 이름 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre de arma de mano principal:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Название основного оружия:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom de l'arme de la main droite:" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenhandwaffenname:" end
    ; zxc = "Mainhand"
    if GetLocale() == "zhCN" then guiL[zxc] = "主手" elseif GetLocale() == "koKR" then guiL[zxc] = "Mehand" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano principal" elseif GetLocale() == "ruRU" then guiL[zxc] = "Основная рука" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main droite" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenhand" end
    ; zxc =
    "Make sure your hearthstone is set in the correct spot, near a mailbox, and when your bags are full it will hearth to near that mailbox."
    if GetLocale() == "zhCN" then guiL[zxc] = "确保你的炉石设置在正确的位置，附近有邮箱，当你的背包满了，它会炉石到附近的邮箱。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Hearthstone이 사서함 근처의 올바른 지점에 설정되어 있는지 확인하고 가방이 가득 차면 사서함 근처에서 난로가됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Asegúrese de que su piedra de hogar está configurada en el lugar correcto, cerca de un buzón, y cuando sus bolsas están llenas, se oirá cerca de ese buzón." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Убедитесь, что ваш камень возвращения установлен в правильном месте, рядом с почтовым ящиком, и когда ваши сумки заполнены, он вернется рядом с этим почтовым ящиком." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Assurez-vous que votre pierre de foyer est placée au bon endroit, près d'une boîte aux lettres, et lorsque vos sacs sont pleins, il vous ramènera près de cette boîte aux lettres." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Stellen Sie sicher, dass Ihr Heimstein an der richtigen Stelle, in der Nähe eines Briefkastens, eingestellt ist, und wenn Ihre Taschen voll sind, wird er sich in der Nähe dieses Briefkastens niederlassen." end
    ; zxc = "Makes the bot use flying mount"
    if GetLocale() == "zhCN" then guiL[zxc] = "使机器人使用飞行坐骑" elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇이 플라잉 마운트를 사용하게합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hace que el bot use montura voladora" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Заставляет бота использовать летающее средство передвижения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Faites en sorte que le bot utilise un monture volante" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Lässt den Bot einen Flugreittier benutzen" end
    ; zxc = "Makes the bot use mount"
    if GetLocale() == "zhCN" then guiL[zxc] = "使机器人使用坐骑" elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇이 마운트를 사용합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hace que el bot use montura" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Заставляет бота использовать средство передвижения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Faites en sorte que le bot utilise un monture" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Lässt den Bot einen Reittier benutzen" end
    ; zxc = "Makes the grind bot target elites."
    if GetLocale() == "zhCN" then guiL[zxc] = "使磨练机器人目标精英。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "그라인드 봇 대상 엘리트를 만듭니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hace que el bot de molienda objetivo de élites." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Заставляет бота целиться на элитных мобов." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Faites en sorte que le bot de broyage cible des élites." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Lässt den Bot-Grind-Target-Eliten." end
    ; zxc = "Mana Shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "法力护盾" elseif GetLocale() == "koKR" then guiL[zxc] = "마나 쉴드" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo de maná" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит маны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier de mana" elseif GetLocale() == "deDE" then guiL[zxc] = "Mana-Frühling" end
    ; zxc = "Mana burn"
    if GetLocale() == "zhCN" then guiL[zxc] = "法力燃烧" elseif GetLocale() == "koKR" then guiL[zxc] = "마나 화상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Quemadura de maná" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сожжение маны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brûlure de mana" elseif GetLocale() == "deDE" then guiL[zxc] = "Manabrand" end
    ; zxc = "Mangle for debuff"
    if GetLocale() == "zhCN" then guiL[zxc] = "割碎" elseif GetLocale() == "koKR" then guiL[zxc] = "압착 롤러" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mutilar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разорвать" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Mutiler" elseif GetLocale() == "deDE" then guiL[zxc] = "Verwunden" end
    ; zxc = "Master Name"
    if GetLocale() == "zhCN" then guiL[zxc] = "主人名字" elseif GetLocale() == "koKR" then guiL[zxc] = "마스터 이름" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre del amo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя хозяина" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du maître" elseif GetLocale() == "deDE" then guiL[zxc] = "Meister Name" end
    ; zxc = "Max Follow Distance"
    if GetLocale() == "zhCN" then guiL[zxc] = "最大跟随距离" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최대 거리를 따라갑니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Distancia máxima de seguimiento" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Максимальное расстояние от хозяина" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Distance de suivi maximale" elseif GetLocale() == "deDE" then guiL[zxc] = "Max. Folgedistanz" end
    ; zxc = "Max Overheal %"
    if GetLocale() == "zhCN" then guiL[zxc] = "最大过量治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "최대 방과성" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sobrecura máxima" elseif GetLocale() == "ruRU" then guiL[zxc] = "Максимальное избыточное исцеление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soin en excès maximum" elseif GetLocale() == "deDE" then guiL[zxc] = "Maximaler Überheilung" end
    ; zxc = "Max left position offset"
    if GetLocale() == "zhCN" then guiL[zxc] = "最大左偏移" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최대 좌측 위치 오프셋" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desplazamiento máximo a la izquierda" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Максимальное смещение влево" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Décalage maximal à gauche" elseif GetLocale() == "deDE" then guiL[zxc] = "Maximaler Linksbündiger Versatz" end
    ; zxc = "Max right position offset"
    if GetLocale() == "zhCN" then guiL[zxc] = "最大右偏移" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최대 오른쪽 위치 오프셋" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desplazamiento máximo a la derecha" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Максимальное смещение вправо" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Décalage maximal à droite" elseif GetLocale() == "deDE" then guiL[zxc] = "Maximaler Rechtsbündiger Versatz" end
    ; zxc = "Mend Pet %"
    if GetLocale() == "zhCN" then guiL[zxc] = "治疗宠物" elseif GetLocale() == "koKR" then guiL[zxc] = "수정 PET %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Curar mascota %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Лечение питомца %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soin du familier %" elseif GetLocale() == "deDE" then guiL[zxc] = "Tier heilen %" end
    ; zxc = "Min Enemys to Consecrate"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小敌人数目" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 적들에게 봉헌" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mínimo de enemigos para consagrar" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Минимальное количество врагов для консекрации" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nombre minimum d'ennemis pour consacrer" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Mindestanzahl der Feinde für Weihe" end
    ; zxc = "Min Follow Distance"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小跟随距离" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 거리를 따릅니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Distancia mínima de seguimiento" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Минимальное расстояние от хозяина" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Distance de suivi minimale" elseif GetLocale() == "deDE" then guiL[zxc] = "Minimale Folgeentfernung" end
    ; zxc = "Min left position offset"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小左偏移" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 좌측 위치 오프셋" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desplazamiento mínimo a la izquierda" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Минимальное смещение влево" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Décalage minimal à gauche" elseif GetLocale() == "deDE" then guiL[zxc] = "Minimaler Linksbündiger Versatz" end
    ; zxc = "Min right position offset"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小右偏移" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 오른쪽 위치 오프셋" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desplazamiento mínimo a la derecha" elseif GetLocale() == "ruRU" then guiL[zxc] = "Минимальное смещение вправо" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Décalage minimal à droite" elseif GetLocale() == "deDE" then guiL[zxc] = "Minimaler Rechtsbündiger Versatz" end
    ; zxc = "Mind Blast on CD"
    if GetLocale() == "zhCN" then guiL[zxc] = "精神鞭笞" elseif GetLocale() == "koKR" then guiL[zxc] = "CD에 마인드 폭발 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mente destrozada en CD" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар разума по CD" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe mentale en CD" elseif GetLocale() == "deDE" then guiL[zxc] = "Gedankenschlag auf CD" end
    ; zxc = "Mind Flay"
    if GetLocale() == "zhCN" then guiL[zxc] = "精神鞭笞" elseif GetLocale() == "koKR" then guiL[zxc] = "마인드 플레이 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mente destrozada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар разума" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe mentale" elseif GetLocale() == "deDE" then guiL[zxc] = "Gedankenschlag" end
    ; zxc = "Mine or Herb these mobs (separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "采集这些怪物的矿物或草药(用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "광산 또는 허브이 폭도들 (쉼표별로 별도)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Minar o recoger hierbas de estos mobs (separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Добывать или собирать травы с этих мобов (разделять запятой)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Miner ou cueillir ces mobs (séparer par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Erze oder Kräuter von diesen Mobs abbauen (durch Komma trennen)" end
    ; zxc = "Mob names to ignore (Separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "忽略怪物名字(用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "무시할 몹 이름 (쉼표별로 별도)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombres de mobs a ignorar (separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Игнорировать мобов (разделять запятой)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Noms de mobs à ignorer (séparer par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Ignoriere Mobs (durch Komma trennen)" end
    ; zxc = "Molten Armor"
    if GetLocale() == "zhCN" then guiL[zxc] = "熔岩护甲" elseif GetLocale() == "koKR" then guiL[zxc] = "녹은 갑옷 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Armadura de arrabio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Огненная броня" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Armure de la fournaise" elseif GetLocale() == "deDE" then guiL[zxc] = "Schmelzrüstung" end
    ; zxc = "Moonfire"
    if GetLocale() == "zhCN" then guiL[zxc] = "月火术" elseif GetLocale() == "koKR" then guiL[zxc] = "문 파이어" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuego lunar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Лунный огонь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Eclat lunaire" elseif GetLocale() == "deDE" then guiL[zxc] = "Mondfeuer" end
    ; zxc = "Moonkin Form"
    if GetLocale() == "zhCN" then guiL[zxc] = "枭兽形态" elseif GetLocale() == "koKR" then guiL[zxc] = "문킨 형태" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de fae lunar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облик лунного совуха" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme de sélénien" elseif GetLocale() == "deDE" then guiL[zxc] = "Moonkin-Form" end
    ; zxc = "Mount Item"
    if GetLocale() == "zhCN" then guiL[zxc] = "坐骑物品" elseif GetLocale() == "koKR" then guiL[zxc] = "마운트 아이템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Objeto de montura" elseif GetLocale() == "ruRU" then guiL[zxc] = "Предмет для ездового животного" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Objet de monture" elseif GetLocale() == "deDE" then guiL[zxc] = "Reittier Gegenstand" end
    ; zxc = "Mount Settings"
    if GetLocale() == "zhCN" then guiL[zxc] = "坐骑设置" elseif GetLocale() == "koKR" then guiL[zxc] = "마운트 설정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ajustes de montura" elseif GetLocale() == "ruRU" then guiL[zxc] = "Настройки ездового животного" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Paramètres de monture" elseif GetLocale() == "deDE" then guiL[zxc] = "Reittier Einstellungen" end
    ; zxc = "Mount Spell"
    if GetLocale() == "zhCN" then guiL[zxc] = "坐骑技能" elseif GetLocale() == "koKR" then guiL[zxc] = "마운트 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizo de montura" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заклинание ездового животного" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sort de monture" elseif GetLocale() == "deDE" then guiL[zxc] = "Reittier Zauber" end
    ; zxc = "Move to target"
    if GetLocale() == "zhCN" then guiL[zxc] = "移动到目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "대상으로 이동하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mover al objetivo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Переместиться к цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Se déplacer vers la cible" elseif GetLocale() == "deDE" then guiL[zxc] = "Ziel bewegen" end
    ; zxc = "Multi Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "多重射击" elseif GetLocale() == "koKR" then guiL[zxc] = "멀티 샷" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Disparo múltiple" elseif GetLocale() == "ruRU" then guiL[zxc] = "Залп" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Flèches multiples" elseif GetLocale() == "deDE" then guiL[zxc] = "Mehrfachschuss" end
    ; zxc = "Multi-Dot"
    if GetLocale() == "zhCN" then guiL[zxc] = "多重点名" elseif GetLocale() == "koKR" then guiL[zxc] = "멀티 도트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Puntos múltiples" elseif GetLocale() == "ruRU" then guiL[zxc] = "Множественные точки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Multi-Dot" elseif GetLocale() == "deDE" then guiL[zxc] = "Mehrfach-Punkt" end
    ; zxc = "Object Names"
    if GetLocale() == "zhCN" then guiL[zxc] = "物体名称" elseif GetLocale() == "koKR" then guiL[zxc] = "객체 이름" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombres de objetos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Названия объектов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Noms d'objets" elseif GetLocale() == "deDE" then guiL[zxc] = "Objekt Namen" end
    ; zxc = "Obliterate"
    if GetLocale() == "zhCN" then guiL[zxc] = "湮灭" elseif GetLocale() == "koKR" then guiL[zxc] = "말살" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Obliterar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облитерация" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Oblitération" elseif GetLocale() == "deDE" then guiL[zxc] = "Auslöschen" end
    ; zxc = "Offhand Enchant"
    if GetLocale() == "zhCN" then guiL[zxc] = "副手附魔" elseif GetLocale() == "koKR" then guiL[zxc] = "오프 핸드 마법 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Encantar mano izquierda" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чары для левой руки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enchantement de l'off-hand" elseif GetLocale() == "deDE" then guiL[zxc] = "Offhand Verzauberung" end
    ; zxc = "Offhand Poison:"
    if GetLocale() == "zhCN" then guiL[zxc] = "副手毒药：" elseif GetLocale() == "koKR" then guiL[zxc] = "오프 핸드 독 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Veneno de mano izquierda:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Яд для левой руки:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Poison de l'off-hand:" elseif GetLocale() == "deDE" then guiL[zxc] = "Offhand Gift:" end
    ; zxc = "Offhand weapon name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "副手武器名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "오프 핸드 무기 이름 : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre de arma de mano izquierda:" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Название оружия для левой руки:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom de l'arme de l'off-hand:" elseif GetLocale() == "deDE" then guiL[zxc] = "Offhand Waffenname:" end
    ; zxc = "Offhand"
    if GetLocale() == "zhCN" then guiL[zxc] = "副手" elseif GetLocale() == "koKR" then guiL[zxc] = "아무렇게나" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano izquierda" elseif GetLocale() == "ruRU" then guiL[zxc] = "Левая рука" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Off-hand" elseif GetLocale() == "deDE" then guiL[zxc] = "Offhand" end
    ; zxc = "Only Fast Heals"
    if GetLocale() == "zhCN" then guiL[zxc] = "只有快速治疗" elseif GetLocale() == "koKR" then guiL[zxc] =
        "빠른 치유 만 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sólo sanaciones rápidas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Только быстрые исцеления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Seulement les soins rapides" elseif GetLocale() == "deDE" then guiL[zxc] = "Nur schnelle Heilungen" end
    ; zxc = "Only Fast heals"
    if GetLocale() == "zhCN" then guiL[zxc] = "只有快速治疗" elseif GetLocale() == "koKR" then guiL[zxc] =
        "빠른 치유 만 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sólo sanaciones rápidas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Только быстрые исцеления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Seulement les soins rapides" elseif GetLocale() == "deDE" then guiL[zxc] = "Nur schnelle Heilungen" end
    ; zxc = "Only select 1 form, the form you want the bot to use the most of"
    if GetLocale() == "zhCN" then guiL[zxc] = "只选择1种形态，你希望机器人使用的形态" elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇이 가장 많이 사용하려는 양식 인 1을 선택하십시오." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sólo selecciona 1 forma, la forma que quieres que el bot use la mayor parte del tiempo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Выберите только 1 форму, форму, которую вы хотите, чтобы бот использовал чаще всего" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sélectionnez seulement 1 forme, la forme que vous voulez que le bot utilise le plus souvent" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wähle nur 1 Form aus, die Form die der Bot am meisten benutzen soll" end
    ; zxc = "Overpower Spellcast"
    if GetLocale() == "zhCN" then guiL[zxc] = "压制法术施放" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Spellcast를 압도합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Lanzamiento de hechizo de Suplantar" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Применение заклинания Переохотиться" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lancement de sort de Suppression" elseif GetLocale() == "deDE" then guiL[zxc] = "Überwältigen Zauberwirken" end
    ; zxc = "Override Interrupt Logic"
    if GetLocale() == "zhCN" then guiL[zxc] = "覆盖打断逻辑" elseif GetLocale() == "koKR" then guiL[zxc] =
        "인터럽트 로직을 무시합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Anular lógica de interrupción" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переопределить логику прерывания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Remplacer la logique d'interruption" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Unterbrechungslogik überschreiben" end
    ; zxc = "PW:S self in combat"
    if GetLocale() == "zhCN" then guiL[zxc] = "战斗中PW:S自己" elseif GetLocale() == "koKR" then guiL[zxc] =
        "PW : 전투중인 자아" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "PW:S en combate" elseif GetLocale() == "ruRU" then guiL[zxc] = "PW:S на себя в бою" elseif GetLocale() == "frFR" then guiL[zxc] =
        "PW:S sur soi en combat" elseif GetLocale() == "deDE" then guiL[zxc] = "PW:S auf sich selbst im Kampf" end
    ; zxc = "Padding from Walls"
    if GetLocale() == "zhCN" then guiL[zxc] = "墙壁间距" elseif GetLocale() == "koKR" then guiL[zxc] = "벽에서 패딩" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Espaciado de las paredes" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отступ от стен" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Espacement des murs" elseif GetLocale() == "deDE" then guiL[zxc] = "Abstand von Wänden" end
    ; zxc = "Pain Suppression %"
    if GetLocale() == "zhCN" then guiL[zxc] = "痛苦压制%" elseif GetLocale() == "koKR" then guiL[zxc] = "통증 억제 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Supresión del dolor %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Безболезненное лечение %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Suppression de la douleur %" elseif GetLocale() == "deDE" then guiL[zxc] = "Schmerzlinderung %" end
    ; zxc = "Penance for damage"
    if GetLocale() == "zhCN" then guiL[zxc] = "惩击伤害" elseif GetLocale() == "koKR" then guiL[zxc] = "피해에 대한 참회" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pena por daño" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать Исповедь для урона" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pénitence pour les dégâts" elseif GetLocale() == "deDE" then guiL[zxc] = "Sühne für Schaden" end
    ; zxc = "Penance for healing"
    if GetLocale() == "zhCN" then guiL[zxc] = "惩击治疗" elseif GetLocale() == "koKR" then guiL[zxc] = "치유를위한 참회" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pena por sanación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать Исповедь для исцеления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pénitence pour les soins" elseif GetLocale() == "deDE" then guiL[zxc] = "Sühne für Heilung" end
    ; zxc = "Pestilence"
    if GetLocale() == "zhCN" then guiL[zxc] = "瘟疫" elseif GetLocale() == "koKR" then guiL[zxc] = "역병" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Peste" elseif GetLocale() == "ruRU" then guiL[zxc] = "Чума" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Peste" elseif GetLocale() == "deDE" then guiL[zxc] = "Seuche" end
    ; zxc = "Pet Management"
    if GetLocale() == "zhCN" then guiL[zxc] = "宠物管理" elseif GetLocale() == "koKR" then guiL[zxc] = "애완 동물 관리" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Gestión de mascotas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Управление питомцем" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Gestion du familier" elseif GetLocale() == "deDE" then guiL[zxc] = "Begleiterverwaltung" end
    ; zxc = "Pet food (separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "宠物食物(用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "애완 동물 사료 (쉼표별로 별도)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comida de mascota (separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Еда для питомца (разделять запятыми)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nourriture pour familier (séparé par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Begleiterfutter (durch Komma getrennt)" end
    ; zxc = "Pet"
    if GetLocale() == "zhCN" then guiL[zxc] = "宠物" elseif GetLocale() == "koKR" then guiL[zxc] = "애완 동물" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mascota" elseif GetLocale() == "ruRU" then guiL[zxc] = "Питомец" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Familier" elseif GetLocale() == "deDE" then guiL[zxc] = "Begleiter" end
    ; zxc = "Pick Pocket"
    if GetLocale() == "zhCN" then guiL[zxc] = "偷窃" elseif GetLocale() == "koKR" then guiL[zxc] = "주머니를 선택하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Robar bolsillo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Карманная кража" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vol à la tire" elseif GetLocale() == "deDE" then guiL[zxc] = "Taschendiebstahl" end
    ; zxc = "Plague Strike when remains <= "
    if GetLocale() == "zhCN" then guiL[zxc] = "瘟疫打击当剩余 <= " elseif GetLocale() == "koKR" then guiL[zxc] =
        "남아있을 때 전염병 파업 <=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de peste cuando queda <= " elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар чумы, когда осталось <= " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe de la peste quand il reste <= " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Seuchenstoß wenn verbleibend <= " end
    ; zxc = "Poisons"
    if GetLocale() == "zhCN" then guiL[zxc] = "毒药" elseif GetLocale() == "koKR" then guiL[zxc] = "독" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Venenos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Яды" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Poisons" elseif GetLocale() == "deDE" then guiL[zxc] = "Gifte" end
    ; zxc = "Polymorph an off target"
    if GetLocale() == "zhCN" then guiL[zxc] = "变形一个非目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "다형성 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Polimorfia en un objetivo secundario" elseif GetLocale() == "ruRU" then guiL[zxc] = "Превращение в другую цель" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Polymorph sur une cible secondaire" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Verwandlung auf ein Nebenziel" end
    ; zxc = "Prayer of Mending"
    if GetLocale() == "zhCN" then guiL[zxc] = "愈合祷言" elseif GetLocale() == "koKR" then guiL[zxc] = "수선의기도" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Oración de sanación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молитва исцеления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Prière de guérison" elseif GetLocale() == "deDE" then guiL[zxc] = "Gebet der Besserung" end
    ; zxc = "Presences"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣洁光环" elseif GetLocale() == "koKR" then guiL[zxc] = "존재" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Presencias" elseif GetLocale() == "ruRU" then guiL[zxc] = "Присутствия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Présences" elseif GetLocale() == "deDE" then guiL[zxc] = "Präsenzen" end
    ; zxc = "Profile Info"
    if GetLocale() == "zhCN" then guiL[zxc] = "配置信息" elseif GetLocale() == "koKR" then guiL[zxc] = "프로필 정보 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Información del perfil" elseif GetLocale() == "ruRU" then guiL[zxc] = "Информация о профиле" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Info du profil" elseif GetLocale() == "deDE" then guiL[zxc] = "Profil Info" end
    ; zxc = "Profile Name"
    if GetLocale() == "zhCN" then guiL[zxc] = "配置名称" elseif GetLocale() == "koKR" then guiL[zxc] = "프로필 이름" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre del perfil" elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя профиля" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du profil" elseif GetLocale() == "deDE" then guiL[zxc] = "Profil Name" end
    ; zxc = "Profile to edit"
    if GetLocale() == "zhCN" then guiL[zxc] = "编辑配置" elseif GetLocale() == "koKR" then guiL[zxc] = "편집 할 프로필" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Perfil a editar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Профиль для редактирования" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Profil à éditer" elseif GetLocale() == "deDE" then guiL[zxc] = "Profil zum Bearbeiten" end
    ; zxc = "Prot Abilities"
    if GetLocale() == "zhCN" then guiL[zxc] = "防护技能" elseif GetLocale() == "koKR" then guiL[zxc] = "양성 능력" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilidades de Protección" elseif GetLocale() == "ruRU" then guiL[zxc] = "Защитные способности" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Compétences de protection" elseif GetLocale() == "deDE" then guiL[zxc] = "Schutz Fähigkeiten" end
    ; zxc = "Protection"
    if GetLocale() == "zhCN" then guiL[zxc] = "防护" elseif GetLocale() == "koKR" then guiL[zxc] = "보호" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Protección" elseif GetLocale() == "ruRU" then guiL[zxc] = "Защита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Protection" elseif GetLocale() == "deDE" then guiL[zxc] = "Schutz" end
    ; zxc = "Pull Settings"
    if GetLocale() == "zhCN" then guiL[zxc] = "拉怪设置" elseif GetLocale() == "koKR" then guiL[zxc] = "설정 설정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ajustes de Atraer" elseif GetLocale() == "ruRU" then guiL[zxc] = "Настройки притягивания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Paramètres de pull" elseif GetLocale() == "deDE" then guiL[zxc] = "Pull Einstellungen" end
    ; zxc = "Pull Spell"
    if GetLocale() == "zhCN" then guiL[zxc] = "拉怪技能" elseif GetLocale() == "koKR" then guiL[zxc] = "주문을 당기십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizo de Atraer" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заклинание притягивания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sort de pull" elseif GetLocale() == "deDE" then guiL[zxc] = "Pull Zauber" end
    ; zxc = "Pummel for Flurry"
    if GetLocale() == "zhCN" then guiL[zxc] = "拳击以触发乱舞" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Flurry를위한 Pummel" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Puñetazo para Furia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Зуботычина для Бешенства" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de poing pour Frénésie" elseif GetLocale() == "deDE" then guiL[zxc] = "Zuschlagen für Raserei" end
    ; zxc = "Pummel for interrupt"
    if GetLocale() == "zhCN" then guiL[zxc] = "拳击以打断" elseif GetLocale() == "koKR" then guiL[zxc] =
        "인터럽트를위한 pummel" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Puñetazo para interrumpir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Зуботычина для прерывания" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de poing pour interrompre" elseif GetLocale() == "deDE" then guiL[zxc] = "Zuschlagen für Unterbrechen" end
    ; zxc = "Purge these buffs (separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "净化这些增益效果(用逗号分隔)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 버프를 제거하십시오 (쉼표별로 별도)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Purgar estos beneficios (separar por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Очищать эти баффы (разделять запятой)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Purger ces buffs (séparer par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Diese Buffs entfernen (durch Komma trennen)" end
    ; zxc = "PvP Mount:"
    if GetLocale() == "zhCN" then guiL[zxc] = "PvP坐骑:" elseif GetLocale() == "koKR" then guiL[zxc] = "PVP 마운트 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Montura JcJ:" elseif GetLocale() == "ruRU" then guiL[zxc] = "PvP Mount:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Monture JcJ:" elseif GetLocale() == "deDE" then guiL[zxc] = "PvP Mount:" end
    ; zxc = "Pyroblast"
    if GetLocale() == "zhCN" then guiL[zxc] = "炎爆术" elseif GetLocale() == "koKR" then guiL[zxc] = "pyroblast" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Llamarada de Fuego" elseif GetLocale() == "ruRU" then guiL[zxc] = "Огненная глыба" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuerschlag" end
    ; zxc = "Questing"
    if GetLocale() == "zhCN" then guiL[zxc] = "任务" elseif GetLocale() == "koKR" then guiL[zxc] = "퀘스트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Misión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Квесты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Quêtes" elseif GetLocale() == "deDE" then guiL[zxc] = "Questing" end
    ; zxc = "Raise Dead #enemies >= "
    if GetLocale() == "zhCN" then guiL[zxc] = "召唤死尸 #敌人 >= " elseif GetLocale() == "koKR" then guiL[zxc] =
        "죽은 #enemies> =" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Invocar muerto #enemigos >= " elseif GetLocale() == "ruRU" then guiL[zxc] = "Призыв мертвеца #врагов >= " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Résurrection des morts #ennemis >= " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Tote auferstehen lassen #Feinde >= " end
    ; zxc = "Rake"
    if GetLocale() == "zhCN" then guiL[zxc] = "撕扯" elseif GetLocale() == "koKR" then guiL[zxc] = "갈퀴" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arañazo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Глубокая рана" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Griffure" elseif GetLocale() == "deDE" then guiL[zxc] = "Krallenhieb" end
    ; zxc = "Ravage when possible"
    if GetLocale() == "zhCN" then guiL[zxc] = "狂乱" elseif GetLocale() == "koKR" then guiL[zxc] = "가능하면 황폐합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Devastar cuando sea posible" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разорвать, когда возможно" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ravage quand possible" elseif GetLocale() == "deDE" then guiL[zxc] = "Zerfleischen wenn möglich" end
    ; zxc = "Realm Name"
    if GetLocale() == "zhCN" then guiL[zxc] = "服务器名称" elseif GetLocale() == "koKR" then guiL[zxc] = "영역 이름 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre del reino" elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя сервера" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du royaume" elseif GetLocale() == "deDE" then guiL[zxc] = "Realm Name" end
    ; zxc = "Rec. Dung. Entrance"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐地下城入口" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.똥.입구" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Entrada de mazmorra recomendada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рекомендуемый вход в подземелье" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Entrée de donjon recommandée" elseif GetLocale() == "deDE" then guiL[zxc] = "Empfohlene Instanz Eingang" end
    ; zxc = "Rec. Dung. Exit"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐地下城出口" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.똥.출구" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Salida de mazmorra recomendada" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемый выход из подземелья" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sortie de donjon recommandée" elseif GetLocale() == "deDE" then guiL[zxc] = "Empfohlene Instanz Ausgang" end
    ; zxc = "Rec. Dung. Regroup"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐地下城集合点" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.똥.다시 그룹" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reagrupamiento de mazmorra recomendado" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемая точка сбора в подземелье" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Regroupement de donjon recommandé" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlene Instanz Gruppierung" end
    ; zxc = "Rec. Grind Path (click)"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐打怪路径（点击）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.갈기 경로 (클릭)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ruta de mazmorra recomendada (clic)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемый путь для забоя (клик)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chemin de grind recommandé (clic)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlener Grind Weg (klicken)" end
    ; zxc = "Rec. Grind Path (run)"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐打怪路径（跑）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.갈기 경로 (실행)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ruta de mazmorra recomendada (correr)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемый путь для забоя (бег)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chemin de grind recommandé (courir)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlener Grind Weg (rennen)" end
    ; zxc = "Rec. NPC (click)"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐NPC（点击）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.NPC (클릭)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "PNJ recomendado (clic)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рекомендуемый НИП (клик)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "PNJ recommandé (clic)" elseif GetLocale() == "deDE" then guiL[zxc] = "Empfohlener NPC (klicken)" end
    ; zxc = "Rec. Replen #2 (optional)"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐补给点#2（可选）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.보충 #2 (선택 사항)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reposición recomendada #2 (opcional)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемая точка восстановления #2 (необязательно)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Repos recommandé #2 (optionnel)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlene Erholung #2 (optional)" end
    ; zxc = "Rec. Replen #3 (optional)"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐补给点#3（可选）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.보충 #3 (선택 사항)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reposición recomendada #3 (opcional)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемая точка восстановления #3 (необязательно)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Repos recommandé #3 (optionnel)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlene Erholung #3 (optional)" end
    ; zxc = "Rec. Replen Vendor"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐补给商人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.공급 업체를 보충하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Vendedor de reposición recomendado" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемый торговец восстановления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vendeur de repos recommandé" elseif GetLocale() == "deDE" then guiL[zxc] = "Empfohlener Erholungsverkäufer" end
    ; zxc = "Rec. Resurrection Path"
    if GetLocale() == "zhCN" then guiL[zxc] = "推荐复活路径" elseif GetLocale() == "koKR" then guiL[zxc] =
        "rec.부활 경로" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ruta de resurrección recomendada" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Рекомендуемый путь воскрешения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chemin de résurrection recommandé" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Empfohlener Weg der Wiederbelebung" end
    ; zxc = "Record"
    if GetLocale() == "zhCN" then guiL[zxc] = "记录" elseif GetLocale() == "koKR" then guiL[zxc] = "기록" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Grabar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Запись" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enregistrer" elseif GetLocale() == "deDE" then guiL[zxc] = "Aufzeichnen" end
    ; zxc = "Rejuv %"
    if GetLocale() == "zhCN" then guiL[zxc] = "回春术%" elseif GetLocale() == "koKR" then guiL[zxc] = "리브 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Rejuvenecimiento %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Омоложение %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Récupération %" elseif GetLocale() == "deDE" then guiL[zxc] = "Erneuerung %" end
    ; zxc = "Relog After (hours):"
    if GetLocale() == "zhCN" then guiL[zxc] = "重登时间（小时）：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "후퇴 후 (시간) : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reconectar después (horas):" elseif GetLocale() == "ruRU" then guiL[zxc] = "Перезайти через (часы):" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconnecter après (heures):" elseif GetLocale() == "deDE" then guiL[zxc] = "Neuverbinden nach (Stunden):" end
    ; zxc = "Relog"
    if GetLocale() == "zhCN" then guiL[zxc] = "重登" elseif GetLocale() == "koKR" then guiL[zxc] = "재로그 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reconectar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Перезайти" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconnecter" elseif GetLocale() == "deDE" then guiL[zxc] = "Neuverbinden" end
    ; zxc = "Renew %"
    if GetLocale() == "zhCN" then guiL[zxc] = "恢复%" elseif GetLocale() == "koKR" then guiL[zxc] = "갱신 %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Renovar %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возрождение %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rénovation %" elseif GetLocale() == "deDE" then guiL[zxc] = "Erneuerung %" end
    ; zxc = "Renew Rank"
    if GetLocale() == "zhCN" then guiL[zxc] = "恢复等级" elseif GetLocale() == "koKR" then guiL[zxc] = "갱신 순위" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Renovar rango" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возрождение ранг" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rénovation rang" elseif GetLocale() == "deDE" then guiL[zxc] = "Erneuerung Rang" end
    ; zxc = "Repair NPC Info"
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC信息" elseif GetLocale() == "koKR" then guiL[zxc] =
        "NPC 정보를 수리하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar información de PNJ" elseif GetLocale() == "ruRU" then guiL[zxc] = "Информация о NPC починки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer les informations du PNJ" elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC Info" end
    ; zxc = "Repair NPC Name: "
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "수리 NPC 이름 : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar nombre de PNJ: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя NPC починки: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer le nom du PNJ: " elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC Name: " end
    ; zxc = "Repair NPC Not Loaded "
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC未加载 " elseif GetLocale() == "koKR" then guiL[zxc] =
        "NPC를로드하지 않으면 수리하십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar PNJ no cargado " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC починки не загружен " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer le PNJ non chargé " elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC Nicht geladen " end
    ; zxc = "Repair NPC X: "
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC X：" elseif GetLocale() == "koKR" then guiL[zxc] = "수리 NPC X :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar PNJ X: " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC починки X: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer le PNJ X: " elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC X: " end
    ; zxc = "Repair NPC Y: "
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC Y：" elseif GetLocale() == "koKR" then guiL[zxc] = "수리 NPC Y :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar PNJ Y: " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC починки Y: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer le PNJ Y: " elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC Y: " end
    ; zxc = "Repair NPC Z: "
    if GetLocale() == "zhCN" then guiL[zxc] = "修理NPC Z：" elseif GetLocale() == "koKR" then guiL[zxc] = "수리 NPC Z :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reparar PNJ Z: " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC починки Z: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réparer le PNJ Z: " elseif GetLocale() == "deDE" then guiL[zxc] = "Reparatur NPC Z: " end
    ; zxc = "Replenish #2 NPC Info"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#2NPC信息" elseif GetLocale() == "koKR" then guiL[zxc] =
        "#2 NPC 정보를 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer #2 información de PNJ" elseif GetLocale() == "ruRU" then guiL[zxc] = "Информация о NPC восполнения #2" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer #2 les informations du PNJ" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen #2 NPC Info" end
    ; zxc = "Replenish #2 NPC Name: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#2NPC名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #2 NPC 이름 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer #2 nombre de PNJ: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя NPC восполнения #2: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer #2 le nom du PNJ: " elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen #2 NPC Name: " end
    ; zxc = "Replenish #2 NPC X: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#2NPC X：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #2 NPC X :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #2 PNJ X: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #2 X: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #2 le PNJ X: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #2 NPC X: " end
    ; zxc = "Replenish #2 NPC Y: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#2NPC Y：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #2 NPC Y :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #2 PNJ Y: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #2 Y: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #2 le PNJ Y: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #2 NPC Y: " end
    ; zxc = "Replenish #2 NPC Z: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#2NPC Z：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #2 NPC Z :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #2 PNJ Z: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #2 Z: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #2 le PNJ Z: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #2 NPC Z: " end
    ; zxc = "Replenish #3 NPC Info"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#3NPC信息" elseif GetLocale() == "koKR" then guiL[zxc] =
        "#3 NPC 정보를 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer #3 información de PNJ" elseif GetLocale() == "ruRU" then guiL[zxc] = "Информация о NPC восполнения #3" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer #3 les informations du PNJ" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen #3 NPC Info" end
    ; zxc = "Replenish #3 NPC Name: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#3NPC名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #3 NPC 이름 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer #3 nombre de PNJ: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя NPC восполнения #3: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer #3 le nom du PNJ: " elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen #3 NPC Name: " end
    ; zxc = "Replenish #3 NPC X: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#3NPC X：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #3 NPC X :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #3 PNJ X: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #3 X: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #3 le PNJ X: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #3 NPC X: " end
    ; zxc = "Replenish #3 NPC Y: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#3NPC Y：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #3 NPC Y : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #3 PNJ Y: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #3 Y: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #3 le PNJ Y: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #3 NPC Y: " end
    ; zxc = "Replenish #3 NPC Z: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充#3NPC Z：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보충 #3 NPC Z :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer #3 PNJ Z: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения #3 Z: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer #3 le PNJ Z: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen #3 NPC Z: " end
    ; zxc = "Replenish Item #1"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充物品#1" elseif GetLocale() == "koKR" then guiL[zxc] =
        "항목 #1을 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer artículo #1" elseif GetLocale() == "ruRU" then guiL[zxc] = "Предмет восполнения #1" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer l'objet #1" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen Gegenstand #1" end
    ; zxc = "Replenish Item #2"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充物品#2" elseif GetLocale() == "koKR" then guiL[zxc] =
        "항목 #2를 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer artículo #2" elseif GetLocale() == "ruRU" then guiL[zxc] = "Предмет восполнения #2" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer l'objet #2" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen Gegenstand #2" end
    ; zxc = "Replenish Item #3"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充物品#3" elseif GetLocale() == "koKR" then guiL[zxc] = "항목 #3 보충" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer artículo #3" elseif GetLocale() == "ruRU" then guiL[zxc] = "Предмет восполнения #3" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer l'objet #3" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen Gegenstand #3" end
    ; zxc = "Replenish NPC Info"
    if GetLocale() == "zhCN" then guiL[zxc] = "补充NPC信息" elseif GetLocale() == "koKR" then guiL[zxc] =
        "NPC 정보를 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer información del PNJ" elseif GetLocale() == "ruRU" then guiL[zxc] = "Информация о NPC восполнения" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer les informations du PNJ" elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen NPC Info" end
    ; zxc = "Replenish NPC Name: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充NPC名称：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "NPC 이름 보충 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer nombre del PNJ: " elseif GetLocale() == "ruRU" then guiL[zxc] = "Имя NPC восполнения: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le nom du PNJ: " elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen NPC Name: " end
    ; zxc = "Replenish NPC X: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充NPC X：" elseif GetLocale() == "koKR" then guiL[zxc] = "NPC X 보충 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer PNJ X: " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC восполнения X: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le PNJ X: " elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen NPC X: " end
    ; zxc = "Replenish NPC Y: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充NPC Y：" elseif GetLocale() == "koKR" then guiL[zxc] = "NPC y 보충 :" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer PNJ Y: " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC восполнения Y: " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le PNJ Y: " elseif GetLocale() == "deDE" then guiL[zxc] = "Auffüllen NPC Y: " end
    ; zxc = "Replenish NPC Z: "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充NPC Z：" elseif GetLocale() == "koKR" then guiL[zxc] =
        "NPC Z 보충 : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Reponer PNJ Z: " elseif GetLocale() == "ruRU" then guiL[zxc] =
        "NPC восполнения Z: " elseif GetLocale() == "frFR" then guiL[zxc] = "Reconstituer le PNJ Z: " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen NPC Z: " end
    ; zxc = "Replenish Vendor #2 Not Loaded "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充商人#2未加载 " elseif GetLocale() == "koKR" then guiL[zxc] =
        "공급 업체 #2가로드되지 않았습니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer vendedor #2 no cargado " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC восполнения #2 не загружен " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le vendeur #2 non chargé " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen Händler #2 nicht geladen " end
    ; zxc = "Replenish Vendor #3 Not Loaded "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充商人#3未加载 " elseif GetLocale() == "koKR" then guiL[zxc] =
        "공급 업체 #3로드되지 않음을 보충합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer vendedor #3 no cargado " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC восполнения #3 не загружен " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le vendeur #3 non chargé " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen Händler #3 nicht geladen " end
    ; zxc = "Replenish Vendor Not Loaded "
    if GetLocale() == "zhCN" then guiL[zxc] = "补充商人未加载 " elseif GetLocale() == "koKR" then guiL[zxc] =
        "공급 업체가로드되지 않은 보충됩니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reponer vendedor no cargado " elseif GetLocale() == "ruRU" then guiL[zxc] = "NPC восполнения не загружен " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Reconstituer le vendeur non chargé " elseif GetLocale() == "deDE" then guiL[zxc] =
        "Auffüllen Händler nicht geladen " end
    ; zxc = "Request Item #1"
    if GetLocale() == "zhCN" then guiL[zxc] = "请求物品#1" elseif GetLocale() == "koKR" then guiL[zxc] = "요청 항목 #1" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Solicitar artículo #1" elseif GetLocale() == "ruRU" then guiL[zxc] = "Запрос предмета #1" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Demander l'objet #1" elseif GetLocale() == "deDE" then guiL[zxc] = "Anfrage Artikel #1" end
    ; zxc = "Request Item #2"
    if GetLocale() == "zhCN" then guiL[zxc] = "请求物品#2" elseif GetLocale() == "koKR" then guiL[zxc] = "요청 항목 #2" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Solicitar artículo #2" elseif GetLocale() == "ruRU" then guiL[zxc] = "Запрос предмета #2" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Demander l'objet #2" elseif GetLocale() == "deDE" then guiL[zxc] = "Anfrage Artikel #2" end
    ; zxc = "Request Item #3"
    if GetLocale() == "zhCN" then guiL[zxc] = "请求物品#3" elseif GetLocale() == "koKR" then guiL[zxc] = "항목 #3 요청" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Solicitar artículo #3" elseif GetLocale() == "ruRU" then guiL[zxc] = "Запрос предмета #3" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Demander l'objet #3" elseif GetLocale() == "deDE" then guiL[zxc] = "Anfrage Artikel #3" end
    ; zxc = "Restoration"
    if GetLocale() == "zhCN" then guiL[zxc] = "恢复" elseif GetLocale() == "koKR" then guiL[zxc] = "복구" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Restauración" elseif GetLocale() == "ruRU" then guiL[zxc] = "Восстановление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Restauration" elseif GetLocale() == "deDE" then guiL[zxc] = "Wiederherstellung" end
    ; zxc = "Retribution Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "惩戒光环" elseif GetLocale() == "koKR" then guiL[zxc] = "보복 오라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de reprensión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура воздаяния" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de vindicte" elseif GetLocale() == "deDE" then guiL[zxc] = "Vergeltungsaura" end
    ; zxc = "Retribution"
    if GetLocale() == "zhCN" then guiL[zxc] = "惩戒" elseif GetLocale() == "koKR" then guiL[zxc] = "보복" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Reprensión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Воздаяние" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vindicte" elseif GetLocale() == "deDE" then guiL[zxc] = "Vergeltung" end
    ; zxc = "Revenge Shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "复仇之盾" elseif GetLocale() == "koKR" then guiL[zxc] = "복수 방패" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo de venganza" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит мести" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier de vengeance" elseif GetLocale() == "deDE" then guiL[zxc] = "Rache Schild" end
    ; zxc = "Righteous Fury"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义之怒" elseif GetLocale() == "koKR" then guiL[zxc] = "의로운 분노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Furia recta" elseif GetLocale() == "ruRU" then guiL[zxc] = "Праведная ярость" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Fureur vertueuse" elseif GetLocale() == "deDE" then guiL[zxc] = "Zorn der Gerechtigkeit" end
    ; zxc = "Righteous"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义" elseif GetLocale() == "koKR" then guiL[zxc] = "의로운" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Recto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Праведный" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vertueux" elseif GetLocale() == "deDE" then guiL[zxc] = "Rechtschaffen" end
    ; zxc = "Rightous Defender"
    if GetLocale() == "zhCN" then guiL[zxc] = "正义防御者" elseif GetLocale() == "koKR" then guiL[zxc] = "의로운 수비수" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Defensor recto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Праведный защитник" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Défenseur vertueux" elseif GetLocale() == "deDE" then guiL[zxc] = "Rechtschaffener Verteidiger" end
    ; zxc = "Rockbiter Weapon"
    if GetLocale() == "zhCN" then guiL[zxc] = "石化武器" elseif GetLocale() == "koKR" then guiL[zxc] = "록비터 무기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arma dentada" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие каменного укуса" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arme Croc-de-pierre" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffe Steinbiss" end
    ; zxc = "Run Backwards after nova for"
    if GetLocale() == "zhCN" then guiL[zxc] = "在新星后后退" elseif GetLocale() == "koKR" then guiL[zxc] =
        "노바 이후에 뒤로 달리십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Correr hacia atrás después de la nova por" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Беги назад после новы на" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Courir en arrière après nova pour" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Rückwärts nach Nova laufen für" end
    ; zxc = "Run Backwards after shoot for"
    if GetLocale() == "zhCN" then guiL[zxc] = "在射击后后退" elseif GetLocale() == "koKR" then guiL[zxc] =
        "촬영 후 뒤로 달리십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Correr hacia atrás después de disparar por" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Беги назад после выстрела на" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Courir en arrière après tir pour" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Rückwärts nach Schuss laufen für" end
    ; zxc = "Run"
    if GetLocale() == "zhCN" then guiL[zxc] = "跑" elseif GetLocale() == "koKR" then guiL[zxc] = "운영" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Correr" elseif GetLocale() == "ruRU" then guiL[zxc] = "Беги" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Courir" elseif GetLocale() == "deDE" then guiL[zxc] = "Laufen" end
    ; zxc = "Rune Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "符文打击" elseif GetLocale() == "koKR" then guiL[zxc] = "룬 스트라이크 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de runa" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар рун" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe runique" elseif GetLocale() == "deDE" then guiL[zxc] = "Runenstoß" end
    ; zxc = "Rune Tap when health <="
    if GetLocale() == "zhCN" then guiL[zxc] = "符文之力当血量低于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Rune Tap when health <=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de runa cuando la salud <=" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар рун, когда здоровье <=" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe runique quand la santé <=" elseif GetLocale() == "deDE" then guiL[zxc] = "Runenstoß, wenn Gesundheit <=" end
    ; zxc = "SWD Enemy HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "灵魂收割敌人血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "SWD 적 HP%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "SDA Vida enemiga %" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "СДЖ Жизнь противника %" elseif GetLocale() == "frFR" then guiL[zxc] = "SDA Vie ennemie %" elseif GetLocale() == "deDE" then guiL[zxc] =
        "SDA Gegner HP%" end
    ; zxc = "Sac @ friendly hp below"
    if GetLocale() == "zhCN" then guiL[zxc] = "救赎友方血量低于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "SAC @ 친절한 HP" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sac @ salud amistosa por debajo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Sac @ здоровье союзника ниже" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sac @ santé amicale en dessous" elseif GetLocale() == "deDE" then guiL[zxc] = "Sac @ freundliche HP unter" end
    ; zxc = "Sac @ self hp above"
    if GetLocale() == "zhCN" then guiL[zxc] = "救赎自身血量高于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "위의 sac @ self hp" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sac @ salud propia por encima" elseif GetLocale() == "ruRU" then guiL[zxc] = "Sac @ здоровье себя выше" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sac @ santé propre au-dessus" elseif GetLocale() == "deDE" then guiL[zxc] = "Sac @ eigene HP über" end
    ; zxc = "Sanctity Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣洁光环" elseif GetLocale() == "koKR" then guiL[zxc] = "신성한 아우라" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de santidad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Аура чистоты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de sanctuaire" elseif GetLocale() == "deDE" then guiL[zxc] = "Heiligschutzaura" end
    ; zxc = "Scorch"
    if GetLocale() == "zhCN" then guiL[zxc] = "灼烧" elseif GetLocale() == "koKR" then guiL[zxc] = "검게 탐" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Quemar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ожог" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brûlure" elseif GetLocale() == "deDE" then guiL[zxc] = "Versengen" end
    ; zxc = "Scorpid Sting"
    if GetLocale() == "zhCN" then guiL[zxc] = "毒蝎钉刺" elseif GetLocale() == "koKR" then guiL[zxc] = "scorpidSting" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Picadura de escórpido" elseif GetLocale() == "ruRU" then guiL[zxc] = "Жало скорпида" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Piqûre de scorpide" elseif GetLocale() == "deDE" then guiL[zxc] = "Skorpidstich" end
    ; zxc = "Scourge Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "天灾打击" elseif GetLocale() == "koKR" then guiL[zxc] = "스컬지 스트라이크" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de la Plaga" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар чумы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Frappe du Fléau" elseif GetLocale() == "deDE" then guiL[zxc] = "Seuchenstoß" end
    ; zxc = "Seal Twisting"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣印转换" elseif GetLocale() == "koKR" then guiL[zxc] = "밀봉 트위스트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sello de giro" elseif GetLocale() == "ruRU" then guiL[zxc] = "Смена печати" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sceau de rotation" elseif GetLocale() == "deDE" then guiL[zxc] = "Siegel drehen" end
    ; zxc = "Seal"
    if GetLocale() == "zhCN" then guiL[zxc] = "圣印" elseif GetLocale() == "koKR" then guiL[zxc] = "밀봉하다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sello" elseif GetLocale() == "ruRU" then guiL[zxc] = "Печать" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sceau" elseif GetLocale() == "deDE" then guiL[zxc] = "Siegel" end
    ; zxc = "Selling & Loot Options"
    if GetLocale() == "zhCN" then guiL[zxc] = "出售 & 拾取选项" elseif GetLocale() == "koKR" then guiL[zxc] =
        "판매 및 전리품 옵션" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Opciones de venta y botín" elseif GetLocale() == "ruRU" then guiL[zxc] = "Продажа и добыча" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Options de vente et de butin" elseif GetLocale() == "deDE" then guiL[zxc] = "Verkauf & Beute Optionen" end
    ; zxc = "Serpent Sting"
    if GetLocale() == "zhCN" then guiL[zxc] = "毒蛇钉刺" elseif GetLocale() == "koKR" then guiL[zxc] = "뱀 찌르기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Picadura de serpiente" elseif GetLocale() == "ruRU" then guiL[zxc] = "Жало змеи" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Morsure de serpent" elseif GetLocale() == "deDE" then guiL[zxc] = "Schlangenbiss" end
    ; zxc = "Setup"
    if GetLocale() == "zhCN" then guiL[zxc] = "设置" elseif GetLocale() == "koKR" then guiL[zxc] = "설정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Configuración" elseif GetLocale() == "ruRU" then guiL[zxc] = "Настройки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Configuration" elseif GetLocale() == "deDE" then guiL[zxc] = "Setup" end
    ; zxc = "Shadow Bolt"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影箭" elseif GetLocale() == "koKR" then guiL[zxc] = "그림자 볼트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Descarga de las Sombras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Стрела Тьмы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de l'ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenblitz" end
    ; zxc = "Shadow Form"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影形态" elseif GetLocale() == "koKR" then guiL[zxc] = "그림자 형태" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de las Sombras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Облик Тьмы" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenform" end
    ; zxc = "Shadow Resist Aura"
    if GetLocale() == "zhCN" then guiL[zxc] = "阴影抗性光环" elseif GetLocale() == "koKR" then guiL[zxc] =
        "그림자는 오라에 저항합니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aura de resistencia a las Sombras" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Аура сопротивления темной магии" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aura de résistance à l'Ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenwiderstandsaura" end
    ; zxc = "Shadow"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影" elseif GetLocale() == "koKR" then guiL[zxc] = "그림자" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sombras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Темная магия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Schatten" end
    ; zxc = "Shadowburn %"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影灼烧 %" elseif GetLocale() == "koKR" then guiL[zxc] =
        "shadowburn %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Quemadura de las Sombras %" elseif GetLocale() == "ruRU" then guiL[zxc] = "Пылающая боль %" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brûlure de l'ombre %" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenbrand %" end
    ; zxc = "Shadowburn auto%"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影灼烧自动%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Shadowburn Auto%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Quemadura de las Sombras auto%" elseif GetLocale() == "ruRU" then guiL[zxc] = "Пылающая боль авто%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Brûlure de l'ombre auto%" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenbrand auto%" end
    ; zxc = "Shadowfiend"
    if GetLocale() == "zhCN" then guiL[zxc] = "暗影魔" elseif GetLocale() == "koKR" then guiL[zxc] = "그림자 마귀" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sombra de maná" elseif GetLocale() == "ruRU" then guiL[zxc] = "Тенелов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ombrefiel" elseif GetLocale() == "deDE" then guiL[zxc] = "Schattenwichtel" end
    ; zxc = "Shield @ HP"
    if GetLocale() == "zhCN" then guiL[zxc] = "护盾 @ 血量" elseif GetLocale() == "koKR" then guiL[zxc] = "방패 @ hp" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo @ HP" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит @ HP" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier @ HP" elseif GetLocale() == "deDE" then guiL[zxc] = "Schild @ HP" end
    ; zxc = "Shield Abilities"
    if GetLocale() == "zhCN" then guiL[zxc] = "护盾技能" elseif GetLocale() == "koKR" then guiL[zxc] = "방패 능력" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilidades de Escudo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Способности щита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Compétences de bouclier" elseif GetLocale() == "deDE" then guiL[zxc] = "Schildfähigkeiten" end
    ; zxc = "Shield Wall @"
    if GetLocale() == "zhCN" then guiL[zxc] = "盾墙 @" elseif GetLocale() == "koKR" then guiL[zxc] = "방패 벽 @" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Muro de Escudo @" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит стены @" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Mur protecteur @" elseif GetLocale() == "deDE" then guiL[zxc] = "Schildwall @" end
    ; zxc = "Shield block to get revenge"
    if GetLocale() == "zhCN" then guiL[zxc] = "盾牌格挡以获得复仇" elseif GetLocale() == "koKR" then guiL[zxc] =
        "복수를위한 방패 블록" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Bloqueo de escudo para obtener venganza" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Блок щитом для восстановления" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier pour se venger" elseif GetLocale() == "deDE" then guiL[zxc] = "Schildblocken um Rache zu bekommen" end
    ; zxc = "Shield name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "护盾名称:" elseif GetLocale() == "koKR" then guiL[zxc] = "방패 이름 : " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Nombre de Escudo:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Название щита:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Nom du bouclier:" elseif GetLocale() == "deDE" then guiL[zxc] = "Schildname:" end
    ; zxc = "Shift for energy (furor)"
    if GetLocale() == "zhCN" then guiL[zxc] = "变形为能量 (狂怒)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "에너지를위한 Shapeshift (Furor)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de cambio para energía (furor)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Смена формы для энергии (ярости)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'animal pour l'énergie (fureur)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Formwechsel für Energie (Wut)" end
    ; zxc = "Shift for rage (furor)"
    if GetLocale() == "zhCN" then guiL[zxc] = "变形为怒气 (狂怒)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "분노를위한 Shapeshift (Furor)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Forma de cambio para ira (furor)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Смена формы для ярости (ярости)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Forme d'animal pour la rage (fureur)" elseif GetLocale() == "deDE" then guiL[zxc] = "Formwechsel für Wut (Wut)" end
    ; zxc = "Sinister Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "邪恶攻击" elseif GetLocale() == "koKR" then guiL[zxc] = "불길한 스트라이크 " elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe Sinistro" elseif GetLocale() == "ruRU" then guiL[zxc] = "Пристальный удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Attaque pernicieuse" elseif GetLocale() == "deDE" then guiL[zxc] = "Finsterer Stoß" end
    ; zxc = "Skills"
    if GetLocale() == "zhCN" then guiL[zxc] = "技能" elseif GetLocale() == "koKR" then guiL[zxc] = "기술" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Habilidades" elseif GetLocale() == "ruRU" then guiL[zxc] = "Способности" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Compétences" elseif GetLocale() == "deDE" then guiL[zxc] = "Fähigkeiten" end
    ; zxc = "Slam"
    if GetLocale() == "zhCN" then guiL[zxc] = "猛击" elseif GetLocale() == "koKR" then guiL[zxc] = "쾅" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Golpe de martillo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Мощный удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de massue" elseif GetLocale() == "deDE" then guiL[zxc] = "Zerschmettern" end
    ; zxc = "Slave"
    if GetLocale() == "zhCN" then guiL[zxc] = "奴隶" elseif GetLocale() == "koKR" then guiL[zxc] = "노예" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esclavo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Раб" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Esclave" elseif GetLocale() == "deDE" then guiL[zxc] = "Diener" end
    ; zxc = "Slice and Dice"
    if GetLocale() == "zhCN" then guiL[zxc] = "切割" elseif GetLocale() == "koKR" then guiL[zxc] = "슬라이스와 주사위" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tajo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рассечение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tranche et Eviscère" elseif GetLocale() == "deDE" then guiL[zxc] = "Zerhäckseln" end
    ; zxc = "Slow"
    if GetLocale() == "zhCN" then guiL[zxc] = "减速" elseif GetLocale() == "koKR" then guiL[zxc] = "느린" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Lento" elseif GetLocale() == "ruRU" then guiL[zxc] = "Замедление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ralentissement" elseif GetLocale() == "deDE" then guiL[zxc] = "Verlangsamen" end
    ; zxc = "Smart Bloodrage"
    if GetLocale() == "zhCN" then guiL[zxc] = "智能血性狂暴" elseif GetLocale() == "koKR" then guiL[zxc] = "스마트 혈액" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ira sanguínea inteligente" elseif GetLocale() == "ruRU" then guiL[zxc] = "Умный Кровавый Яростный Удар" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Rage sanguinaire intelligente" elseif GetLocale() == "deDE" then guiL[zxc] = "Intelligente Blutrausch" end
    ; zxc = "Smart Move Friendly Weight"
    if GetLocale() == "zhCN" then guiL[zxc] = "智能移动友方权重" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스마트 이동 친화적 인 체중" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Peso de movimiento inteligente de aliados" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вес дружественных целей" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Poids de déplacement intelligent des alliés" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Intelligente Bewegungsfreundgewichtung" end
    ; zxc = "Smart Move Hostile Weight"
    if GetLocale() == "zhCN" then guiL[zxc] = "智能移动敌方权重" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스마트 이동 적대 체중" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Peso de movimiento inteligente de enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вес вражеских целей" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Poids de déplacement intelligent des ennemis" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Intelligente Bewegungsgewichtung" end
    ; zxc = "Smite"
    if GetLocale() == "zhCN" then guiL[zxc] = "惩击" elseif GetLocale() == "koKR" then guiL[zxc] = "강타" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Castigo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Правосудие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Châtiment" elseif GetLocale() == "deDE" then guiL[zxc] = "Göttliche Pein" end
    ; zxc = "Soulshard Count"
    if GetLocale() == "zhCN" then guiL[zxc] = "灵魂碎片计数" elseif GetLocale() == "koKR" then guiL[zxc] =
        "소울 샤드 동전t" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Contador de fragmentos de alma" elseif GetLocale() == "ruRU" then guiL[zxc] = "Количество камней душ" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Compteur de fragments d'âme" elseif GetLocale() == "deDE" then guiL[zxc] = "Seelensteinzähler" end
    ; zxc = "Spam Thunderclap"
    if GetLocale() == "zhCN" then guiL[zxc] = "雷霆一击垃圾" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스팸 썬더 클랩" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Spam de estruendo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Спам Громового Раскат" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Spam de Coup de tonnerre" elseif GetLocale() == "deDE" then guiL[zxc] = "Spam Donnerknall" end
    ; zxc = "Spread Corruption"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播腐蚀" elseif GetLocale() == "koKR" then guiL[zxc] = "부패를 퍼 뜨리십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar Corrupción" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение порчи" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser la Corruption" elseif GetLocale() == "deDE" then guiL[zxc] = "Verderbnis verbreiten" end
    ; zxc = "Spread Immolate"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播献祭" elseif GetLocale() == "koKR" then guiL[zxc] = "면역을 퍼 뜨리십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar Inmolación" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение Ожога" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser l'Immolation" elseif GetLocale() == "deDE" then guiL[zxc] = "Feuerbrand verbreiten" end
    ; zxc = "Spread Rend"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播撕裂" elseif GetLocale() == "koKR" then guiL[zxc] = "스프레드 렌드" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar Desgarrar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение Рвань" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser Rend" elseif GetLocale() == "deDE" then guiL[zxc] = "Verwunden verbreiten" end
    ; zxc = "Spread SW:P"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播暗言术：痛" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스프레드 SW : p" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar PdS: Dolor" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение SW:P" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser Mot de l'ombre : Douleur" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Schattenwort: Schmerz verbreiten" end
    ; zxc = "Spread Siphon Life"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播生命虹吸" elseif GetLocale() == "koKR" then guiL[zxc] =
        "사이펀 생명을 확산시킵니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar Sifón de vida" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение Вытягивание жизни" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser Siphon de vie" elseif GetLocale() == "deDE" then guiL[zxc] = "Lebensentzug verbreiten" end
    ; zxc = "Spread UA"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播痛苦无常" elseif GetLocale() == "koKR" then guiL[zxc] = "확산됩니다" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar UA" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение UA" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser UA" elseif GetLocale() == "deDE" then guiL[zxc] = "Unheilige Aura verbreiten" end
    ; zxc = "Spread VT"
    if GetLocale() == "zhCN" then guiL[zxc] = "传播痛苦诅咒" elseif GetLocale() == "koKR" then guiL[zxc] = "확산 Vt" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersar Maldición de agonía" elseif GetLocale() == "ruRU" then guiL[zxc] = "Распространение VT" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disperser Malédiction de l'ombre" elseif GetLocale() == "deDE" then guiL[zxc] = "Fluch der Pein verbreiten" end
    ; zxc = "Sprint"
    if GetLocale() == "zhCN" then guiL[zxc] = "疾跑" elseif GetLocale() == "koKR" then guiL[zxc] = "스프린트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sprint" elseif GetLocale() == "ruRU" then guiL[zxc] = "Спринт" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sprint" elseif GetLocale() == "deDE" then guiL[zxc] = "Sprint" end
    ; zxc = "Stacks to replenish item #1"
    if GetLocale() == "zhCN" then guiL[zxc] = "堆叠补充物品#1" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스택을 채우기 위해 아이템 #1" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pilas para reponer el artículo #1" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Стаки для восполнения предмета #1" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Stacks pour renouveler l'objet #1" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Stapel, um Gegenstand #1 aufzufüllen" end
    ; zxc = "Stacks to replenish item #2"
    if GetLocale() == "zhCN" then guiL[zxc] = "堆叠补充物品#2" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스택을 채우기 위해 아이템 #2" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pilas para reponer el artículo #2" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Стаки для восполнения предмета #2" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Stacks pour renouveler l'objet #2" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Stapel, um Gegenstand #2 aufzufüllen" end
    ; zxc = "Stacks to replenish item #3"
    if GetLocale() == "zhCN" then guiL[zxc] = "堆叠补充物品#3" elseif GetLocale() == "koKR" then guiL[zxc] =
        "스택을 채우기 위해 아이템 #3" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pilas para reponer el artículo #3" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Стаки для восполнения предмета #3" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Stacks pour renouveler l'objet #3" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Stapel, um Gegenstand #3 aufzufüllen" end
    ; zxc = "Starfall #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "星辰坠落#敌人" elseif GetLocale() == "koKR" then guiL[zxc] =
        "별똥별 #적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Caída de estrellas #enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Падение звезд #враги" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chute d'étoiles #ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Sternenregen #Feinde" end
    ; zxc = "Starfire"
    if GetLocale() == "zhCN" then guiL[zxc] = "星火术" elseif GetLocale() == "koKR" then guiL[zxc] = "별빛섬광" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuego estelar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Звездный огонь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Trait de feu" elseif GetLocale() == "deDE" then guiL[zxc] = "Sternenfeuer" end
    ; zxc = "Start (MASTER ONLY)"
    if GetLocale() == "zhCN" then guiL[zxc] = "开始(仅限主人)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시작 (마스터 만)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comienzo (MASTER SOLO)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Начало (ТОЛЬКО МАСТЕР)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Début (MASTER UNIQUEMENT)" elseif GetLocale() == "deDE" then guiL[zxc] = "Start (NUR MASTER)" end
    ; zxc = "Start Grind"
    if GetLocale() == "zhCN" then guiL[zxc] = "开始打怪" elseif GetLocale() == "koKR" then guiL[zxc] = "그린드 시작" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comenzar a moler" elseif GetLocale() == "ruRU" then guiL[zxc] = "Начать замол" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Commencer à broyer" elseif GetLocale() == "deDE" then guiL[zxc] = "Starten Sie Mahlen" end
    ; zxc = "Start"
    if GetLocale() == "zhCN" then guiL[zxc] = "开始" elseif GetLocale() == "koKR" then guiL[zxc] = "시작" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Comienzo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Начало" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Début" elseif GetLocale() == "deDE" then guiL[zxc] = "Start" end
    ; zxc = "Static Objects"
    if GetLocale() == "zhCN" then guiL[zxc] = "静态物体" elseif GetLocale() == "koKR" then guiL[zxc] = "정적 객체" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Objetos estáticos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Статические объекты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Objets statiques" elseif GetLocale() == "deDE" then guiL[zxc] = "Statische Objekte" end
    ; zxc = "Stealth all the time"
    if GetLocale() == "zhCN" then guiL[zxc] = "一直潜行" elseif GetLocale() == "koKR" then guiL[zxc] = "항상은 은신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sigilo todo el tiempo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Всегда в невидимости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Camouflage tout le temps" elseif GetLocale() == "deDE" then guiL[zxc] = "Immer im Verborgenen" end
    ; zxc = "Stealth between targets"
    if GetLocale() == "zhCN" then guiL[zxc] = "目标间潜行" elseif GetLocale() == "koKR" then guiL[zxc] = "대상 사이에 은신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sigilo entre objetivos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Невидимость между целями" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Camouflage entre les cibles" elseif GetLocale() == "deDE" then guiL[zxc] = "Im Verborgenen zwischen Zielen" end
    ; zxc = "Stings"
    if GetLocale() == "zhCN" then guiL[zxc] = "毒蝎钉刺" elseif GetLocale() == "koKR" then guiL[zxc] = "독침" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Picaduras" elseif GetLocale() == "ruRU" then guiL[zxc] = "Жало" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Piqûres" elseif GetLocale() == "deDE" then guiL[zxc] = "Stiche" end
    ; zxc = "Stop"
    if GetLocale() == "zhCN" then guiL[zxc] = "停止" elseif GetLocale() == "koKR" then guiL[zxc] = "중지" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Detener" elseif GetLocale() == "ruRU" then guiL[zxc] = "Стоп" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arrêter" elseif GetLocale() == "deDE" then guiL[zxc] = "Stop" end
    ; zxc = "Strength of Earth"
    if GetLocale() == "zhCN" then guiL[zxc] = "大地之力" elseif GetLocale() == "koKR" then guiL[zxc] = "대지의 힘" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Fuerza de la tierra" elseif GetLocale() == "ruRU" then guiL[zxc] = "Сила земли" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Force de la terre" elseif GetLocale() == "deDE" then guiL[zxc] = "Stärke der Erde" end
    ; zxc = "Succubus"
    if GetLocale() == "zhCN" then guiL[zxc] = "魅魔" elseif GetLocale() == "koKR" then guiL[zxc] = "서큐버스" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Súcubo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Суккуб" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Succube" elseif GetLocale() == "deDE" then guiL[zxc] = "Sukkubus" end
    ; zxc = "Summon Water Elemental"
    if GetLocale() == "zhCN" then guiL[zxc] = "召唤水元素" elseif GetLocale() == "koKR" then guiL[zxc] = "물 정령 소환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Invocar elemento de agua" elseif GetLocale() == "ruRU" then guiL[zxc] = "Призвать водяного элементаля" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Invocation d'un élémentaire d'eau" elseif GetLocale() == "deDE" then guiL[zxc] = "Wasserelementar beschwören" end
    ; zxc = "Sunder stacks"
    if GetLocale() == "zhCN" then guiL[zxc] = "破甲堆叠" elseif GetLocale() == "koKR" then guiL[zxc] = "무기 파괴 중첩" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desgarrar acumulaciones" elseif GetLocale() == "ruRU" then guiL[zxc] = "Раскол стаки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Empiler les affaiblissements" elseif GetLocale() == "deDE" then guiL[zxc] = "Zerfledder Stapel" end
    ; zxc = "Switch back to 2h"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换回双手武器" elseif GetLocale() == "koKR" then guiL[zxc] =
        "양손 무기로 전환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar a 2M" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключиться на 2-х ручное" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Changer pour 2M" elseif GetLocale() == "deDE" then guiL[zxc] = "Zurück zu 2H" end
    ; zxc = "Switch back to dual wield"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换回双持武器" elseif GetLocale() == "koKR" then guiL[zxc] =
        "쌍수 무기로 전환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar a 2M" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключиться на двуручное" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Changer pour 2M" elseif GetLocale() == "deDE" then guiL[zxc] = "Zurück zu 2H" end
    ; zxc = "Switch profile #1"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换配置文件 #1" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환 #1" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar perfil #1" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль #1" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil #1" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil #1 wechseln" end
    ; zxc = "Switch profile #2"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换配置文件 #2" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환 #2" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar perfil #2" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль #2" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil #2" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil #2 wechseln" end
    ; zxc = "Switch profile #3"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换配置文件 #3" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환 #3" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar perfil #3" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль #3" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil #3" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil #3 wechseln" end
    ; zxc = "Switch profile #4"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换配置文件 #4" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환 #4" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar perfil #4" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль #4" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil #4" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil #4 wechseln" end
    ; zxc = "Switch profile #5"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换配置文件 #5" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환 #5" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar perfil #5" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль #5" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil #5" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil #5 wechseln" end
    ; zxc = "Switch to profile:"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换到配置文件:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "프로필 전환:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Cambiar a perfil:" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить профиль:" elseif GetLocale() == "frFR" then guiL[zxc] = "Changer de profil:" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Profil wechseln:" end
    ; zxc = "Swords"
    if GetLocale() == "zhCN" then guiL[zxc] = "剑" elseif GetLocale() == "koKR" then guiL[zxc] = "검" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Espadas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Мечи" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Epées" elseif GetLocale() == "deDE" then guiL[zxc] = "Schwerter" end
    ; zxc = "Tank movement (afk)"
    if GetLocale() == "zhCN" then guiL[zxc] = "坦克移动(afk)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "탱커 이동(afk)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Movimiento del tanque (afk)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Движение танка (afk)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Déplacement du tank (afk)" elseif GetLocale() == "deDE" then guiL[zxc] = "Tankbewegung (afk)" end
    ; zxc = "Tanking"
    if GetLocale() == "zhCN" then guiL[zxc] = "坦克" elseif GetLocale() == "koKR" then guiL[zxc] = "탱커" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tanque" elseif GetLocale() == "ruRU" then guiL[zxc] = "Танк" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tank" elseif GetLocale() == "deDE" then guiL[zxc] = "Tanken" end
    ; zxc = "Temp. Weapon Enchants "
    if GetLocale() == "zhCN" then guiL[zxc] = "临时武器附魔" elseif GetLocale() == "koKR" then guiL[zxc] =
        "임시 무기 마법부여" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Encantamientos de arma temporales " elseif GetLocale() == "ruRU" then guiL[zxc] = "Временные чары на оружие " elseif GetLocale() == "frFR" then guiL[zxc] =
        "Enchantements d'arme temporaire " elseif GetLocale() == "deDE" then guiL[zxc] = "Temp. Waffenverzauberungen " end
    ; zxc = "The bot will attempt to stand behind the target."
    if GetLocale() == "zhCN" then guiL[zxc] = "机器人将尝试站在目标后面." elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇은 대상 뒤에 서려고 시도합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot intentará estar detrás del objetivo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот попытается стоять позади цели." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot essaiera de se placer derrière la cible." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Bot wird versuchen, hinter dem Ziel zu stehen." end
    ; zxc = "The bot will not initialize combat with mobs that are this many or more higher level than your character."
    if GetLocale() == "zhCN" then guiL[zxc] = "机器人将不会与比你的角色高这么多级的怪物初始化战斗." elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇은 당신의 캐릭터보다 이만큼 높은 레벨의 몹과 전투를 시작하지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot no iniciará combate con mobs que sean esta cantidad o más niveles más altos que tu personaje." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот не будет начинать бой с мобами, которые настолько или более высокого уровня, чем ваш персонаж." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot ne lancera pas de combat avec les mobs qui sont de ce nombre ou plus de niveaux supérieurs à votre personnage." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Bot wird keinen Kampf mit Mobs beginnen, die so viele oder mehr höhere Level als dein Charakter sind." end
    ; zxc = "The bot will only hit 1 enemy, not multiple."
    if GetLocale() == "zhCN" then guiL[zxc] = "机器人只会攻击1个敌人,而不是多个." elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇은 1명의 적만 공격하고, 다수의 적은 공격하지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot solo golpeará 1 enemigo, no múltiples." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот будет атаковать только 1 врага, а не несколько." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot ne frappera qu'un ennemi, pas plusieurs." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Bot wird nur 1 Gegner treffen, nicht mehrere." end
    ; zxc = "The bot will randomly strafe if it is in melee range of the enemy."
    if GetLocale() == "zhCN" then guiL[zxc] = "机器人将随机横移,如果它在敌人的近战范围内." elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇은 적의 근접 범위에 있으면 랜덤으로 피합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot se desplazará aleatoriamente si está en rango de ataque cuerpo a cuerpo del enemigo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот будет случайно отклоняться, если он находится в ближнем бою с врагом." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot se déplacera aléatoirement si il est à portée de corps à corps de l'ennemi." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Bot wird zufällig ausweichen, wenn er im Nahkampfreichweite des Gegners ist." end
    ; zxc =
    "The dungeon bot will only pull this many elites at once, so if there is a patrol making more elites around it might trigger that."
    if GetLocale() == "zhCN" then guiL[zxc] = "地下城机器人将一次只拉这么多精英,所以如果有巡逻制造更多的精英周围它可能触发." elseif GetLocale() == "koKR" then guiL[zxc] =
        "던전 봇은 한번에 이만큼의 정예 몹만 끌어옵니다. 그래서 주변에 정예 몹이 더 많이 나오는 경비병이 있으면 그것이 트리거 될 수 있습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot de mazmorras solo arrastrará esta cantidad de elites a la vez, por lo que si hay una patrulla que hace más elites alrededor podría activar eso." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот подземелий будет только тянуть это много элитов одновременно, поэтому, если есть патруль, делающий больше элитов вокруг, это может вызвать это." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot de donjon ne tirera que ce nombre d'élites à la fois, donc s'il y a une patrouille qui fait plus d'élites autour, cela pourrait déclencher cela." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Dungeonbot wird nur diese Anzahl von Eliten gleichzeitig ziehen, so dass, wenn es eine Patrouille gibt, die mehr Eliten um es herum auslöst, könnte das auslösen." end
    ; zxc =
    "The grind bot will attempt to initiate combat with this many mobs at once. If you are below your rest HP or MP% it will not pull more."
    if GetLocale() == "zhCN" then guiL[zxc] = "磨练机器人将尝试与这么多的怪物同时发起战斗.如果你低于你的休息HP或MP％它将不会拉更多." elseif GetLocale() == "koKR" then guiL[zxc] =
        "그라인드 봇은 한번에 이만큼의 몹과 전투를 시도합니다. HP 또는 MP가 rest HP 또는 MP%보다 낮으면 더 끌어오지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El bot de molienda intentará iniciar el combate con esta cantidad de enemigos a la vez. Si estás por debajo de tu HP de descanso o MP%, no arrastrarás más." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Бот для зерна будет пытаться начать бой с этим количеством мобов одновременно. Если вы ниже своего HP или MP% отдыха, он не будет тянуть больше." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le bot de broyage tentera d'initier le combat avec ce nombre de mobs à la fois. Si vous êtes en dessous de votre HP de repos ou de votre MP%, il ne tirera pas plus." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Grindbot wird versuchen, den Kampf mit dieser Anzahl von Mobs gleichzeitig zu beginnen. Wenn Sie unter Ihrem Rest HP oder MP% sind, ziehen Sie nicht mehr." end
    ; zxc = "The hunter will attack immediately and not wait for the pet to engage combat"
    if GetLocale() == "zhCN" then guiL[zxc] = "猎人将立即攻击,不等待宠物参与战斗" elseif GetLocale() == "koKR" then guiL[zxc] =
        "사냥꾼은 즉시 공격하고 애완동물이 전투에 참여할 때까지 기다리지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "El cazador atacará inmediatamente y no esperará a que la mascota se enganche en el combate" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Охотник сразу же атакует и не ждет, пока питомец не вступит в бой" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Le chasseur attaquera immédiatement et ne attendra pas que le familier engage le combat" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Der Jäger greift sofort an und wartet nicht darauf, dass das Haustier den Kampf beginnt" end
    ; zxc = "This delays your interrupt ability an amount of milliseconds to humanize it."
    if GetLocale() == "zhCN" then guiL[zxc] = "这延迟了你的中断能力一定的毫秒数以人性化它." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 인터럽트 능력을 인간화하기 위해 밀리 초 단위로 지연합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto retrasa tu capacidad de interrupción una cantidad de milisegundos para humanizarla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это задерживает вашу способность прерывания на определенное количество миллисекунд, чтобы сделать ее более человечной." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela retarde votre capacité d'interruption d'un certain nombre de millisecondes pour la rendre plus humaine." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies verzögert Ihre Unterbrechungsfähigkeit um eine Anzahl von Millisekunden, um sie menschlicher zu machen." end
    ; zxc = "This disables drawings."
    if GetLocale() == "zhCN" then guiL[zxc] = "这禁用绘图." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 그림을 비활성화합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto deshabilita los dibujos." elseif GetLocale() == "ruRU" then guiL[zxc] = "Это отключает рисование." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela désactive les dessins." elseif GetLocale() == "deDE" then guiL[zxc] = "Dies deaktiviert Zeichnungen." end
    ; zxc =
    "This is for recording a dungeon entrance. Go outside the instance, put the marker in the instance portal and press left-control."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是用于记录一个地下城入口.离开副本外,把标记放在副本传送门,并按住左控制键." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 던전 입구를 기록하는 데 사용됩니다. 인스턴스 외부로 이동하여 인스턴스 포탈에 마커를 놓고 왼쪽 컨트롤 키를 누릅니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es para grabar una entrada de mazmorra. Ve a la entrada de la mazmorra, pon el marcador en el portal de la mazmorra y presiona control izquierdo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это для записи входа в подземелье. Перейдите наружу из подземелья, поставьте маркер в портал подземелья и нажмите левый контроль." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est pour enregistrer une entrée de donjon. Allez à l'extérieur de l'instance, placez le marqueur dans le portail d'instance et appuyez sur la touche de contrôle gauche." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist für die Aufnahme einer Dungeon-Eingang. Gehen Sie außerhalb der Instanz, setzen Sie den Marker im Instanzportal und drücken Sie die linke Steuerungstaste." end
    ; zxc =
    "This is for recording a dungeon exit. Go inside the instance, put the marker in the instance portal and press left-control."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是用于记录一个地下城出口.进入副本,把标记放在副本传送门,并按住左控制键." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 던전 출구를 기록하는 데 사용됩니다. 인스턴스 내부로 이동하여 인스턴스 포탈에 마커를 놓고 왼쪽 컨트롤 키를 누릅니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es para grabar una salida de mazmorra. Ve a la entrada de la mazmorra, pon el marcador en el portal de la mazmorra y presiona control izquierdo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это для записи выхода из подземелья. Перейдите внутрь подземелья, поставьте маркер в портал подземелья и нажмите левый контроль." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est pour enregistrer une sortie de donjon. Allez à l'intérieur de l'instance, placez le marqueur dans le portail d'instance et appuyez sur la touche de contrôle gauche." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist für die Aufnahme einer Dungeon-Ausgang. Gehen Sie in die Instanz, setzen Sie den Marker im Instanzportal und drücken Sie die linke Steuerungstaste." end
    ; zxc =
    "This is for recording where to run to after exiting a dungeon to reset. It may be necessary for some dungeons."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是用于记录在退出副本后重置的地方.对于某些副本可能是必要的." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 던전을 나온 후 재설정하기 위해 뛰어야 할 곳을 기록하는 데 사용됩니다. 일부 던전에서는 필요할 수 있습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es para grabar a dónde correr después de salir de una mazmorra para restablecerla. Puede ser necesario para algunas mazmorras." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это для записи того, куда бежать после выхода из подземелья для сброса. Это может быть необходимо для некоторых подземелий." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est pour enregistrer où courir après avoir quitté une instance pour la réinitialiser. Il peut être nécessaire pour certaines instances." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies dient zum Aufzeichnen, wohin Sie nach dem Verlassen eines Dungeons rennen müssen, um ihn zurückzusetzen. Es kann für einige Dungeons notwendig sein." end
    ; zxc = "This is for weapon stones/oils."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是用于武器石/油." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 무기 돌/유액에 대한 것입니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es para piedras/aceites de armas." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это для камней/масел оружия." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est pour les pierres/les huiles d'armes." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist für Waffensteine/Öle." end
    ; zxc = "This is the enchant you have on your fishing pole."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是你的鱼竿上的附魔." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 낚싯대에 달린 마법부여입니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es el encantamiento que tienes en tu caña de pescar." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это чары, которые вы накладываете на удочку." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est l'enchantement que vous avez sur votre canne à pêche." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist der Verzauberung, die Sie auf Ihrem Angelrute haben." end
    ; zxc = "This is used for some dungeon profiles and it makes the bot pull the mobs back to the previous grind node."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是用于某些副本配置文件,它使机器人将怪物拉回到以前的磨练节点." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 일부 던전 프로필에 사용되며, 봇이 이전 그라인드 노드로 몬스터를 끌어당깁니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto se usa para algunos perfiles de mazmorras y hace que el bot tire a los monstruos de vuelta al nodo de molienda anterior." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это используется для некоторых профилей подземелий и заставляет бота тянуть мобов обратно к предыдущему узлу для заточки." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est utilisé pour certains profils de donjon et il fait que le bot tire les monstres vers le nœud de broyage précédent." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird für einige Dungeonprofile verwendet und lässt den Bot die Mobs zum vorherigen Grindknoten zurückziehen." end
    ; zxc = "This is who to mail to, make sure they are on your friends list."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是谁邮寄,请确保他们在你的好友列表." elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 누구에게 우편을 보내는지 확인하십시오. 친구 목록에 있어야합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es a quién enviar correo, asegúrese de que estén en su lista de amigos." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это тот, кому отправлять почту, убедитесь, что они в вашем списке друзей." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est à qui envoyer le courrier, assurez-vous qu'ils sont dans votre liste d'amis." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist, wer zu mailen, stellen Sie sicher, dass sie auf Ihrer Freundesliste sind." end
    ; zxc = "This is working for Windows TBC only"
    if GetLocale() == "zhCN" then guiL[zxc] = "这是工作的Windows TBC只" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 Windows TBC에서만 작동합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto está funcionando para Windows TBC solo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это работает только для Windows TBC" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci fonctionne pour Windows TBC uniquement" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies funktioniert nur für Windows TBC" end
    ; zxc = "This is your localized fishing skill name, for English it is 'Fishing'."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是你的本地化钓鱼技能名称,对于英语它是“钓鱼”。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 지역화 된 낚시 기술 이름입니다. 영어는 '낚시'입니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es su nombre de habilidad de pesca localizado, para inglés es 'Pesca'." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это ваше локализованное название навыка рыбной ловли, для английского языка это 'Рыбная ловля'." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est votre nom de compétence de pêche localisé, pour l'anglais c'est 'Pêche'." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist Ihr lokalisierter Fischereinamen, für Englisch ist es 'Angeln'." end
    ; zxc = "This makes it so the pet stays on passive mode and doesnt attack."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使得宠物保持在被动模式,不攻击。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 애완 동물이 무기를 쥐고 있지 않은 상태로 유지되도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el animal doméstico se mantenga en modo pasivo y no ataque." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это делает так, чтобы питомец оставался в пассивном режиме и не атаковал." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que l'animal de compagnie reste en mode passif et n'attaque pas." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es so, dass das Haustier im Passivmodus bleibt und nicht angreift." end
    ; zxc = "This makes the bot delete grey items on pickup."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在拾取时删除灰色物品。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 픽업 할 때 회색 아이템을 삭제하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot elimine los elementos grises al recogerlos." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота удалять серые предметы при подборе." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot supprime les objets gris lors de la collecte." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, graue Gegenstände beim Aufheben zu löschen." end
    ; zxc = "This makes the bot do AB."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做AB。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 AB를 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga AB." elseif GetLocale() == "ruRU" then guiL[zxc] = "Это заставляет бота делать AB." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse AB." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, AB zu machen." end
    ; zxc = "This makes the bot do AV."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做AV。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 AV를 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga AV." elseif GetLocale() == "ruRU" then guiL[zxc] = "Это заставляет бота делать AV." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse AV." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, AV zu machen." end
    ; zxc = "This makes the bot do EotS."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做EotS。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 EotS를 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga EotS." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота делать EotS." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse EotS." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, EotS zu machen." end
    ; zxc = "This makes the bot do WSG."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做WSG。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 WSG를 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga WSG." elseif GetLocale() == "ruRU" then guiL[zxc] = "Это заставляет бота делать WSG." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse WSG." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, WSG zu machen." end
    ; zxc = "This makes the bot do dungeons."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做地下城。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 던전을 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga mazmorras." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота делать подземелья." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse les donjons." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, Dungeons zu machen." end
    ; zxc = "This makes the bot do random battlegrounds."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人做随机战场。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 임의의 전장을 수행하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot haga campos de batalla aleatorios." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота делать случайные поля боя." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot fasse les champs de bataille aléatoires." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, zufällige Schlachtfelder zu machen." end
    ; zxc = "This makes the bot exit the dungeon right away without running back through the grind path."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人立即退出地下城，而不是通过磨练路径返回。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 그라인드 경로를 통해 돌아가지 않고 던전을 즉시 종료하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot salga de la mazmorra de inmediato sin regresar por el camino de molienda." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота сразу выйти из подземелья без возвращения по маршруту заточки." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot quitte la donjon tout de suite sans revenir par le chemin de broyage." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, die Dungeon sofort zu verlassen, ohne durch den Grind-Pfad zurückzulaufen." end
    ; zxc = "This makes the bot fill with heroic strike when it loses threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在失去威胁时填充英勇打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 위협을 잃을 때 영웅의 일격으로 채우도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot llene con golpe heroico cuando pierde amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота заполняться героическим ударом, когда он теряет угрозу" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot se remplit avec une frappe héroïque lorsqu'il perd la menace" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, mit heroischer Attacke zu füllen, wenn es die Bedrohung verliert" end
    ; zxc = "This makes the bot fill with sunder when it loses threat"
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在失去威胁时填充破甲攻击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 위협을 잃을 때 찢어뜨리기로 채우도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot llene con sunder cuando pierde amenaza" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота заполняться сундером, когда он теряет угрозу" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot se remplit avec sunder lorsqu'il perd la menace" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, mit Sunder zu füllen, wenn es die Bedrohung verliert" end
    ; zxc = "This makes the bot gather herb nodes."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人收集草药节点。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 약초 노드를 수집하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot recoja los nodos de hierbas." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота собирать узлы трав." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot récolte les nœuds d'herbes." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, Kräuter zu sammeln." end
    ; zxc = "This makes the bot gather mining nodes."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人收集矿石节点。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 채광 노드를 수집하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot recoja los nodos de minería." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота собирать узлы руды." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot récolte les nœuds de minage." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, Erz zu sammeln." end
    ; zxc =
    "This makes the bot go to this distance to attack mobs while grinding. It is useful for classes such as shaman if you want it to act like an Elemental Shaman."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在砍怪时到达这个距离来攻击怪物。如果你想让它像元素萨满一样行动，这对于萨满等职业很有用。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 그라인딩 중에 몹을 공격하기 위해 이 거리로 봇을 이동하도록합니다. 원소 주술사처럼 작동하려면 주술사와 같은 직업에 유용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot vaya a esta distancia para atacar a los monstruos mientras se muelen. Es útil para clases como chaman si quieres que se comporte como un chamán elemental." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота идти на эту дистанцию, чтобы атаковать мобов во время заточки. Это полезно для таких классов, как шаман, если вы хотите, чтобы он вел себя как шаман-элементаль." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot se rende à cette distance pour attaquer les mobs pendant le broyage. C'est utile pour les classes telles que le chaman si vous voulez qu'il se comporte comme un chaman élémentaire." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, während des Grindens auf diese Entfernung zu den Mobs zu gehen, um sie anzugreifen. Dies ist für Klassen wie Schamanen nützlich, wenn Sie möchten, dass er sich wie ein Elementar-Schamane verhält." end
    ; zxc = "This makes the bot ignore all mobs while it is mounted (useful for gathering)."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在坐骑上时忽略所有怪物（用于收集有用）。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 타고 있을 때 모든 몹을 무시하도록합니다 (수집에 유용)." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot ignore todos los monstruos mientras está montado (útil para la recolección)." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота игнорировать всех мобов, пока он находится на средстве передвижения (полезно для сбора)." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ignore tous les mobs pendant qu'il est monté (utile pour la collecte)." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, alle Mobs zu ignorieren, während er geritten ist (nützlich zum Sammeln)." end
    ; zxc = "This makes the bot ignore all players while it is mounted (useful for battlegrounds)."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在坐骑上时忽略所有玩家（用于战场有用）。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 타고 있을 때 모든 플레이어를 무시하도록합니다 (전장에 유용)." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot ignore a todos los jugadores mientras está montado (útil para los campos de batalla)." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота игнорировать всех игроков, пока он находится на средстве передвижения (полезно для полей боя)." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ignore tous les joueurs pendant qu'il est monté (utile pour les champs de bataille)." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, alle Spieler zu ignorieren, während er geritten ist (nützlich für Schlachtfelder)." end
    ; zxc = "This makes the bot interrupt the below list when any enemy is below this % health."
    if GetLocale() == "zhCN" then guiL[zxc] = "当任何敌人的生命值低于此％时，这使机器人中断下面的列表。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 아래 목록을 중단하도록합니다. 아래 목록은 아래 목록의 % 체력 이하인 경우에만 중단됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot interrumpa la lista de abajo cuando cualquier enemigo esté por debajo de este % de salud." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота прерывать список ниже, когда любой враг ниже этого % здоровья." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot interrompt la liste ci-dessous lorsque n'importe quel ennemi est en dessous de ce % de santé." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, die untenstehende Liste zu unterbrechen, wenn ein Gegner unter diesem % Gesundheit ist." end
    ; zxc = "This makes the bot interrupt the below list when any friendly is below this % health."
    if GetLocale() == "zhCN" then guiL[zxc] = "当任何友方的生命值低于此％时，这使机器人中断下面的列表。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 아래 목록을 중단하도록합니다. 아래 목록은 아래 목록의 % 체력 이하인 경우에만 중단됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot interrumpa la lista de abajo cuando cualquier aliado esté por debajo de este % de salud." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота прерывать список ниже, когда любой союзник ниже этого % здоровья." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot interrompt la liste ci-dessous lorsque n'importe quel allié est en dessous de ce % de santé." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, die untenstehende Liste zu unterbrechen, wenn ein Verbündeter unter diesem % Gesundheit ist." end
    ; zxc = "This makes the bot interrupt the below list when any friendly or enemy is below this % health."
    if GetLocale() == "zhCN" then guiL[zxc] = "当任何友方或敌方的生命值低于此％时，这使机器人中断下面的列表。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 아래 목록을 중단하도록합니다. 아래 목록은 아래 목록의 % 체력 이하인 경우에만 중단됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot interrumpa la lista de abajo cuando cualquier aliado o enemigo esté por debajo de este % de salud." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота прерывать список ниже, когда любой союзник или враг ниже этого % здоровья." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot interrompt la liste ci-dessous lorsque n'importe quel allié ou ennemi est en dessous de ce % de santé." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, die untenstehende Liste zu unterbrechen, wenn ein Verbündeter oder Gegner unter diesem % Gesundheit ist." end
    ; zxc = "This makes the bot jump. It will jump less the higher the slider is."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人跳跃。滑块越高，跳跃越少。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 점프하도록합니다. 슬라이더가 높을수록 점프가 적어집니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot salte. Saltará menos cuanto más alto esté el control deslizante." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота прыгать. Он будет прыгать меньше, чем выше ползунок." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot saute. Il sautera moins si le curseur est plus haut." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, zu springen. Er wird weniger springen, je höher der Schieber ist." end
    ; zxc = "This makes the bot look more human if you are a healer."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果您是治疗者，这使机器人看起来更像人类。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신이 치유사라면 봇이 더 인간적으로 보이도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot se vea más humano si eres un sanador." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота выглядеть более человеческим, если вы лекарь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ressemble plus à un humain si vous êtes un soigneur." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, wenn du ein Heiler bist, menschlicher auszusehen." end
    ; zxc = "This makes the bot not loot."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人不会拾取。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 전리품을 획득하지 않도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot no saque." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота не собирать добычу." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ne ramasse pas." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, nicht zu plündern." end
    ; zxc = "This makes the bot not repair."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人不会修理。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 수리하지 않도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot no repare." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота не ремонтировать." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ne répare pas." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, nicht zu reparieren." end
    ; zxc = "This makes the bot not reset dungeons."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人不会重置地下城。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 던전을 재설정하지 않도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot no restablezca mazmorras." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота не сбрасывать подземелья." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot ne réinitialise pas les donjons." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, Dungeons nicht zurückzusetzen." end
    ; zxc =
    "This makes the bot only target players in battlegrounds. It will not target any PvE mobs such as the ones in AV."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人只会在战场中攻击玩家。它不会攻击任何PvE怪物，例如在AV中的怪物。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 전장에서만 플레이어를 대상으로합니다. AV와 같은 PvE 몹은 대상으로하지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot solo ataque a los jugadores en los campos de batalla. No atacará a ningún mob PvE, como los de AV." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота атаковать только игроков на полях боя. Он не будет атаковать PvE мобов, таких как те, что в AV." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot cible uniquement les joueurs en champs de bataille. Il ne ciblera aucun mob PvE, tels que ceux de AV." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, nur Spieler in Schlachtfeldern zu zielen. Er wird keine PvE-Mobs zielen, wie sie in AV sind." end
    ; zxc =
    "This makes the bot passive in AV. It doesnt try to target anyone or cast any spells on them. It just stands around and collects honor."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人在AV中被动。它不会尝试攻击任何人或对他们施放任何法术。它只是站在那里并收集荣誉。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 AV에서 수동적입니다. 누구도 대상으로하거나 그들에게 주문을 캐스트하지 않으려고합니다. 그냥 서서 명예를 수집합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot sea pasivo en AV. No intenta atacar a nadie ni lanzar hechizos sobre ellos. Solo se queda allí y recoge honor." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это делает бот пассивным в AV. Он не пытается атаковать кого-либо или кастовать на них заклинания. Он просто стоит и собирает честь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot soit passif en AV. Il ne tente pas de cibler quelqu'un ou de lancer des sorts sur eux. Il se tient simplement là et collecte l'honneur." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, passiv in AV zu sein. Er versucht niemanden zu zielen oder Zauber auf sie zu wirken. Er steht einfach herum und sammelt Ehre." end
    ; zxc = "This makes the bot sell green items."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人出售绿色物品。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 녹색 아이템을 판매하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot venda artículos verdes." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота продавать зеленые предметы." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot vend des objets verts." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, grüne Gegenstände zu verkaufen." end
    ; zxc = "This makes the bot sell white and grey items."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人出售白色和灰色物品。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 흰색 및 회색 아이템을 판매하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot venda artículos blancos y grises." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота продавать белые и серые предметы." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot vend des objets blancs et gris." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, weiße und graue Gegenstände zu verkaufen." end
    ; zxc = "This makes the bot use commanding shout instead of battle shout."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人使用命令怒吼而不是战斗怒吼。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 전투 외침 대신 지휘 외침을 사용하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot use grito de mando en lugar de grito de batalla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота использовать командный крик вместо боевого крика." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot utilise un cri de commandement au lieu d'un cri de bataille." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, Befehlshetze anstatt Schlachthetze zu benutzen." end
    ; zxc = "This makes the bot use the PVP frame to queue for battlegrounds."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使机器人使用PVP框架排队进入战场。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 PVP 프레임을 사용하여 전장 대기열에 들어가도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hace que el bot use el marco PVP para entrar en las filas de los campos de batalla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставляет бота использовать PVP-рамку для постановки в очередь на поля боя." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fait en sorte que le bot utilise le cadre PVP pour mettre en file d'attente pour les champs de bataille." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies macht es dem Bot möglich, den PVP-Rahmen zu benutzen, um sich für Schlachtfelder anzustellen." end
    ; zxc = "This records a grind path while youre running around."
    if GetLocale() == "zhCN" then guiL[zxc] = "这记录了你在跑圈时的磨练路径。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신이 뛰어다니는 동안 그라인드 경로를 기록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto registra una ruta de molienda mientras estás corriendo por ahí." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это записывает путь молоть, пока вы бегаете по нему." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela enregistre un chemin de broyage pendant que vous courez autour." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen Grind-Pfad auf, während du herumläufst." end
    ; zxc =
    "This records a grind path, you can record it by moving the green circle to wherever you want in game and pressing left control. You can also record it by opening the map and then holding shift and left clicking the map."
    if GetLocale() == "zhCN" then guiL[zxc] = "这记录了一个磨练路径，你可以通过移动绿色圆圈到游戏中的任何地方并按住左控制键来记录。你也可以通过打开地图，然后按住shift并左键单击地图来记录。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 그라인드 경로를 기록합니다. 게임 내에서 원하는 곳으로 녹색 원을 이동하고 왼쪽 컨트롤을 누르면 레코딩 할 수 있습니다. 맵을 열고 쉬프트를 누른 채로 왼쪽 클릭하면 레코딩 할 수도 있습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto registra una ruta de molienda, puede grabarla moviendo el círculo verde a donde quiera que quiera en el juego y presionando el control izquierdo. También puede grabarlo abriendo el mapa y luego manteniendo presionada la tecla mayúsculas y haciendo clic izquierdo en el mapa." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это записывает путь молоть, вы можете записать его, переместив зеленый круг куда угодно в игре и нажав левый контроль. Вы также можете записать его, открыв карту, а затем удерживая шифт и нажав левую кнопку мыши на карте." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela enregistre un chemin de broyage, vous pouvez l'enregistrer en déplaçant le cercle vert où vous le souhaitez dans le jeu et en appuyant sur la touche de contrôle gauche. Vous pouvez également l'enregistrer en ouvrant la carte et en maintenant la touche Maj enfoncée et en cliquant sur la carte avec le bouton gauche." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen Grind-Pfad auf, den Sie aufnehmen können, indem Sie den grünen Kreis dahin bewegen, wo Sie ihn im Spiel haben möchten, und die linke Steuerungstaste drücken. Sie können es auch aufnehmen, indem Sie die Karte öffnen und dann die Umschalttaste gedrückt halten und auf der Karte mit der linken Maustaste klicken." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen Grind-Pfad auf, den Sie aufnehmen können, indem Sie den grünen Kreis dahin bewegen, wo Sie ihn im Spiel haben möchten, und die linke Steuerungstaste drücken. Sie können es auch aufnehmen, indem Sie die Karte öffnen und dann die Umschalttaste gedrückt halten und auf der Karte mit der linken Maustaste klicken." end
    ; zxc = "This records a resurrection path."
    if GetLocale() == "zhCN" then guiL[zxc] = "这记录了一个复活路径。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 부활 경로를 기록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto registra una ruta de resurrección." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это записывает путь воскрешения." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela enregistre un chemin de résurrection." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen Wiederbelebungs-Pfad auf." end
    ; zxc = "This records an NPC for repairing and selling. Check the box, target the NPC, then uncheck the box."
    if GetLocale() == "zhCN" then guiL[zxc] = "这记录了一个NPC用于修理和出售。勾选框，目标NPC，然后取消勾选框。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 NPC를 기록하여 수리 및 판매합니다. 체크 상자를 확인하고 NPC를 대상으로 지정한 다음 체크 상자를 해제합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto registra un PNJ para reparar y vender. Marque la casilla, seleccione el PNJ y luego desmarque la casilla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это записывает NPC для ремонта и продажи. Отметьте флажок, выберите NPC, а затем снимите флажок." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela enregistre un PNJ pour la réparation et la vente. Cochez la case, ciblez le PNJ, puis décochez la case." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen NPC für Reparatur und Verkauf auf. Aktiviere das Kästchen, wähle den NPC aus und deaktiviere das Kästchen." end
    ; zxc = "This records an NPC for replenishing specific items. Check the box, target the NPC, then uncheck the box."
    if GetLocale() == "zhCN" then guiL[zxc] = "这记录了一个NPC用于补充特定物品。勾选框，目标NPC，然后取消勾选框。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 특정 항목을 보충하는 NPC를 기록합니다. 체크 상자를 확인하고 NPC를 대상으로 지정한 다음 체크 상자를 해제합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto registra un PNJ para reponer artículos específicos. Marque la casilla, seleccione el PNJ y luego desmarque la casilla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это записывает NPC для пополнения определенных предметов. Отметьте флажок, выберите NPC, а затем снимите флажок." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela enregistre un PNJ pour reconstituer des articles spécifiques. Cochez la case, ciblez le PNJ, puis décochez la case." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies nimmt einen NPC für die Auffüllung bestimmter Gegenstände auf. Aktiviere das Kästchen, wähle den NPC aus und deaktiviere das Kästchen." end
    ; zxc = "This starts the bot."
    if GetLocale() == "zhCN" then guiL[zxc] = "这启动了机器人。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇을 시작합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto inicia el bot." elseif GetLocale() == "ruRU" then guiL[zxc] = "Это запускает бота." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela démarre le bot." elseif GetLocale() == "deDE" then guiL[zxc] = "Dies startet den Bot." end
    ; zxc = "This uses the troll or orc racial."
    if GetLocale() == "zhCN" then guiL[zxc] = "这使用巨魔或兽人种族。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 트롤 또는 오크 민족을 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto usa la raza de troll u orco." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это использует тролльский или орочий рассовый бонус." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela utilise le bonus racial troll ou orc." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies verwendet das Troll- oder Ork-Rasse." end
    ; zxc = "This will adjust all this for you depending on your class."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将根据你的职业调整所有这些。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 직업에 따라 모든 것을 조정합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto ajustará todo esto para usted dependiendo de su clase." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет настраивать все это для вас в зависимости от вашего класса." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela ajustera tout cela pour vous en fonction de votre classe." end
    ; zxc = "This will allow you to edit the grind points."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将允许您编辑磨点。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신이 그라인드 포인트를 편집 할 수 있도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto le permitirá editar los puntos de molienda." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это позволит вам редактировать точки шлифовки." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela vous permettra d'éditer les points de meulage." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ermöglicht es Ihnen, die Schleifpunkte zu bearbeiten." end
    ; zxc = "This will cast Shamanistic Rage when your health is below the set percentage."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将在你的生命值低于设定百分比时施放萨满之怒。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 건강이 설정된 백분율 이하로 떨어지면 샤먼 스틱 레이지를 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará la ira chamánica cuando su salud está por debajo del porcentaje establecido." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать Шаманистскую ярость, когда ваше здоровье ниже установленного процента." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la Rage chamanique lorsque votre santé est inférieure au pourcentage défini." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Schamanistische Wut wirken, wenn Ihre Gesundheit unter den eingestellten Prozentsatz fällt." end
    ; zxc = "This will cast Shamanistic Rage when your mana is below the set percentage."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将在你的法力值低于设定百分比时施放萨满之怒。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 마나가 설정된 백분율 이하로 떨어지면 샤먼 스틱 레이지를 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará la ira chamánica cuando su maná está por debajo del porcentaje establecido." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать Шаманистскую ярость, когда ваша мана ниже установленного процента." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la Rage chamanique lorsque votre mana est inférieure au pourcentage défini." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Schamanistische Wut wirken, wenn Ihre Mana unter den eingestellten Prozentsatz fällt." end
    ; zxc =
    "This will cast chain lightning if there are >= than this number of enemies that will be hit by it (5 stacks Maelstrom Weapon)."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将施放闪电链，如果有>=这个数量的敌人将被击中（5层漩涡武器）。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 그것에 의해 맞을 수있는 적이이 수보다> =이있는 경우 체인 번개를 캐스트합니다 (5 스택 매스트롬 무기)." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará relámpagos en cadena si hay> = que este número de enemigos que serán golpeados por él (5 pilas Arma Maelstrom)." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать цепной молнией, если есть> =, чем это количество врагов, которые будут поражены им (5 стеков Молния Молнии)." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la foudre enchaînée si il y a> = que ce nombre d'ennemis qui seront touchés par elle (5 piles Arme Maelstrom)." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Kettenblitzschlag wirken, wenn es> = als diese Anzahl von Feinden, die von ihm getroffen werden (5 Stapel Maelstromwaffe)." end
    ; zxc = "This will cast chain lightning if there are >= than this number of enemies that will be hit by it."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将施放闪电链，如果有>=这个数量的敌人将被击中。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 그것에 의해 맞을 수있는 적이이 수보다> =이있는 경우 체인 번개를 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará relámpagos en cadena si hay> = que este número de enemigos que serán golpeados por él." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать цепной молнией, если есть> =, чем это количество врагов, которые будут поражены им." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la foudre enchaînée si il y a> = que ce nombre d'ennemis qui seront touchés par elle." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Kettenblitzschlag wirken, wenn es> = als diese Anzahl von Feinden, die von ihm getroffen werden." end
    ; zxc = "This will cast feral spirit if there are >= than this number of enemies in combat."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将施放野性之魂，如果有>=这个数量的敌人在战斗中。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 전투에있는 적이이 수보다> =이있는 경우 페랄 스피릿을 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará espíritu feral si hay> = que este número de enemigos en combate." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать дух зверя, если есть> =, чем это количество врагов в бою." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera l'esprit farouche si il y a> = que ce nombre d'ennemis en combat." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Feralgeist wirken, wenn es> = als diese Anzahl von Feinden im Kampf." end
    ; zxc = "This will cast healing wave if you have 5 stacks of maelstrom weapon."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将施放治疗波，如果你有5层漩涡武器。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신이 5 스택의 맹렬한 무기를 가지고있는 경우 치유의 물결을 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará onda de sanación si tiene 5 pilas de arma de maelstrom." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать волна исцеления, если у вас 5 стаков оружия бури." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la vague de soins si vous avez 5 piles d'arme de maelstrom." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Heilende Welle wirken, wenn Sie 5 Stapel von Maelstromwaffe haben." end
    ; zxc = "This will cast lightning bolt if you have 5 stacks of maelstrom weapon."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将施放闪电箭，如果你有5层漩涡武器。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신이 5 스택의 맹렬한 무기를 가지고있는 경우 번개 화살을 캐스트합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto lanzará descarga de relámpagos si tiene 5 pilas de arma de maelstrom." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет кастовать молнию, если у вас 5 стаков оружия бури." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela lancera la foudre si vous avez 5 piles d'arme de maelstrom." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Blitzschlag wirken, wenn Sie 5 Stapel von Maelstromwaffe haben." end
    ; zxc = "This will draw a circle around enemy warriors to show when they can charge."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将在敌人战士周围画一个圈，显示他们可以冲锋。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 적 전사를 둘러싸는 원을 그려서 그들이 충전 할 수있는 시간을 표시합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto dibujará un círculo alrededor de los guerreros enemigos para mostrar cuándo pueden cargar." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет рисовать круг вокруг вражеских воинов, чтобы показать, когда они могут зарядить." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela dessinera un cercle autour des guerriers ennemis pour montrer quand ils peuvent charger." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird einen Kreis um Feindliche Krieger zeichnen, um anzuzeigen, wann sie aufladen können." end
    ; zxc = "This will draw a line to the lowest player in your roster and will change to red if you can't help."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将画一条线到你名单中最低的玩家，如果你不能帮助，它将变成红色。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 목록에서 가장 낮은 플레이어에게 선을 그리고 당신이 도움을 줄 수 없는 경우 빨간색으로 변경됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto dibujará una línea al jugador más bajo en su lista y cambiará a rojo si no puede ayudar." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет рисовать линию к самому низкому игроку в вашем рейтинге, и он изменится на красный, если вы не можете помочь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela dessinera une ligne au joueur le plus bas dans votre liste et changera en rouge si vous ne pouvez pas aider." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird eine Linie zum niedrigsten Spieler in Ihrer Liste zeichnen und wird rot, wenn Sie nicht helfen können." end
    ; zxc = "This will draw a line to the named player in your roster and will change to red if you can't help."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将画一条线到你名单中命名的玩家，如果你不能帮助，它将变成红色。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 당신의 목록에서 이름이 지정된 플레이어에게 선을 그리고 당신이 도움을 줄 수 없는 경우 빨간색으로 변경됩니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto dibujará una línea al jugador nombrado en su lista y cambiará a rojo si no puede ayudar." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет рисовать линию к названному игроку в вашем рейтинге, и он изменится на красный, если вы не можете помочь." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela dessinera une ligne au joueur nommé dans votre liste et changera en rouge si vous ne pouvez pas aider." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird eine Linie zum benannten Spieler in Ihrer Liste zeichnen und wird rot, wenn Sie nicht helfen können." end
    ; zxc = "This will interrupt enemy casting with earth shock."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将用大地震击打断敌人施法。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 대지 충격으로 적의 시전을 방해합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto interrumpirá el lanzamiento de enemigos con choque de tierra." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет прерывать вражеское заклинание с помощью шока земли." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela interrompra le lancement des ennemis avec choc de terre." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Feind mit Erdstoß unterbrechen." end
    ; zxc = "This will make it so the bot uses all mana and does as much damage as possible."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人使用所有法力，造成尽可能多的伤害。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 모든 마나를 사용하고 가능한 한 많은 피해를 줄 수 있도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot use toda la maná y haga el mayor daño posible." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет так, что бот использует все ману и наносит как можно больше урона." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot utilise toute la mana et fait autant de dégâts que possible." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird es so, dass der Bot alle Mana verwendet und so viel Schaden wie möglich verursacht." end
    ; zxc = "This will make the bot attempt to attack from behind."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人尝试从后面攻击。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 뒤에서 공격하려고 시도합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot intente atacar desde atrás." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот пытался атаковать сзади." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot essaie d'attaquer par derrière." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot versuchen lassen, von hinten zu angreifen." end
    ; zxc = "This will make the bot automatically bless the appropriate people in the group based on class."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人根据职业自动祝福组中的适当人员。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 클래스에 따라 적절한 사람들을 자동으로 축복하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot bendiga automáticamente a las personas apropiadas en el grupo según la clase." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот автоматически благословлял соответствующих людей в группе на основе класса." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot bénisse automatiquement les personnes appropriées dans le groupe en fonction de la classe." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot automatisch segnen lassen, die entsprechenden Leute in der Gruppe basierend auf der Klasse." end
    ; zxc = "This will make the bot buff everyone in the group with the appropriate buffs based on class."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人根据职业为组中的每个人提供适当的增益效果。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 클래스에 따라 적절한 버프를 모든 사람에게 버프하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot buffee a todos en el grupo con los buffs apropiados basados en la clase." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот баффил каждого в группе соответствующими баффами на основе класса." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot buffe tout le monde dans le groupe avec les buffs appropriés en fonction de la classe." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot buffen lassen, alle in der Gruppe mit den entsprechenden Buffs basierend auf der Klasse." end
    ; zxc = "This will make the bot cast nothing at all."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人完全不施放任何东西。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 전혀 시전하지 않도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot no lance nada en absoluto." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот не кастовал ничего вообще." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot ne lance rien du tout." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot überhaupt nichts zaubern lassen." end
    ; zxc = "This will make the bot delete the items you put in the box. (Separate by comma)"
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人删除您放入框中的项目。（用逗号分隔）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 상자에 넣은 항목을 삭제하도록합니다. (쉼표로 구분)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot elimine los elementos que ponga en la caja. (Separado por comas)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот удалял элементы, которые вы поместите в коробку. (Разделите запятыми)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot supprime les éléments que vous mettez dans la boîte. (Séparé par des virgules)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot löschen lassen, die Artikel, die Sie in das Feld einfügen. (Durch Komma getrennt)" end
    ; zxc = "This will make the bot do battlegrounds."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人参加战场。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 전장을 하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot haga campos de batalla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот делал поля боя." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot fasse des champs de bataille." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot Schlachtfelder machen lassen." end
    ; zxc =
    "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人在世界中无故攻击敌人玩家。如果你在做战场，不需要使用这个选项。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 세계에서 무작위로 적 플레이어를 공격하도록합니다. 전장을하고있는 경우이 옵션을 사용할 필요가 없습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot golpee a los jugadores enemigos sin provocación en el mundo. No es necesario usar esta opción si está haciendo campos de batalla." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот бил вражеских игроков без вызова в мире. Не нужно использовать эту опцию, если вы делаете поля боя." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot frappe les joueurs ennemis sans provocation dans le monde. Il n'est pas nécessaire d'utiliser cette option si vous faites des champs de bataille." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot feindliche Spieler unvermittelt in der Welt treffen lassen. Es ist nicht erforderlich, diese Option zu verwenden, wenn Sie Schlachtfelder machen." end
    ; zxc = "This will make the bot only buff itself, not others in the group. Do not use AutoBuff if using this option."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人只给自己加BUFF，不给队伍中的其他人加BUFF。如果使用这个选项，请不要使用自动BUFF。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 그룹의 다른 사람들을 버프하지 않고 오직 자신만 버프하도록합니다.이 옵션을 사용하는 경우 AutoBuff를 사용하지 마십시오." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot solo se cure a sí mismo, no a otros en el grupo. No use AutoBuff si usa esta opción." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот только бафал себя, а не других в группе. Не используйте AutoBuff, если используете эту опцию." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot ne se buffe que lui-même, pas les autres dans le groupe. N'utilisez pas AutoBuff si vous utilisez cette option." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot nur sich selbst buffen lassen, nicht andere in der Gruppe. Verwenden Sie AutoBuff nicht, wenn Sie diese Option verwenden." end
    ; zxc =
    "This will make the bot use hearthstone to go to vendors. If you are multiboxing it will also send a command to your party to also hearth."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将使机器人使用炉石去商人那里。如果你是多开，它也会发送一个命令给你的队伍，让他们也使用炉石。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 봇이 헤스톤을 사용하여 상인에게 가도록합니다. 다중 박싱을하고있는 경우 당신의 파티에도 헤스톤을 사용하도록 명령을 보냅니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que el bot use piedra de hogar para ir a los vendedores. Si está multiboxing, también enviará un comando a su grupo para que también se vaya a casa." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать так, чтобы бот использовал камень возвращения, чтобы пойти к торговцам. Если вы мультибоксите, он также отправит команду вашей группе, чтобы также вернуться домой." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela fera en sorte que le bot utilise la pierre de foyer pour aller chez les vendeurs. Si vous êtes multiboxing, il enverra également une commande à votre groupe pour aller aussi à la maison." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird den Bot dazu bringen, den Heiltrank zu verwenden, um zu Händlern zu gehen. Wenn Sie multiboxing, wird es auch einen Befehl an Ihre Gruppe senden, um auch zu Hause zu gehen." end
    ; zxc = "This will make you use wand if equipped."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果装备了魔杖，这将使你使用魔杖。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "장착 된 완드를 사용하도록합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto hará que uses el bastón si está equipado." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это заставит вас использовать жезл, если он у вас есть." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela vous fera utiliser la baguette si elle est équipée." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Sie dazu bringen, Zauberstab zu verwenden, wenn er ausgerüstet ist." end
    ; zxc = "This will only do wanding and no other spells or abilitys when the enemy is below this % HP."
    if GetLocale() == "zhCN" then guiL[zxc] = "当敌人的血量低于这个百分比时，这将只做魔杖，没有其他法术或能力。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "적이이 % HP 아래에있을 때 완드 만 수행하고 다른 주문 또는 능력은 수행하지 않습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto solo hará que el bastón y no otros hechizos o habilidades cuando el enemigo esté por debajo de este % HP." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет делать только жезл и никакие другие заклинания или способности, когда враг ниже этого % HP." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela ne fera que la baguette et aucun autre sort ou capacité lorsque l'ennemi est en dessous de ce % HP." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird nur Zauberstab und keine anderen Zauber oder Fähigkeiten tun, wenn der Feind unter diesem % HP ist." end
    ; zxc = "This will request items to be traded to the slave from the master when the slave doesn't have that item."
    if GetLocale() == "zhCN" then guiL[zxc] = "当奴隶没有该物品时，这将要求从主人交易物品给奴隶。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "슬레이브가 해당 항목을 가지고 있지 않은 경우 마스터에서 슬레이브로 항목을 교환하도록 요청합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto solicitará que se intercambien artículos con el esclavo desde el maestro cuando el esclavo no tenga ese artículo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это запросит предметы для обмена со слугой от хозяина, когда слуга не имеет этого предмета." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela demandera des articles à être échangés avec l'esclave du maître lorsque l'esclave n'a pas cet article." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird verlangen, dass Gegenstände mit dem Sklaven vom Meister getauscht werden, wenn der Sklave diesen Gegenstand nicht hat." end
    ; zxc =
    "This will use viper sting only when the enemy has mana and cd available. You can use a different sting aswell as this one so it will do viper on eligible units + other sting on anything else."
    if GetLocale() == "zhCN" then guiL[zxc] = "当敌人有法力和CD可用时，这将只使用蝰蛇钉刺。您也可以使用不同的蝰蛇钉刺，所以它将在合格的单位上做蝰蛇 + 其他蝰蛇在任何其他地方。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "적이 마나와 CD를 사용할 수 있을 때 이것은 뱀 쐐기를 사용합니다. 다른 쐐기를 사용할 수도 있으므로 이것은 적합한 유닛에 대해 독사를 수행하고 다른 쐐기를 수행합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto usará la picadura de víbora solo cuando el enemigo tenga maná y cd disponible. Puede usar una picadura diferente también como esta, por lo que hará la víbora en unidades elegibles + otra picadura en cualquier otra cosa." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет использовать ядовитый укус только тогда, когда враг имеет ману и cd доступны. Вы можете использовать другой укус также, как и этот, поэтому он будет делать ядовитый укус на пригодных единицах + другой укус на что-то еще." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela utilisera la morsure de vipère uniquement lorsque l'ennemi aura de la mana et du cd disponible. Vous pouvez utiliser une autre morsure aussi bien que celle-ci, de sorte qu'il fera la vipère sur les unités éligibles + autre morsure sur quoi que ce soit d'autre." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird nur dann Vipernbiss verwenden, wenn der Fe ind Mana und CD verfügbar hat. Sie können auch eine andere Bissart verwenden, so dass es Viper auf berechtigte Einheiten + andere Bissart auf alles andere tut." end
    ; zxc = "This will use your health potions or healthstones below this % HP."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将在这个％HP以下使用您的生命药水或生命石。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은이 % HP 아래에서 생명력 물약이나 생명석을 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto usará sus pociones de salud o piedras de salud por debajo de este % HP." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет использовать ваши зелья здоровья или камни здоровья ниже этого % HP." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela utilisera vos potions de soins ou vos pierres de soins en dessous de ce % HP." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Ihre Gesundheits-Tränke oder Gesundheitssteine unter diesem % HP verwenden." end
    ; zxc = "This will use your mana potions or mage mana stones below this % HP."
    if GetLocale() == "zhCN" then guiL[zxc] = "这将在这个％HP以下使用您的法力药水或法师法力石。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은이 % HP 아래에서 마나 물약이나 마법사 마나 돌을 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto usará sus pociones de maná o piedras de maná de mago por debajo de este % HP." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это будет использовать ваши зелья маны или камни маны мага ниже этого % HP." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cela utilisera vos potions de mana ou vos pierres de mana de mage en dessous de ce % HP." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies wird Ihre Manatrank oder Magier-Manasteine unter diesem % HP verwenden." end
    ; zxc = "Thunderclap X Units"
    if GetLocale() == "zhCN" then guiL[zxc] = "雷霆一击X单位" elseif GetLocale() == "koKR" then guiL[zxc] =
        "천둥벼락 X 유닛" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Trueno X Unidades" elseif GetLocale() == "ruRU" then guiL[zxc] = "Удар грома X единиц" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Coup de tonnerre X Unités" elseif GetLocale() == "deDE" then guiL[zxc] = "Donnerknall X Einheiten" end
    ; zxc = "Time to close (seconds)"
    if GetLocale() == "zhCN" then guiL[zxc] = "时间关闭（秒）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시간 닫기 (초)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tiempo para cerrar (segundos)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Время закрыть (секунд)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Temps pour fermer (secondes)" elseif GetLocale() == "deDE" then guiL[zxc] = "Zeit zum Schließen (Sekunden)" end
    ; zxc = "Time to switch (hours)"
    if GetLocale() == "zhCN" then guiL[zxc] = "时间切换（小时）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "시간 전환 (시간)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tiempo para cambiar (horas)" elseif GetLocale() == "ruRU" then guiL[zxc] = "Время переключить (часы)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Temps pour changer (heures)" elseif GetLocale() == "deDE" then guiL[zxc] = "Zeit zum Umschalten (Stunden)" end
    ; zxc = "Toggle"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换" elseif GetLocale() == "koKR" then guiL[zxc] = "토글" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Alternar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Переключатель" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Basculer" elseif GetLocale() == "deDE" then guiL[zxc] = "Toggle" end
    ; zxc = "Toggles"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换" elseif GetLocale() == "koKR" then guiL[zxc] = "토글" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Alternar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Переключатели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Basculer" elseif GetLocale() == "deDE" then guiL[zxc] = "Toggle" end
    ; zxc = "Trinket Usage"
    if GetLocale() == "zhCN" then guiL[zxc] = "饰品使用" elseif GetLocale() == "koKR" then guiL[zxc] = "장신구 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Uso de abalorios" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использование амулетов" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utilisation de bijoux" elseif GetLocale() == "deDE" then guiL[zxc] = "Schmuckstück Nutzung" end
    ; zxc = "Turn this on if using the boxes below to customize what the bot interrupts."
    if GetLocale() == "zhCN" then guiL[zxc] = "如果使用下面的框来自定义机器人中断，请打开此选项。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "아래 상자를 사용하여 봇이 차단 할 내용을 사용자 정의하는 경우이 옵션을 켭니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Activa esta opción si usas las casillas de abajo para personalizar lo que el bot interrumpe." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Включите эту опцию, если используете поля ниже, чтобы настроить, что бот прерывает." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Activez cette option si vous utilisez les cases ci-dessous pour personnaliser ce que le bot interrompt." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Schalten Sie diese Option ein, wenn Sie die Felder unten verwenden, um anzupassen, was der Bot unterbricht." end
    ; zxc = "Turn this on to use mailing."
    if GetLocale() == "zhCN" then guiL[zxc] = "打开此选项以使用邮件。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "우편을 사용하려면이 옵션을 켭니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Activa esta opción para usar el correo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Включите эту опцию, чтобы использовать почту." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Activez cette option pour utiliser le courrier." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Schalten Sie diese Option ein, um die Post zu verwenden." end
    ; zxc = "Twist to Blood"
    if GetLocale() == "zhCN" then guiL[zxc] = "转换为血魔" elseif GetLocale() == "koKR" then guiL[zxc] = "혈기로 변환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Girar a sangre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Превратить в кровь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tourner vers le sang" elseif GetLocale() == "deDE" then guiL[zxc] = "Zu Blut drehen" end
    ; zxc = "Twist to Righteous"
    if GetLocale() == "zhCN" then guiL[zxc] = "转换为正义" elseif GetLocale() == "koKR" then guiL[zxc] = "정의로 변환" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Girar a recto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Превратить в праведный" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tourner vers le droit" elseif GetLocale() == "deDE" then guiL[zxc] = "Zu Recht drehen" end
    ; zxc =
    "Type a pull spell into the bot. Whatever spell you write the bot will initiate combat with. On top of that, there will be a slider so u can slide it to lets say 2 and the grind bot will start combat with 2 casts then do whatever else."
    if GetLocale() == "zhCN" then guiL[zxc] =
        "在机器人中输入一个拉怪法术。无论你写什么法术，机器人都会与之发起战斗。此外，还有一个滑块，所以你可以滑动它，让我们说2，然后机器人将开始战斗2次施法，然后做其他任何事情。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "봇에 풀링 주문을 입력하십시오. 봇이 작성 한 주문을 사용하여 전투를 시작합니다. 그 위에 슬라이더가 있으므로 u는 2로 슬라이드 할 수 있습니다. 그리고 그라인드 봇은 2 회 시전으로 전투를 시작하고 그 이외에는 무엇이든합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escribe un hechizo de arrastre en el bot. Cualquier hechizo que escribas el bot iniciará el combate. Encima de eso, habrá un control deslizante para que puedas deslizarlo para decir 2 y el bot de molienda comenzará el combate con 2 lanzamientos y luego hará lo que sea." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Введите в бота заклинание для притягивания. Любое заклинание, которое вы напишите, бот начнет бой. Кроме того, будет ползунок, чтобы вы могли его сдвинуть, чтобы сказать 2, и бот для зерна начнет бой с 2 кастов, а затем сделает все остальное." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tapez un sort de tirage dans le bot. Quel que soit le sort que vous écrivez, le bot lancera le combat. En plus de cela, il y aura un curseur pour que vous puissiez le faire glisser pour dire 2 et le bot de broyage commencera le combat avec 2 lancers puis fera ce qu'il veut." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Geben Sie einen Ziehzauber in den Bot ein. Welcher Zauber auch immer Sie schreiben, der Bot wird den Kampf beginnen. Darüber hinaus wird es einen Schieberegler geben, so dass Sie ihn auf 2 schieben können, und der Schleifbot wird den Kampf mit 2 Würfen beginnen und dann tun, was immer." end
    ; zxc = "Unholy Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "邪恶法术" elseif GetLocale() == "koKR" then guiL[zxc] = "부정의 주문" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Hechizos de profano" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заклинания нечестивости" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sorts impies" elseif GetLocale() == "deDE" then guiL[zxc] = "Unheilige Zauber" end
    ; zxc = "Unholy"
    if GetLocale() == "zhCN" then guiL[zxc] = "邪恶" elseif GetLocale() == "koKR" then guiL[zxc] = "부정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Profano" elseif GetLocale() == "ruRU" then guiL[zxc] = "Нечестивость" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Impie" elseif GetLocale() == "deDE" then guiL[zxc] = "Unheilig" end
    ; zxc =
    "Unless otherwise stated, if it is a healing key it will auto target. If it is a hostile spell then it will perform the action on your mouseover if you have a mouseover, or your target."
    if GetLocale() == "zhCN" then guiL[zxc] = "除非另有说明，如果它是一个治疗键，它将自动定位。如果它是一个敌对法术，那么它将在你的鼠标悬停上执行操作，如果你有鼠标悬停，或者你的目标。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "그렇지 않으면 명시되어 있지 않은 경우, 치유 키이면 자동 대상이됩니다. 그렇지 않으면 적대적인 주문이면 당신이 마우스 오버를 가지고있는 경우에 마우스 오버에 작업을 수행하거나 당신의 대상입니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "A menos que se indique lo contrario, si es una tecla de curación, se dirigirá automáticamente. Si es un hechizo hostil, realizará la acción en su mouseover si tiene un mouseover, o su objetivo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если не указано иное, если это ключ исцеления, он будет автоматический целью. Если это враждебное заклинание, оно выполнит действие на вашем наведении, если у вас есть наведение, или ваша цель." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sauf indication contraire, si c'est une clé de guérison, elle visera automatiquement. Si c'est un sort hostile, il effectuera l'action sur votre souris si vous avez une souris, ou votre cible." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sofern nicht anders angegeben, wird bei einer Heilungstaste automatisch ein Ziel ausgewählt. Wenn es sich um einen feindlichen Zauber handelt, wird die Aktion auf Ihrem Mouseover ausgeführt, wenn Sie ein Mouseover haben, oder Ihr Ziel." end
    ; zxc = "Use Blood Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用血液打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "혈기의 일격 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Golpe de sangre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать удар крови" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Frappe de sang" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutstoß verwenden" end
    ; zxc = "Use Chain Heal"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用治疗链" elseif GetLocale() == "koKR" then guiL[zxc] = "연쇄 치유 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Sanación en cadena" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать цепное исцеление" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Soins en chaîne" elseif GetLocale() == "deDE" then guiL[zxc] = "Kettenheilung verwenden" end
    ; zxc = "Use Counterspell"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用法术反制" elseif GetLocale() == "koKR" then guiL[zxc] =
        "마법 차단 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Contrahechizo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать противомагию" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Contresort" elseif GetLocale() == "deDE" then guiL[zxc] = "Gegenzauber verwenden" end
    ; zxc = "Use Fade"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用渐隐术" elseif GetLocale() == "koKR" then guiL[zxc] =
        "약화 효과 해제 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Disipar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать затмение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Dissipation" elseif GetLocale() == "deDE" then guiL[zxc] = "Verblassen verwenden" end
    ; zxc = "Use Frost Strike"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用冰霜打击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "냉기의 일격 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Golpe gélido" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать удар льда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Frappe de givre" elseif GetLocale() == "deDE" then guiL[zxc] = "Froststoß verwenden" end
    ; zxc = "Use Innervate on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用激活使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "정신 자극 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Usar Inervar en:" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Использовать внутреннее зрение на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Innervation sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Anregen benutzen auf:" end
    ; zxc = "Use Kings on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用王者祝福使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "왕의 축복 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Bendición de los reyes en:" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Использовать королевское благословение на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Bénédiction des rois sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Könige benutzen auf:" end
    ; zxc = "Use Might on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用力量祝福使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "힘의 축복 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Bendición de poder en:" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Использовать благословение могущества на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Bénédiction de puissance sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Macht benutzen auf:" end
    ; zxc = "Use Salvation on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用拯救祝福使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "구원의 축복 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Salvación en:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать благословение спасения на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Salut sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Salbung benutzen auf:" end
    ; zxc = "Use Sanctuary on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用庇护祝福使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "보호의 축복 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Santuario en:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать благословение безопасности на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Sanctuaire sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Schutz benutzen auf:" end
    ; zxc = "Use Wisdom on:"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用智慧祝福使用:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "지혜의 축복 사용:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar Sabiduría en:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать благословение мудрости на:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Sagesse sur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Weisheit benutzen auf:" end
    ; zxc = "Use shred when behind"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用撕碎当敌人在背后" elseif GetLocale() == "koKR" then guiL[zxc] =
        "뒤에서 사용할 때 살상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar desgarrar cuando esté detrás" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Использовать рассечение, когда враг сзади" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser Déchirure quand derrière" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Verwunden benutzen, wenn hinter" end
    ; zxc = "Utility"
    if GetLocale() == "zhCN" then guiL[zxc] = "实用" elseif GetLocale() == "koKR" then guiL[zxc] = "유틸리티" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Utilidad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Утилита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utilitaire" elseif GetLocale() == "deDE" then guiL[zxc] = "Nützlich" end
    ; zxc = "Vampiric Blood when health <="
    if GetLocale() == "zhCN" then guiL[zxc] = "吸血鬼之血当血量低于" elseif GetLocale() == "koKR" then guiL[zxc] =
        "피의 흡수 사용할 때 생명력 <=" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sangre vampírica cuando la salud <=" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вампирическая кровь, когда здоровье <=" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sang vampirique quand la vie <=" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Blutdurst benutzen, wenn Leben <=" end
    ; zxc = "Vampiric Embrace"
    if GetLocale() == "zhCN" then guiL[zxc] = "吸血鬼的拥抱" elseif GetLocale() == "koKR" then guiL[zxc] = "흡혈의 선물" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Abrazo vampírico" elseif GetLocale() == "ruRU" then guiL[zxc] = "Объятия вампира" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Etreinte vampirique" elseif GetLocale() == "deDE" then guiL[zxc] = "Blutsaugerumarmung" end
    ; zxc = "Vanish @ HP%"
    if GetLocale() == "zhCN" then guiL[zxc] = "消失 @ 血量%" elseif GetLocale() == "koKR" then guiL[zxc] =
        "은신 @ 생명력%" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Desaparecer @ HP%" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Исчезновение @ HP%" elseif GetLocale() == "frFR" then guiL[zxc] = "Disparition @ HP%" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Verschwinden @ HP%" end
    ; zxc = "Voidwalker"
    if GetLocale() == "zhCN" then guiL[zxc] = "虚空行者" elseif GetLocale() == "koKR" then guiL[zxc] = "공허의 수호물" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Abisario" elseif GetLocale() == "ruRU" then guiL[zxc] = "Демон Бездны" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marcheur du Vide" elseif GetLocale() == "deDE" then guiL[zxc] = "Leerwandler" end
    ; zxc = "WARNING: Do not use this unless you have fully read and understand the tutorial."
    if GetLocale() == "zhCN" then guiL[zxc] = "警告: 不要使用这个除非你已经完全阅读并理解教程。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "경고: 튜토리얼을 완전히 읽고 이해하지 않으면 사용하지 마십시오." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "ADVERTENCIA: No utilice esto a menos que haya leído y comprendido completamente el tutorial." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "ПРЕДУПРЕЖДЕНИЕ: Не используйте это, если вы не полностью прочитали и поняли обучение." elseif GetLocale() == "frFR" then guiL[zxc] =
        "ATTENTION: Ne pas utiliser ceci à moins d'avoir entièrement lu et compris le tutoriel." elseif GetLocale() == "deDE" then guiL[zxc] =
        "WARNUNG: Verwenden Sie dies nicht, es sei denn, Sie haben das Tutorial vollständig gelesen und verstanden." end
    ; zxc = "Water Shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "水之护盾" elseif GetLocale() == "koKR" then guiL[zxc] = "물의 보호막" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Escudo de agua" elseif GetLocale() == "ruRU" then guiL[zxc] = "Щит воды" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bouclier d'eau" elseif GetLocale() == "deDE" then guiL[zxc] = "Wasserschild" end
    ; zxc = "Water Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "水之图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "물의 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Totem de agua" elseif GetLocale() == "ruRU" then guiL[zxc] = "Тотем воды" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem d'eau" elseif GetLocale() == "deDE" then guiL[zxc] = "Wassertotem" end
    ; zxc = "Weapon Swap"
    if GetLocale() == "zhCN" then guiL[zxc] = "武器交换" elseif GetLocale() == "koKR" then guiL[zxc] = "무기 교체" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Intercambio de armas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Смена оружия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Échange d'arme" elseif GetLocale() == "deDE" then guiL[zxc] = "Waffenwechsel" end
    ; zxc = "When this many enemies or more are blockable bot will use holy shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "当这么多敌人或更多是可阻挡的机器人将使用神圣之盾" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 많은 적이나 더 많은 적이 차단 될 때, 로봇은 신성한 방패를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando esta cantidad de enemigos o más son bloqueables bot utilizará escudo sagrado" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда это количество врагов или больше блокируемых бот будет использовать священный щит" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque ce nombre d'ennemis ou plus sont bloquables bot utilisera bouclier sacré" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn diese Anzahl von Feinden oder mehr blockierbar Bot wird heiliger Schild verwenden" end
    ; zxc = "When this many enemies or more are blockable bot will use shield block"
    if GetLocale() == "zhCN" then guiL[zxc] = "当这么多敌人或更多是可阻挡的机器人将使用盾牌格挡" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 많은 적이나 더 많은 적이 차단 될 때, 로봇은 방패 막기를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando esta cantidad de enemigos o más son bloqueables bot utilizará bloqueo de escudo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда это количество врагов или больше блокируемых бот будет использовать блок щита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque ce nombre d'ennemis ou plus sont bloquables bot utilisera blocage de bouclier" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn diese Anzahl von Feinden oder mehr blockierbar Bot wird Schildblock verwenden" end
    ; zxc = "When this many enemies or more are in range bot will use avenging wrath"
    if GetLocale() == "zhCN" then guiL[zxc] = "当这么多敌人或更多在范围内机器人将使用复仇之怒" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이 많은 적이나 더 많은 적이 범위 내에 있을 때, 로봇은 복수의 격노를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando esta cantidad de enemigos o más están en el rango bot utilizará ira vengadora" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда это количество врагов или больше в диапазоне бот будет использовать месть" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque ce nombre d'ennemis ou plus sont dans la portée bot utilisera courroux vengeur" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn diese Anzahl von Feinden oder mehr im Bereich Bot wird Rache verwenden" end
    ; zxc = "When to use Fast Heal (%)"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用快速治疗（%）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "빠른 치유를 사용할 때（%）" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando utilizar rápido curar（%）" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда использовать быстрое исцеление（%）" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Quand utiliser rapide soigner（%）" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn verwenden Schnellheilung（%）" end
    ; zxc = "When your hp is below this % bot will use divine protection"
    if GetLocale() == "zhCN" then guiL[zxc] = "当你的hp低于这个％机器人将使用神圣保护" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신의 hp가이 % 아래이면 로봇은 신성한 보호를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando su hp está por debajo de este% bot utilizará protección divina" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда ваше hp ниже этого％бот будет использовать божественную защиту" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque votre hp est inférieur à ce% bot utilisera protection divine" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn Ihr hp unter diesem% Bot wird göttliche Schutz verwenden" end
    ; zxc = "When your hp is below this % bot will use holy shield"
    if GetLocale() == "zhCN" then guiL[zxc] = "当你的hp低于这个％机器人将使用神圣之盾" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신의 hp가이 % 아래이면 로봇은 신성한 방패를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando su hp está por debajo de este% bot utilizará escudo sagrado" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда ваше hp ниже этого％бот будет использовать священный щит" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque votre hp est inférieur à ce% bot utilisera bouclier sacré" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn Ihr hp unter diesem% Bot wird heiliger Schild verwenden" end
    ; zxc = "When your hp is below this % bot will use shield block"
    if GetLocale() == "zhCN" then guiL[zxc] = "当你的hp低于这个％机器人将使用盾牌格挡" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신의 hp가이 % 아래이면 로봇은 방패 막기를 사용합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cuando su hp está por debajo de este% bot utilizará bloqueo de escudo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Когда ваше hp ниже этого％бот будет использовать блок щита" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Lorsque votre hp est inférieur à ce% bot utilisera blocage de bouclier" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn Ihr hp unter diesem% Bot wird Schildblock verwenden" end
    ; zxc =
    "While botting, this makes the green circle bigger or smaller which would increase or decrease the search range."
    if GetLocale() == "zhCN" then guiL[zxc] = "在机器人运行时，这使得绿色的圆圈变大或变小，这将增加或减少搜索范围。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "로봇을 사용하는 동안이 녹색 원을 더 크거나 더 작게 만들어 검색 범위를 증가 또는 감소합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mientras que el bot, esto hace que el círculo verde más grande o más pequeño que aumentaría o disminuiría el rango de búsqueda." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Во время бота, это делает зеленый круг больше или меньше, что увеличит или уменьшит диапазон поиска." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pendant le botting, cela fait le cercle vert plus grand ou plus petit qui augmenterait ou diminuerait la portée de recherche." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Während botting, macht dies den grünen Kreis größer oder kleiner, was die Suchweite erhöhen oder verringern würde." end
    ; zxc = "While gather botting, the bot will also grind mobs."
    if GetLocale() == "zhCN" then guiL[zxc] = "在采集机器人运行时，机器人也会打怪。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "로봇을 사용하는 동안 로봇은 또한 그린드 몹을합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mientras que el bot de recogida, el bot también molerá mobs." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Во время бота сбора, бот также будет молотить мобов." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pendant le bot de collecte, le bot moudra également les mobs." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Während botting sammeln, wird der Bot auch Mobs mahlen." end
    ; zxc = "Windfury Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "风怒图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "풍성 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Totém Furia del Viento" elseif GetLocale() == "ruRU" then guiL[zxc] = "Тотем неистовства ветра" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Totem Furie-des-vents" elseif GetLocale() == "deDE" then guiL[zxc] = "Windzorn Totem" end
    ; zxc = "Windfury Weapon"
    if GetLocale() == "zhCN" then guiL[zxc] = "风怒武器" elseif GetLocale() == "koKR" then guiL[zxc] = "풍성 무기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Arma Furia del Viento" elseif GetLocale() == "ruRU" then guiL[zxc] = "Оружие неистовства ветра" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Arme Furie-des-vents" elseif GetLocale() == "deDE" then guiL[zxc] = "Windzorn Waffe" end
    ; zxc = "Windows Only"
    if GetLocale() == "zhCN" then guiL[zxc] = "仅限Windows" elseif GetLocale() == "koKR" then guiL[zxc] = "윈도우 만" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Windows Sólo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Только Windows" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Windows Seulement" elseif GetLocale() == "deDE" then guiL[zxc] = "Nur Windows" end
    ; zxc = "Wisdom Always"
    if GetLocale() == "zhCN" then guiL[zxc] = "总是智慧" elseif GetLocale() == "koKR" then guiL[zxc] = "항상 지혜" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sabiduría Siempre" elseif GetLocale() == "ruRU" then guiL[zxc] = "Мудрость всегда" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sagesse Toujours" elseif GetLocale() == "deDE" then guiL[zxc] = "Weisheit Immer" end
    ; zxc = "Wisdom Debuff"
    if GetLocale() == "zhCN" then guiL[zxc] = "智慧Debuff" elseif GetLocale() == "koKR" then guiL[zxc] = "지혜 디버프" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sabiduría Debuff" elseif GetLocale() == "ruRU" then guiL[zxc] = "Мудрость Debuff" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Sagesse Debuff" elseif GetLocale() == "deDE" then guiL[zxc] = "Weisheit Debuff" end
    ; zxc = "WotLK Battlegrounds"
    if GetLocale() == "zhCN" then guiL[zxc] = "WotLK战场" elseif GetLocale() == "koKR" then guiL[zxc] = "WotLK 전장" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "WotLK Campos de Batalla" elseif GetLocale() == "ruRU" then guiL[zxc] = "WotLK Поля боя" elseif GetLocale() == "frFR" then guiL[zxc] =
        "WotLK Champs de bataille" elseif GetLocale() == "deDE" then guiL[zxc] = "WotLK Schlachtfelder" end
    ; zxc = "Wow Account Email"
    if GetLocale() == "zhCN" then guiL[zxc] = "Wow帐号电子邮件" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Wow 계정 이메일" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wow Cuenta de correo electrónico" elseif GetLocale() == "ruRU" then guiL[zxc] = "Wow Аккаунт Email" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wow Compte Email" elseif GetLocale() == "deDE" then guiL[zxc] = "Wow Account E-Mail" end
    ; zxc = "Wow Account Name (WoW1 or something)"
    if GetLocale() == "zhCN" then guiL[zxc] = "Wow帐号名称(WoW1或其他)" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Wow 계정 이름 (WoW1 또는 다른 것)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wow Nombre de la cuenta (WoW1 o algo)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Wow Имя учетной записи (WoW1 или что-то)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wow Nom du compte (WoW1 ou quelque chose)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wow Account Name (WoW1 oder etwas)" end
    ; zxc = "Wow Account Password"
    if GetLocale() == "zhCN" then guiL[zxc] = "Wow帐号密码" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Wow 계정 비밀번호" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wow Contraseña de la cuenta" elseif GetLocale() == "ruRU" then guiL[zxc] = "Wow Пароль учетной записи" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wow Mot de passe du compte" elseif GetLocale() == "deDE" then guiL[zxc] = "Wow Account Passwort" end
    ; zxc = "Wrath"
    if GetLocale() == "zhCN" then guiL[zxc] = "Wrath" elseif GetLocale() == "koKR" then guiL[zxc] = "Wrath" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wrath" elseif GetLocale() == "ruRU" then guiL[zxc] = "Wrath" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wrath" elseif GetLocale() == "deDE" then guiL[zxc] = "Wrath" end
    ; zxc = "You are already recording something or are set as a slave. Disable the other recording or slave first."
    if GetLocale() == "zhCN" then guiL[zxc] = "你已经在录制或者设置为从属。请先停止其他录制或从属。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신은 이미 녹화하거나 slave로 설정되어 있습니다. 다른 녹화 또는 slave를 먼저 비활성화하십시오." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ya estás grabando algo o estás configurado como esclavo. Deshabilita la otra grabación o esclavo primero." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вы уже записываете что-то или установлены как раб. Отключите другую запись или раба сначала." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vous enregistrez déjà quelque chose ou êtes réglé comme un esclave. Désactivez l'autre enregistrement ou esclave d'abord." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sie sind bereits etwas aufzeichnen oder sind als Sklave eingestellt. Deaktivieren Sie die andere Aufzeichnung oder Sklave zuerst." end
    ; zxc = "You can't edit grind points while recording something or while you're a slave."
    if GetLocale() == "zhCN" then guiL[zxc] = "你不能编辑磨点，因为你正在录制或者设置为从属。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신은 녹화하거나 slave로 설정되어 있습니다. 당신은 무언가를 녹화하는 동안 또는 당신은 slave가 될 수 없습니다 그라인드 포인트를 편집 할 수 없습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No se puede editar puntos de molienda mientras se graba algo o mientras que usted es un esclavo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вы не можете редактировать точки шлифовки, пока записываете что-то или пока вы раб." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vous ne pouvez pas modifier les points de meulage pendant l'enregistrement de quelque chose ou pendant que vous êtes un esclave." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sie können nicht bearbeiten Mahlzeiten während Sie etwas aufzeichnen oder während Sie ein Sklave sind." end
    ; zxc = "You can't record NPC while recording something or while you're a slave."
    if GetLocale() == "zhCN" then guiL[zxc] = "你不能录制NPC，因为你正在录制或者设置为从属。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신은 녹화하거나 slave로 설정되어 있습니다. 당신은 무언가를 녹화하는 동안 또는 당신은 slave가 될 수 없습니다 NPC를 기록 할 수 없습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No se puede grabar NPC mientras se graba algo o mientras que usted es un esclavo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вы не можете записать NPC, пока записываете что-то или пока вы раб." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vous ne pouvez pas enregistrer NPC pendant l'enregistrement de quelque chose ou pendant que vous êtes un esclave." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sie können nicht aufzeichnen NPC während Sie etwas aufzeichnen oder während Sie ein Sklave sind." end
    ; zxc = "You can't record grind path while recording something or while you're a slave."
    if GetLocale() == "zhCN" then guiL[zxc] = "你不能录制磨点路径，因为你正在录制或者设置为从属。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신은 녹화하거나 slave로 설정되어 있습니다. 당신은 무언가를 녹화하는 동안 또는 당신은 slave가 될 수 없습니다 그라인드 경로를 기록 할 수 없습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No se puede grabar el camino de molienda mientras se graba algo o mientras que usted es un esclavo." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вы не можете записать шлифовку путь, пока записываете что-то или пока вы раб." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vous ne pouvez pas enregistrer le chemin de meulage pendant l'enregistrement de quelque chose ou pendant que vous êtes un esclave." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sie können nicht aufzeichnen Mahlweg während Sie etwas aufzeichnen oder während Sie ein Sklave sind." end
    ; zxc = "You cannot start this while slave is active. Turn slave off first."
    if GetLocale() == "zhCN" then guiL[zxc] = "你不能在从属激活时开始。首先关闭从属。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신은 slave가 활성화되어 있습니다. 먼저 slave를 끕니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "No se puede iniciar esto mientras esclavo está activo. Apague esclavo primero." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Вы не можете начать это, пока раб активен. Сначала выключите раба." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vous ne pouvez pas commencer ceci pendant que l'esclave est actif. Éteignez l'esclave en premier." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Sie können nicht starten, während Sklave aktiv ist. Schalten Sie zuerst Sklave aus." end
    ; zxc = "do not touch if you dont know what youre doing"
    if GetLocale() == "zhCN" then guiL[zxc] = "不要碰，如果你不知道你在做什么" elseif GetLocale() == "koKR" then guiL[zxc] =
        "당신이 무엇을 하는지 모르면 닿지 마십시오" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "no toque si no sabe lo que está haciendo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "не трогайте, если вы не знаете, что вы делаете" elseif GetLocale() == "frFR" then guiL[zxc] =
        "ne touchez pas si vous ne savez pas ce que vous faites" elseif GetLocale() == "deDE" then guiL[zxc] =
        "nicht berühren, wenn Sie nicht wissen, was Sie tun" end
    ; zxc =
    "if battleground now you can type in XYZ coordinate to idle at while in queue, to do so go in gui, go to Idle at (XYZ) type in .gps in game, write in the X,Y,Z Separate by comma. doesnt need to be exact decimals, just 1 or 2 is OK."
    if GetLocale() == "zhCN" then guiL[zxc] =
        "如果战场现在你可以输入XYZ坐标在队列中空闲，这样做，转到gui，转到空闲（XYZ）输入.gps在游戏中，写入X，Y，Z分隔逗号。不需要是精确的小数，只是1或2是好的。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "전장이 지금 당신은 큐에있는 동안 XYZ 좌표를 입력 할 수 있습니다, 그렇게하려면 gui에 들어가서, Idle at (XYZ)에 들어가서 .gps 게임에 입력하고, 쉼표로 구분된 X, Y, Z를 쓰십시오. 정확한 소수점이 필요하지 않습니다. 1 또는 2 만 괜찮습니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Si campo de batalla ahora puede escribir en XYZ coordenadas para el ocio en el tiempo de espera, para hacerlo vaya en gui, ir a Idle en (XYZ) escriba en .gps en el juego, escriba en el X, Y, Z separado por comas. no necesita ser exactos decimales, sólo 1 o 2 está bien." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Если теперь поле боя, вы можете ввести в XYZ координаты для простоя во время ожидания, чтобы сделать это, перейдите в gui, перейдите в Idle at (XYZ) введите .gps в игре, напишите в X, Y, Z отдельно по запятой. не нужно быть точными десятичными, только 1 или 2 в порядке." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Si champ de bataille maintenant vous pouvez taper en XYZ coordonnées à l'attente, pour ce faire, allez dans gui, aller à Idle at (XYZ) tapez .gps dans le jeu, écrivez dans le X, Y, Z séparé par des virgules. n'a pas besoin d'être exact décimales, juste 1 ou 2 est OK." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Wenn Schlachtfeld jetzt können Sie in XYZ Koordinaten eingeben, um in der Warteschlange zu idle, um dies zu tun, gehen Sie in gui, gehen Sie zu Idle at (XYZ) tippen Sie .gps im Spiel, schreiben Sie in der X, Y, Z getrennt durch Komma. muss nicht genau Dezimalstellen, nur 1 oder 2 ist OK." end
    ; zxc = "min smartmove score (Alterac Valley)"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小智能移动分数（奥特兰克山谷）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 스마트 이동 점수 (알터랙 계곡)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "min puntuación smartmove (Valle de Alterac)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "минимальный смарт движения счет (Альтеракская долина)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "min score smartmove (Vallée d'Alterac)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "min smartmove score (Alteractal)" end
    ; zxc = "min smartmove score (Arathi Basin)"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小智能移动分数（阿拉希盆地）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 스마트 이동 점수 (아라시 분지)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "min puntuación smartmove (Cuenca de Arathi)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "минимальный смарт движения счет (Низина Арати)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "min score smartmove (Bassin d'Arathi)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "min smartmove score (Arathibecken)" end
    ; zxc = "min smartmove score (Warsong Gulch)"
    if GetLocale() == "zhCN" then guiL[zxc] = "最小智能移动分数（战歌峡谷）" elseif GetLocale() == "koKR" then guiL[zxc] =
        "최소 스마트 이동 점수 (전쟁노래 협곡)" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "min puntuación smartmove (Garganta Grito de Guerra)" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "минимальный смарт движения счет (Ущелье Песни Войны)" elseif GetLocale() == "frFR" then guiL[zxc] =
        "min score smartmove (Goulet des Chanteguerres)" elseif GetLocale() == "deDE" then guiL[zxc] =
        "min smartmove score (Kriegshymnenschlucht)" end
    ; zxc = "multibox"
    if GetLocale() == "zhCN" then guiL[zxc] = "多重框架" elseif GetLocale() == "koKR" then guiL[zxc] = "멀티박스" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "multibox" elseif GetLocale() == "ruRU" then guiL[zxc] = "мультибокс" elseif GetLocale() == "frFR" then guiL[zxc] =
        "multibox" elseif GetLocale() == "deDE" then guiL[zxc] = "multibox" end
    ; zxc = "no HS cancelling @"
    if GetLocale() == "zhCN" then guiL[zxc] = "不取消治疗石 @" elseif GetLocale() == "koKR" then guiL[zxc] =
        "치유석 취소 안함 @" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "no cancelar HS @" elseif GetLocale() == "ruRU" then guiL[zxc] = "не отменять ЛС @" elseif GetLocale() == "frFR" then guiL[zxc] =
        "pas d'annulation de HS @" elseif GetLocale() == "deDE" then guiL[zxc] = "keine HS-Stornierung @" end
    ; zxc = "Keybinds"
    if GetLocale() == "zhCN" then guiL[zxc] = "快捷键" elseif GetLocale() == "koKR" then guiL[zxc] = "단축키" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Atajos de teclado" elseif GetLocale() == "ruRU" then guiL[zxc] = "Клавиши" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Raccourcis" elseif GetLocale() == "deDE" then guiL[zxc] = "Tastaturbelegung" end
    ; zxc = "Grind"
    if GetLocale() == "zhCN" then guiL[zxc] = "打怪" elseif GetLocale() == "koKR" then guiL[zxc] = "그린드" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Moler" elseif GetLocale() == "ruRU" then guiL[zxc] = "Завал" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Grinder" elseif GetLocale() == "deDE" then guiL[zxc] = "Grind" end
    ; zxc = "PvP"
    if GetLocale() == "zhCN" then guiL[zxc] = "PvP" elseif GetLocale() == "koKR" then guiL[zxc] = "PvP" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "PvP" elseif GetLocale() == "ruRU" then guiL[zxc] = "PvP" elseif GetLocale() == "frFR" then guiL[zxc] = "PvP" elseif GetLocale() == "deDE" then guiL[zxc] =
        "PvP" end
    ; zxc = "Gather"
    if GetLocale() == "zhCN" then guiL[zxc] = "采集" elseif GetLocale() == "koKR" then guiL[zxc] = "수집" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Recolectar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Собирать" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Récolter" elseif GetLocale() == "deDE" then guiL[zxc] = "Sammeln" end
    ; zxc = "Multibox/Dungeon"
    if GetLocale() == "zhCN" then guiL[zxc] = "多重框架/地下城" elseif GetLocale() == "koKR" then guiL[zxc] =
        "멀티박스/던전" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Multibox/Dungeon" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Мультибокс/Подземелье" elseif GetLocale() == "frFR" then guiL[zxc] = "Multibox/Dungeon" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Multibox/Dungeon" end
    ; zxc = "Fishing"
    if GetLocale() == "zhCN" then guiL[zxc] = "钓鱼" elseif GetLocale() == "koKR" then guiL[zxc] = "낚시" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Pesca" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рыбалка" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pêche" elseif GetLocale() == "deDE" then guiL[zxc] = "Angeln" end
    ; zxc = "Settings"
    if GetLocale() == "zhCN" then guiL[zxc] = "设置" elseif GetLocale() == "koKR" then guiL[zxc] = "설정" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ajustes" elseif GetLocale() == "ruRU" then guiL[zxc] = "Настройки" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Paramètres" elseif GetLocale() == "deDE" then guiL[zxc] = "Einstellungen" end
    ; zxc = "Create Profile"
    if GetLocale() == "zhCN" then guiL[zxc] = "创建配置文件" elseif GetLocale() == "koKR" then guiL[zxc] = "프로필 생성" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Crear perfil" elseif GetLocale() == "ruRU" then guiL[zxc] = "Создать профиль" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Créer un profil" elseif GetLocale() == "deDE" then guiL[zxc] = "Profil erstellen" end
    ; zxc = "Quest"
    if GetLocale() == "zhCN" then guiL[zxc] = "任务" elseif GetLocale() == "koKR" then guiL[zxc] = "퀘스트" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Misión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Задание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Quête" elseif GetLocale() == "deDE" then guiL[zxc] = "Quest" end
    ; zxc = "Contact"
    if GetLocale() == "zhCN" then guiL[zxc] = "联系" elseif GetLocale() == "koKR" then guiL[zxc] = "연락" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Contacto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Контакт" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Contact" elseif GetLocale() == "deDE" then guiL[zxc] = "Kontakt" end
    ; zxc = "Relogger"
    if GetLocale() == "zhCN" then guiL[zxc] = "重登" elseif GetLocale() == "koKR" then guiL[zxc] = "재접속" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Relogger" elseif GetLocale() == "ruRU" then guiL[zxc] = "Перезаход" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Relogger" elseif GetLocale() == "deDE" then guiL[zxc] = "Relogger" end
    ; zxc = "Use Single Target"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用单体攻击" elseif GetLocale() == "koKR" then guiL[zxc] =
        "단일 대상 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar objetivo único" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать одиночную цель" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser la cible unique" elseif GetLocale() == "deDE" then guiL[zxc] = "Einzelziel benutzen" end
    ; zxc = "Burst Damage"
    if GetLocale() == "zhCN" then guiL[zxc] = "爆发伤害" elseif GetLocale() == "koKR" then guiL[zxc] = "폭발적인 피해" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Daño de explosión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Всплеск урона" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dégâts de burst" elseif GetLocale() == "deDE" then guiL[zxc] = "Burst-Schaden" end
    ; zxc = "Use DPS Racials"
    if GetLocale() == "zhCN" then guiL[zxc] = "使用DPS种族天赋" elseif GetLocale() == "koKR" then guiL[zxc] =
        "DPS 종족 특성 사용" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Usar rasgos de DPS" elseif GetLocale() == "ruRU" then guiL[zxc] = "Использовать расовые способности DPS" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Utiliser les raciaux DPS" elseif GetLocale() == "deDE" then guiL[zxc] = "DPS-Rassenspezialisierung benutzen" end
    ; zxc = "Target Enemy Players"
    if GetLocale() == "zhCN" then guiL[zxc] = "目标敌对玩家" elseif GetLocale() == "koKR" then guiL[zxc] =
        "적대적 플레이어 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Objetivo de jugadores enemigos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Цель враждебных игроков" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cibler les joueurs ennemis" elseif GetLocale() == "deDE" then guiL[zxc] = "Feindliche Spieler als Ziel" end
    ; zxc = "No Spells"
    if GetLocale() == "zhCN" then guiL[zxc] = "无法施法" elseif GetLocale() == "koKR" then guiL[zxc] = "주문 없음" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Sin hechizos" elseif GetLocale() == "ruRU" then guiL[zxc] = "Нет заклинаний" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Pas de sorts" elseif GetLocale() == "deDE" then guiL[zxc] = "Keine Zauber" end
    ; zxc = "Draw healing help line"
    if GetLocale() == "zhCN" then guiL[zxc] = "绘制治疗帮助线" elseif GetLocale() == "koKR" then guiL[zxc] =
        "치유 도움말 라인 그리기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar línea de ayuda de sanación" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Отрисовать линию помощи по исцелению" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner la ligne d'aide de soin" elseif GetLocale() == "deDE" then guiL[zxc] = "Heilhilfslinie zeichnen" end
    ; zxc = "Draw Player name:"
    if GetLocale() == "zhCN" then guiL[zxc] = "绘制玩家名字:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "플레이어 이름 그리기:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar nombre de jugador:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Отрисовать имя игрока:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner le nom du joueur:" elseif GetLocale() == "deDE" then guiL[zxc] = "Spielername zeichnen:" end
    ; zxc = "Draw help line to player"
    if GetLocale() == "zhCN" then guiL[zxc] = "绘制帮助线到玩家" elseif GetLocale() == "koKR" then guiL[zxc] =
        "플레이어에게 도움말 라인 그리기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar línea de ayuda al jugador" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Отрисовать линию помощи к игроку" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner la ligne d'aide au joueur" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Hilfslinie zum Spieler zeichnen" end
    ; zxc = "Draw enemy warrior deadzone"
    if GetLocale() == "zhCN" then guiL[zxc] = "绘制敌对战士死亡区域" elseif GetLocale() == "koKR" then guiL[zxc] =
        "적대적 전사 사망 지대 그리기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dibujar zona muerta de guerrero enemigo" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Отрисовать мертвую зону враждебного воина" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dessiner la zone morte du guerrier ennemi" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Feindliches Krieger Totzone zeichnen" end
    ; zxc = "Toggles"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换" elseif GetLocale() == "koKR" then guiL[zxc] = "토글" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Alternar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Переключить" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Basculer" elseif GetLocale() == "deDE" then guiL[zxc] = "Umschalten" end
    ; zxc = "Toggle Rotation on/off"
    if GetLocale() == "zhCN" then guiL[zxc] = "切换旋转开/关" elseif GetLocale() == "koKR" then guiL[zxc] =
        "회전 켜기/끄기 토글" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Alternar rotación encendido/apagado" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Переключить вкл/выкл вращение" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Basculer la rotation on/off" elseif GetLocale() == "deDE" then guiL[zxc] = "Rotation an/aus umschalten" end
    ; zxc = "Fast heal your Target"
    if GetLocale() == "zhCN" then guiL[zxc] = "快速治疗目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "빠른 치유 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Curación rápida de tu objetivo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Быстрое исцеление цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins rapides de votre cible" elseif GetLocale() == "deDE" then guiL[zxc] = "Schnelle Heilung deines Ziels" end
    ; zxc = "Slow heal your Target"
    if GetLocale() == "zhCN" then guiL[zxc] = "慢速治疗目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "느린 치유 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Curación lenta de tu objetivo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Медленное исцеление цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins lents de votre cible" elseif GetLocale() == "deDE" then guiL[zxc] = "Langsame Heilung deines Ziels" end
    ; zxc = "Fast heal auto Target"
    if GetLocale() == "zhCN" then guiL[zxc] = "快速治疗自动目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "빠른 치유 자동 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Curación rápida de objetivo automático" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Быстрое исцеление авто цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins rapides de votre cible auto" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Schnelle Heilung deines automatischen Ziels" end
    ; zxc = "Slow heal auto Target"
    if GetLocale() == "zhCN" then guiL[zxc] = "慢速治疗自动目标" elseif GetLocale() == "koKR" then guiL[zxc] =
        "느린 치유 자동 대상" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Curación lenta de objetivo automático" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Медленное исцеление авто цели" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Soins lents de votre cible auto" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Langsame Heilung deines automatischen Ziels" end
    ; zxc = "Charge/intercept"
    if GetLocale() == "zhCN" then guiL[zxc] = "冲锋/拦截" elseif GetLocale() == "koKR" then guiL[zxc] = "돌진/막기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cargar/interceptar" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рывок/перехват" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Charge/intercepter" elseif GetLocale() == "deDE" then guiL[zxc] = "Ansturm/abwehren" end
    ; zxc = "Intervene"
    if GetLocale() == "zhCN" then guiL[zxc] = "援护" elseif GetLocale() == "koKR" then guiL[zxc] = "간첩" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Intervenir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Вмешаться" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Intervenir" elseif GetLocale() == "deDE" then guiL[zxc] = "Eingreifen" end
    ; zxc = "Intimidating Shout"
    if GetLocale() == "zhCN" then guiL[zxc] = "破胆怒吼" elseif GetLocale() == "koKR" then guiL[zxc] = "위협의 외침" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Grito intimidatorio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Устрашающий крик" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cri d'intimidation" elseif GetLocale() == "deDE" then guiL[zxc] = "Einschüchterndes Gebrüll" end
    ; zxc = "Bladestorm"
    if GetLocale() == "zhCN" then guiL[zxc] = "剑刃风暴" elseif GetLocale() == "koKR" then guiL[zxc] = "칼날 폭풍" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tormenta de hojas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Буря клинков" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tempête de lames" elseif GetLocale() == "deDE" then guiL[zxc] = "Klingensturm" end
    ; zxc = "Recklessness"
    if GetLocale() == "zhCN" then guiL[zxc] = "鲁莽" elseif GetLocale() == "koKR" then guiL[zxc] = "무모함" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Temeridad" elseif GetLocale() == "ruRU" then guiL[zxc] = "Безрассудство" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Témérité" elseif GetLocale() == "deDE" then guiL[zxc] = "Tollkühnheit" end
    ; zxc = "Reck+Bladestorm"
    if GetLocale() == "zhCN" then guiL[zxc] = "鲁莽+剑刃风暴" elseif GetLocale() == "koKR" then guiL[zxc] =
        "무모함+칼날 폭풍" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Temeridad+Tormenta de hojas" elseif GetLocale() == "ruRU" then guiL[zxc] = "Безрассудство+Буря клинков" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Témérité+Tempête de lames" elseif GetLocale() == "deDE" then guiL[zxc] = "Tollkühnheit+Klingensturm" end
    ; zxc = "Shield Wall"
    if GetLocale() == "zhCN" then guiL[zxc] = "盾墙" elseif GetLocale() == "koKR" then guiL[zxc] = "방패의 벽" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Muro de escudo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Глухая оборона" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Mur protecteur" elseif GetLocale() == "deDE" then guiL[zxc] = "Schildwall" end
    ; zxc = "Retaliation"
    if GetLocale() == "zhCN" then guiL[zxc] = "反击风暴" elseif GetLocale() == "koKR" then guiL[zxc] = "응보" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Represalia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возмездие" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Vengeance" elseif GetLocale() == "deDE" then guiL[zxc] = "Gegenschlag" end
    ; zxc = "Disarm"
    if GetLocale() == "zhCN" then guiL[zxc] = "缴械" elseif GetLocale() == "koKR" then guiL[zxc] = "무장 해제" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Desarme" elseif GetLocale() == "ruRU" then guiL[zxc] = "Разоружить" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Désarmement" elseif GetLocale() == "deDE" then guiL[zxc] = "Entwaffnen" end
    ; zxc = "Hammer of Justice"
    if GetLocale() == "zhCN" then guiL[zxc] = "制裁之锤" elseif GetLocale() == "koKR" then guiL[zxc] = "심판의 망치" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Martillo de la justicia" elseif GetLocale() == "ruRU" then guiL[zxc] = "Молот правосудия" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Marteau de la justice" elseif GetLocale() == "deDE" then guiL[zxc] = "Hammer der Gerechtigkeit" end
    ; zxc = "Bubble"
    if GetLocale() == "zhCN" then guiL[zxc] = "保护之泉" elseif GetLocale() == "koKR" then guiL[zxc] = "보호의 물결" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Burbuja" elseif GetLocale() == "ruRU" then guiL[zxc] = "Пузырь" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Bulle" elseif GetLocale() == "deDE" then guiL[zxc] = "Blase" end
    ; zxc = "Hand of Protection"
    if GetLocale() == "zhCN" then guiL[zxc] = "保护之手" elseif GetLocale() == "koKR" then guiL[zxc] = "보호의 손길" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de protección" elseif GetLocale() == "ruRU" then guiL[zxc] = "Круговерть защиты" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main de protection" elseif GetLocale() == "deDE" then guiL[zxc] = "Hand des Schutzes" end
    ; zxc = "Hand of Sacrifice"
    if GetLocale() == "zhCN" then guiL[zxc] = "牺牲之手" elseif GetLocale() == "koKR" then guiL[zxc] = "희생의 손길" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Mano de sacrificio" elseif GetLocale() == "ruRU" then guiL[zxc] = "Круговерть жертвенности" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Main de sacrifice" elseif GetLocale() == "deDE" then guiL[zxc] = "Hand des Opfers" end
    ; zxc = "Freedom Target/Self"
    if GetLocale() == "zhCN" then guiL[zxc] = "自由目标/自身" elseif GetLocale() == "koKR" then guiL[zxc] =
        "자유 대상/자신" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Libertad objetivo/yo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Свобода цель/сам" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Liberté cible/soi" elseif GetLocale() == "deDE" then guiL[zxc] = "Freiheit Ziel/Selbst" end
    ; zxc = "Fear"
    if GetLocale() == "zhCN" then guiL[zxc] = "恐惧术" elseif GetLocale() == "koKR" then guiL[zxc] = "공포" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Miedo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Страх" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Peur" elseif GetLocale() == "deDE" then guiL[zxc] = "Furcht" end
    ; zxc = "Dispersion"
    if GetLocale() == "zhCN" then guiL[zxc] = "散魔功" elseif GetLocale() == "koKR" then guiL[zxc] = "산만" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Dispersión" elseif GetLocale() == "ruRU" then guiL[zxc] = "Рассеивание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Dispersion" elseif GetLocale() == "deDE" then guiL[zxc] = "Dispersion" end
    ; zxc = "Psychic Horror"
    if GetLocale() == "zhCN" then guiL[zxc] = "心灵恐惧" elseif GetLocale() == "koKR" then guiL[zxc] = "심신 공포" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Horror psíquico" elseif GetLocale() == "ruRU" then guiL[zxc] = "Психический ужас" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Horreur psychique" elseif GetLocale() == "deDE" then guiL[zxc] = "Psychische Schreckensgeister" end
    ; zxc = "Fear"
    if GetLocale() == "zhCN" then guiL[zxc] = "恐惧术" elseif GetLocale() == "koKR" then guiL[zxc] = "공포" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Miedo" elseif GetLocale() == "ruRU" then guiL[zxc] = "Страх" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Peur" elseif GetLocale() == "deDE" then guiL[zxc] = "Furcht" end
    ; zxc = "Death Coil"
    if GetLocale() == "zhCN" then guiL[zxc] = "死亡缠绕" elseif GetLocale() == "koKR" then guiL[zxc] = "죽음의 손아귀" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Embate mortal" elseif GetLocale() == "ruRU" then guiL[zxc] = "Смертельное кольцо" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Voile mortel" elseif GetLocale() == "deDE" then guiL[zxc] = "Todesmantel" end
    ; zxc = "Charge Interrupt"
    if GetLocale() == "zhCN" then guiL[zxc] = "冲锋打断" elseif GetLocale() == "koKR" then guiL[zxc] = "돌진 차단" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Carga interrumpir" elseif GetLocale() == "ruRU" then guiL[zxc] = "Заряд прерывание" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Charge interrompre" elseif GetLocale() == "deDE" then guiL[zxc] = "Ansturm unterbrechen" end
    ; zxc = "This is for revenge spec arms warriors."
    if GetLocale() == "zhCN" then guiL[zxc] = "这是为了复仇专精武器战士。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "이것은 복수 전문 무기 전사에 대한 것이다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Esto es para la venganza de la especie de guerreros de armas." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Это для мести специальности воинов оружия." elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ceci est pour la vengeance de la spécification de guerriers d'armes." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Dies ist für Rache Spezifikation Waffenkrieger." end
    ; zxc = "Retaliation on HP"
    if GetLocale() == "zhCN" then guiL[zxc] = "反击血量" elseif GetLocale() == "koKR" then guiL[zxc] = "복수 HP" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Represalia en HP" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возмездие на HP" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réplique sur HP" elseif GetLocale() == "deDE" then guiL[zxc] = "Gegenschlag auf HP" end
    ; zxc = "Retaliation on #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "反击敌人数量" elseif GetLocale() == "koKR" then guiL[zxc] = "복수 # 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Represalia en #enemies" elseif GetLocale() == "ruRU" then guiL[zxc] = "Возмездие на #enemies" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Réplique sur #enemies" elseif GetLocale() == "deDE" then guiL[zxc] = "Gegenschlag auf #enemies" end
    ; zxc = "Killing Spree #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "杀戮连环敌人数量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "살인 연속 # 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Matanza #enemies" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Убийство #enemies" elseif GetLocale() == "frFR" then guiL[zxc] = "Série meurtrière #enemies" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Tödliche Serie #enemies" end
    ; zxc = "Blade Flurry #enemies"
    if GetLocale() == "zhCN" then guiL[zxc] = "刀锋乱舞敌人数量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "칼날 무덤 # 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Torbellino de hojas #enemies" elseif GetLocale() == "ruRU" then guiL[zxc] = "Буря клинков #enemies" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Déluge de lames #enemies" elseif GetLocale() == "deDE" then guiL[zxc] = "Klingensturm #enemies" end
    ; zxc = "Chains of Ice auto"
    if GetLocale() == "zhCN" then guiL[zxc] = "自动冰锁链" elseif GetLocale() == "koKR" then guiL[zxc] = "얼음 사슬 자동" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cadenas de hielo auto" elseif GetLocale() == "ruRU" then guiL[zxc] = "Цепи льда авто" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Chaînes de glace auto" elseif GetLocale() == "deDE" then guiL[zxc] = "Eisketten auto" end
    ; zxc = "AMS hp%"
    if GetLocale() == "zhCN" then guiL[zxc] = "AMS 血量%" elseif GetLocale() == "koKR" then guiL[zxc] = "AMS HP %" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AMS hp%" elseif GetLocale() == "ruRU" then guiL[zxc] = "AMS hp%" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AMS hp%" elseif GetLocale() == "deDE" then guiL[zxc] = "AMS hp%" end
    ; zxc = "AMS incoming CC"
    if GetLocale() == "zhCN" then guiL[zxc] = "AMS 即将控制" elseif GetLocale() == "koKR" then guiL[zxc] = "AMS CC" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "AMS CC" elseif GetLocale() == "ruRU" then guiL[zxc] = "AMS CC" elseif GetLocale() == "frFR" then guiL[zxc] =
        "AMS CC" elseif GetLocale() == "deDE" then guiL[zxc] = "AMS CC" end
    ; zxc = "Frost Presence when #melee on you"
    if GetLocale() == "zhCN" then guiL[zxc] = "当你身边有#近战时使用冰霜姿态" elseif GetLocale() == "koKR" then guiL[zxc] =
        "근접 # 적" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Presencia de Escarcha cuando #melee on you" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Присутствие льда при #melee on you" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Présence de givre quand #melee on you" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Frostpräsenz, wenn #Nahkampf auf dich trifft" end
    ; zxc = "Blood Presence @hp"
    if GetLocale() == "zhCN" then guiL[zxc] = "血之姿态 @血量" elseif GetLocale() == "koKR" then guiL[zxc] =
        "피의 형상 @hp" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Presencia de sangre @hp" elseif GetLocale() == "ruRU" then guiL[zxc] = "Присутствие крови @hp" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Présence de sang @hp" elseif GetLocale() == "deDE" then guiL[zxc] = "Blood Presence @hp" end
    ; zxc = "In PvE this will count all enemys on you, in PvP, this will count only melee players on you."
    if GetLocale() == "zhCN" then guiL[zxc] = "在PvE中，这将计算你身上的所有敌人，在PvP中，这将计算你身上的所有近战玩家。" elseif GetLocale() == "koKR" then guiL[zxc] =
        "PvE에서는 당신에게 모든 적을 계산하고, PvP에서는 근접 플레이어만 계산합니다." elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "En PvE esto contará todos los enemigos en usted, en PvP, esto contará solo jugadores de cuerpo a cuerpo en usted." elseif GetLocale() == "ruRU" then guiL[zxc] =
        "В PvE это будет считать всех врагов на вас, в PvP, это будет считать только ближних игроков на вас." elseif GetLocale() == "frFR" then guiL[zxc] =
        "En PvE, cela comptera tous les ennemis sur vous, en PvP, cela comptera uniquement les joueurs de mêlée sur vous." elseif GetLocale() == "deDE" then guiL[zxc] =
        "Im PvE zählt dies alle Feinde zu dir, im PvP zählt dies nur Nahkämpfer zu dir." end
    ; zxc = "Wrath of air"
    if GetLocale() == "zhCN" then guiL[zxc] = "大地之怒" elseif GetLocale() == "koKR" then guiL[zxc] = "대지의 격노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wrath of air" elseif GetLocale() == "ruRU" then guiL[zxc] = "Wrath of air" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wrath of air" elseif GetLocale() == "deDE" then guiL[zxc] = "Wrath of air" end
    ; zxc = "Grounding Totem to kick"
    if GetLocale() == "zhCN" then guiL[zxc] = "地缚图腾踢" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Grounding Totem to kick" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Grounding Totem to kick" elseif GetLocale() == "ruRU" then guiL[zxc] = "Grounding Totem to kick" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Grounding Totem to kick" elseif GetLocale() == "deDE" then guiL[zxc] = "Grounding Totem to kick" end
    ; zxc = "Cleansing Totem"
    if GetLocale() == "zhCN" then guiL[zxc] = "净化图腾" elseif GetLocale() == "koKR" then guiL[zxc] = "정화의 토템" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Cleansing Totem" elseif GetLocale() == "ruRU" then guiL[zxc] = "Cleansing Totem" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Cleansing Totem" elseif GetLocale() == "deDE" then guiL[zxc] = "Cleansing Totem" end
    ; zxc = "Earthliving Weapon"
    if GetLocale() == "zhCN" then guiL[zxc] = "大地之怒武器" elseif GetLocale() == "koKR" then guiL[zxc] =
        "대지의 정령 무기" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Earthliving Weapon" elseif GetLocale() == "ruRU" then guiL[zxc] = "Earthliving Weapon" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Earthliving Weapon" elseif GetLocale() == "deDE" then guiL[zxc] = "Earthliving Weapon" end
    ; zxc = "Tremor totem occasional use"
    if GetLocale() == "zhCN" then guiL[zxc] = "战栗图腾偶尔使用" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Tremor totem occasional use" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Tremor totem occasional use" elseif GetLocale() == "ruRU" then guiL[zxc] = "Tremor totem occasional use" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Tremor totem occasional use" elseif GetLocale() == "deDE" then guiL[zxc] = "Tremor totem occasional use" end
    ; zxc = "Ghost Wolf"
    if GetLocale() == "zhCN" then guiL[zxc] = "幽魂之狼" elseif GetLocale() == "koKR" then guiL[zxc] = "늑대 정령" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Ghost Wolf" elseif GetLocale() == "ruRU" then guiL[zxc] = "Ghost Wolf" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Ghost Wolf" elseif GetLocale() == "deDE" then guiL[zxc] = "Ghost Wolf" end
    ; zxc = "Feral Spirit"
    if GetLocale() == "zhCN" then guiL[zxc] = "野性之魂" elseif GetLocale() == "koKR" then guiL[zxc] = "야생의 정령" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Feral Spirit" elseif GetLocale() == "ruRU" then guiL[zxc] = "Feral Spirit" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Feral Spirit" elseif GetLocale() == "deDE" then guiL[zxc] = "Feral Spirit" end
    ; zxc = "Heroism/Bloodlust"
    if GetLocale() == "zhCN" then guiL[zxc] = "英勇/嗜血" elseif GetLocale() == "koKR" then guiL[zxc] = "영웅심/피의 욕망" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Heroism/Bloodlust" elseif GetLocale() == "ruRU" then guiL[zxc] = "Heroism/Bloodlust" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Heroism/Bloodlust" elseif GetLocale() == "deDE" then guiL[zxc] = "Heroism/Bloodlust" end
    ; zxc = "Shamanistic Rage"
    if GetLocale() == "zhCN" then guiL[zxc] = "萨满之怒" elseif GetLocale() == "koKR" then guiL[zxc] = "주술의 분노" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Shamanistic Rage" elseif GetLocale() == "ruRU" then guiL[zxc] = "Shamanistic Rage" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Shamanistic Rage" elseif GetLocale() == "deDE" then guiL[zxc] = "Shamanistic Rage" end
    ; zxc = "Earthbind totem to slow"
    if GetLocale() == "zhCN" then guiL[zxc] = "地缚图腾减速" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Earthbind totem to slow" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Earthbind totem to slow" elseif GetLocale() == "ruRU" then guiL[zxc] = "Earthbind totem to slow" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Earthbind totem to slow" elseif GetLocale() == "deDE" then guiL[zxc] = "Earthbind totem to slow" end
    ; zxc = "Fill with purge"
    if GetLocale() == "zhCN" then guiL[zxc] = "填充净化" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Fill with purge" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Fill with purge" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Fill with purge" elseif GetLocale() == "frFR" then guiL[zxc] = "Fill with purge" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Fill with purge" end
    ; zxc = "Flametogue"
    if GetLocale() == "zhCN" then guiL[zxc] = "火焰烈焰" elseif GetLocale() == "koKR" then guiL[zxc] = "Flametogue" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Flametogue" elseif GetLocale() == "ruRU" then guiL[zxc] = "Flametogue" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Flametogue" elseif GetLocale() == "deDE" then guiL[zxc] = "Flametogue" end
    ; zxc = "Arcane Barrage"
    if GetLocale() == "zhCN" then guiL[zxc] = "奥术弹幕" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Arcane Barrage" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] = "Arcane Barrage" elseif GetLocale() == "ruRU" then guiL[zxc] =
        "Arcane Barrage" elseif GetLocale() == "frFR" then guiL[zxc] = "Arcane Barrage" elseif GetLocale() == "deDE" then guiL[zxc] =
        "Arcane Barrage" end
    ; zxc = "Scorch fill"
    if GetLocale() == "zhCN" then guiL[zxc] = "灼烧填充" elseif GetLocale() == "koKR" then guiL[zxc] = "Scorch fill" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Scorch fill" elseif GetLocale() == "ruRU" then guiL[zxc] = "Scorch fill" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Scorch fill" elseif GetLocale() == "deDE" then guiL[zxc] = "Scorch fill" end
    ; zxc = "Aspect of the Dragonhawk"
    if GetLocale() == "zhCN" then guiL[zxc] = "龙鹰守护" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Aspect of the Dragonhawk" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Aspect of the Dragonhawk" elseif GetLocale() == "ruRU" then guiL[zxc] = "Aspect of the Dragonhawk" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Aspect of the Dragonhawk" elseif GetLocale() == "deDE" then guiL[zxc] = "Aspect of the Dragonhawk" end
    ; zxc = "Disengage"
    if GetLocale() == "zhCN" then guiL[zxc] = "逃脱" elseif GetLocale() == "koKR" then guiL[zxc] = "Disengage" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Disengage" elseif GetLocale() == "ruRU" then guiL[zxc] = "Disengage" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Disengage" elseif GetLocale() == "deDE" then guiL[zxc] = "Disengage" end
    ; zxc = "Steady Shot"
    if GetLocale() == "zhCN" then guiL[zxc] = "稳固射击" elseif GetLocale() == "koKR" then guiL[zxc] = "Steady Shot" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Steady Shot" elseif GetLocale() == "ruRU" then guiL[zxc] = "Steady Shot" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Steady Shot" elseif GetLocale() == "deDE" then guiL[zxc] = "Steady Shot" end
    ; zxc = "Wintergrasp Battlemaster:"
    if GetLocale() == "zhCN" then guiL[zxc] = "冬拥湖战场军官:" elseif GetLocale() == "koKR" then guiL[zxc] =
        "Wintergrasp Battlemaster:" elseif GetLocale() == "esMX" or GetLocale() == "esES" then guiL[zxc] =
        "Wintergrasp Battlemaster:" elseif GetLocale() == "ruRU" then guiL[zxc] = "Wintergrasp Battlemaster:" elseif GetLocale() == "frFR" then guiL[zxc] =
        "Wintergrasp Battlemaster:" elseif GetLocale() == "deDE" then guiL[zxc] = "Wintergrasp Battlemaster:" end
    ; function _t(string) if not dontTranslateUI then if guiL and guiL[string] then return guiL[string] else return
                string end else return string end end
end
; local function b(...)
    local c, d = "LibStub", 2; local LibStub = _G[c]
    if not LibStub or LibStub.minor < d then
        LibStub = LibStub or { libs = {}, minors = {} }
        _G[c] = LibStub; LibStub.minor = d; function LibStub:NewLibrary(e, f)
            assert(type(e) == "string", "Bad argument #2 to `NewLibrary' (string expected)")
            f = assert(tonumber(strmatch(f, "%d+")), "Minor version must either be a number or contain a number.")
            local g = self.minors[e]
            if g and g >= f then return nil end
            ; self.minors[e], self.libs[e] = f, self.libs[e] or {}
            return self.libs[e], g
        end

        ; function LibStub:GetLibrary(e, h)
            if not self.libs[e] and not h then error(("Cannot find a library instance of %q."):format(tostring(e)), 2) end
            ; return self.libs[e], self.minors[e]
        end

        ; function LibStub:IterateLibraries() return pairs(self.libs) end

        ; setmetatable(LibStub, { __call = LibStub.GetLibrary })
    end
end
; local function i(...)
    local j, k = "AceGUI-3.0", 41; local l, g = LibStub:NewLibrary(j, k)
    if not l then return end
    ; local m, n = table.insert, table.wipe; local select, pairs, next, type = select, pairs, next, type; local error, assert =
    error, assert; local setmetatable, rawget = setmetatable, rawget; local o = math.max; local UIParent = UIParent; l.WidgetRegistry =
    l.WidgetRegistry or {}
    l.LayoutRegistry = l.LayoutRegistry or {}
    l.WidgetBase = l.WidgetBase or {}
    l.WidgetContainerBase = l.WidgetContainerBase or {}
    l.WidgetVersions = l.WidgetVersions or {}
    l.tooltip = l.tooltip or CreateFrame("GameTooltip", "AceGUITooltip", UIParent, "GameTooltipTemplate")
    local p = l.WidgetRegistry; local q = l.LayoutRegistry; local r = l.WidgetVersions; local xpcall = xpcall; local function s(
        t) return geterrorhandler()(t) end
    ; local function u(v, ...) if v then return xpcall(v, s, ...) end end
    ; local w, x; do
        if g and g < 29 and l.objPools then l.objPools = nil end
        ; l.objPools = l.objPools or {}
        local y = l.objPools; function w(type)
            if not p[type] then error("Attempt to instantiate unknown widget type", 2) end
            ; if not y[type] then y[type] = {} end
            ; local z = next(y[type])
            if not z then
                z = p[type]()
                z.AceGUIWidgetVersion = r[type]
            else
                y[type][z] = nil; if not z.AceGUIWidgetVersion or z.AceGUIWidgetVersion < r[type] then return w(type) end
            end
            ; return z
        end

        ; function x(A, type)
            if not y[type] then y[type] = {} end
            ; if y[type][A] then error("Attempt to Release Widget that is already released", 2) end
            ; y[type][A] = true
        end
    end
    ; function l:Create(type) if p[type] then
            local B = w(type)
            if rawget(B, "Acquire") then
                B.OnAcquire = B.Acquire; B.Acquire = nil
            elseif rawget(B, "Aquire") then
                B.OnAcquire = B.Aquire; B.Aquire = nil
            end
            ; if rawget(B, "Release") then
                B.OnRelease = rawget(B, "Release")
                B.Release = nil
            end
            ; if B.OnAcquire then B:OnAcquire() else error(("Widget type %s doesn't supply an OnAcquire Function")
                :format(type)) end
            ; u(B.SetLayout, B, "List")
            u(B.ResumeLayout, B)
            return B
        end end

    ; function l:Release(B)
        if B.isQueuedForRelease then return end
        ; B.isQueuedForRelease = true; u(B.PauseLayout, B)
        B.frame:Hide()
        B:Fire("OnRelease")
        u(B.ReleaseChildren, B)
        if B.OnRelease then B:OnRelease() end
        ; for C in pairs(B.userdata) do B.userdata[C] = nil end
        ; for C in pairs(B.events) do B.events[C] = nil end
        ; B.width = nil; B.relWidth = nil; B.height = nil; B.relHeight = nil; B.noAutoHeight = nil; B.frame
            :ClearAllPoints()
        B.frame:Hide()
        B.frame:SetParent(UIParent)
        B.frame.width = nil; B.frame.height = nil; if B.content then
            B.content.width = nil; B.content.height = nil
        end
        ; B.isQueuedForRelease = nil; x(B, B.type)
    end

    ; function l:IsReleasing(B)
        if B.isQueuedForRelease then return true end
        ; if B.parent and B.parent.AceGUIWidgetVersion then return l:IsReleasing(B.parent) end
        ; return false
    end

    ; function l:SetFocus(B)
        if self.FocusedWidget and self.FocusedWidget ~= B then u(self.FocusedWidget.ClearFocus, self.FocusedWidget) end
        ; self.FocusedWidget = B
    end

    ; function l:ClearFocus() if self.FocusedWidget then
            u(self.FocusedWidget.ClearFocus, self.FocusedWidget)
            self.FocusedWidget = nil
        end end

    ; do
        local D = l.WidgetBase; D.SetParent = function(self, E)
            local F = self.frame; F:SetParent(nil)
            F:SetParent(E.content)
            self.parent = E
        end; D.SetCallback = function(self, G, v) if type(v) == "function" then self.events[G] = v end end; D.Fire = function(
            self, G, ...) if self.events[G] then
                local H, I = u(self.events[G], self, G, ...)
                if H then return I end
            end end; D.SetWidth = function(self, J)
            self.frame:SetWidth(J)
            self.frame.width = J; if self.OnWidthSet then self:OnWidthSet(J) end
        end; D.SetRelativeWidth = function(self, J)
            if J <= 0 or J > 1 then error(":SetRelativeWidth(width): Invalid relative width.", 2) end
            ; self.relWidth = J; self.width = "relative"
        end; D.SetHeight = function(self, K)
            self.frame:SetHeight(K)
            self.frame.height = K; if self.OnHeightSet then self:OnHeightSet(K) end
        end; D.IsVisible = function(self) return self.frame:IsVisible() end; D.IsShown = function(self) return self
            .frame:IsShown() end; D.Release = function(self) l:Release(self) end; D.IsReleasing = function(self) return l
            :IsReleasing(self) end; D.SetPoint = function(self, ...) return self.frame:SetPoint(...) end; D.ClearAllPoints = function(
            self) return self.frame:ClearAllPoints() end; D.GetNumPoints = function(self) return self.frame:GetNumPoints() end; D.GetPoint = function(
            self, ...) return self.frame:GetPoint(...) end; D.GetUserDataTable = function(self) return self.userdata end; D.SetUserData = function(
            self, L, M) self.userdata[L] = M end; D.GetUserData = function(self, L) return self.userdata[L] end; D.IsFullHeight = function(
            self) return self.height == "fill" end; D.SetFullHeight = function(self, N) if N then self.height = "fill" else self.height = nil end end; D.IsFullWidth = function(
            self) return self.width == "fill" end; D.SetFullWidth = function(self, N) if N then self.width = "fill" else self.width = nil end end; local O =
        l.WidgetContainerBase; O.PauseLayout = function(self) self.LayoutPaused = true end; O.ResumeLayout = function(
            self) self.LayoutPaused = nil end; O.PerformLayout = function(self)
            if self.LayoutPaused then return end
            ; u(self.LayoutFunc, self.content, self.children)
        end; O.DoLayout = function(self) self:PerformLayout() end; O.AddChild = function(self, P, Q)
            if Q then
                local R = 1; for S, B in pairs(self.children) do
                    if B == Q then break end
                    ; R = R + 1
                end
                ; m(self.children, R, P)
            else m(self.children, P) end
            ; P:SetParent(self)
            P.frame:Show()
            self:DoLayout()
        end; O.AddChildren = function(self, ...)
            for T = 1, select("#", ...) do
                local P = select(T, ...)
                m(self.children, P)
                P:SetParent(self)
                P.frame:Show()
            end
            ; self:DoLayout()
        end; O.ReleaseChildren = function(self)
            local U = self.children; for T = 1, #U do
                l:Release(U[T])
                U[T] = nil
            end
        end; O.SetLayout = function(self, V) self.LayoutFunc = l:GetLayout(V) end; O.SetAutoAdjustHeight = function(self,
                                                                                                                    W) if W then self.noAutoHeight = nil else self.noAutoHeight = true end end; local function X(
            Y)
            local self = Y.obj; if Y:GetWidth() and Y:GetHeight() then
                if self.OnWidthSet then self:OnWidthSet(Y:GetWidth()) end
                ; if self.OnHeightSet then self:OnHeightSet(Y:GetHeight()) end
            end
        end
        ; local function Z(Y) if Y:GetWidth() and Y:GetHeight() then
                Y.width = Y:GetWidth()
                Y.height = Y:GetHeight()
                Y.obj:DoLayout()
            end end
        ; setmetatable(O, { __index = D })
        function l:RegisterAsContainer(B)
            B.children = {}
            B.userdata = {}
            B.events = {}
            B.base = O; B.content.obj = B; B.frame.obj = B; B.content:SetScript("OnSizeChanged", Z)
            B.frame:SetScript("OnSizeChanged", X)
            setmetatable(B, { __index = O })
            B:SetLayout("List")
            return B
        end

        ; function l:RegisterAsWidget(B)
            B.userdata = {}
            B.events = {}
            B.base = D; B.frame.obj = B; B.frame:SetScript("OnSizeChanged", X)
            setmetatable(B, { __index = D })
            return B
        end
    end
    ; function l:RegisterWidgetType(_, a0, a1)
        assert(type(a0) == "function")
        assert(type(a1) == "number")
        local a2 = r[_]
        if a2 and a2 >= a1 then return end
        ; r[_] = a1; p[_] = a0
    end

    ; function l:RegisterLayout(_, a3)
        assert(type(a3) == "function")
        if type(_) == "string" then _ = _:upper() end
        ; q[_] = a3
    end

    ; function l:GetLayout(_)
        if type(_) == "string" then _ = _:upper() end
        ; return q[_]
    end

    ; l.counts = l.counts or {}
    function l:GetNextWidgetNum(type)
        if not self.counts[type] then self.counts[type] = 0 end
        ; self.counts[type] = self.counts[type] + 1; return self.counts[type]
    end

    ; function l:GetWidgetCount(type) return self.counts[type] or 0 end

    ; function l:GetWidgetVersion(type) return r[type] end

    ; l:RegisterLayout("List",
        function(a4, U)
            local K = 0; local J = a4.width or a4:GetWidth() or 0; for T = 1, #U do
                local P = U[T]
                local F = P.frame; F:ClearAllPoints()
                F:Show()
                if T == 1 then F:SetPoint("TOPLEFT", a4) else F:SetPoint("TOPLEFT", U[T - 1].frame, "BOTTOMLEFT") end
                ; if P.width == "fill" then
                    P:SetWidth(J)
                    F:SetPoint("RIGHT", a4)
                    if P.DoLayout then P:DoLayout() end
                elseif P.width == "relative" then
                    P:SetWidth(J * P.relWidth)
                    if P.DoLayout then P:DoLayout() end
                end
                ; K = K + (F.height or F:GetHeight() or 0)
            end
            ; u(a4.obj.LayoutFinished, a4.obj, nil, K)
        end)
    l:RegisterLayout("Fill",
        function(a4, U) if U[1] then
                U[1]:SetWidth(a4:GetWidth() or 0)
                U[1]:SetHeight(a4:GetHeight() or 0)
                U[1].frame:ClearAllPoints()
                U[1].frame:SetAllPoints(a4)
                U[1].frame:Show()
                u(a4.obj.LayoutFinished, a4.obj, nil, U[1].frame:GetHeight())
            end end)
    local a5 = nil; local function a6(a7, v, ...)
        a5 = true; a7[v](a7, ...)
        a5 = nil
    end
    ; l:RegisterLayout("Flow",
        function(a4, U)
            if a5 then return end
            ; local K = 0; local a8 = 0; local a9 = 0; local aa = 0; local J = a4.width or a4:GetWidth() or 0; local ab; local ac; local ad; local ae; local af; local ag; for T = 1, #U do
                local P = U[T]
                ag = nil; local F = P.frame; local ah = F.height or F:GetHeight() or 0; local ai = F.width or
                F:GetWidth() or 0; af = ae; ae = P.alignoffset or ah / 2; if P.width == "relative" then ai = J *
                    P.relWidth end
                ; F:Show()
                F:ClearAllPoints()
                if T == 1 then
                    F:SetPoint("TOPLEFT", a4)
                    a9 = ah; aa = ae; ab = F; ac = ae; a8 = ai; if a8 > J then ag = true end
                else if a8 == 0 or ai + a8 > J or P.width == "fill" then
                        if ad then break end
                        ; ab:SetPoint("TOPLEFT", a4, "TOPLEFT", 0, -(K + aa - ac + 3))
                        K = K + a9 + 3; ab = F; ac = ae; a9 = ah; aa = ae; a8 = ai; if a8 > J then ag = true end
                    else
                        aa = o(aa, ae)
                        a9 = o(a9, aa + ah / 2)
                        F:SetPoint("TOPLEFT", U[T - 1].frame, "TOPRIGHT", 0, ae - af)
                        a8 = ai + a8
                    end end
                ; if P.width == "fill" then
                    a6(P, "SetWidth", J)
                    F:SetPoint("RIGHT", a4)
                    a8 = 0; ab = F; ac = ae; if P.DoLayout then P:DoLayout() end
                    ; a9 = F.height or F:GetHeight() or 0; aa = P.alignoffset or a9 / 2; ac = aa
                elseif P.width == "relative" then
                    a6(P, "SetWidth", J * P.relWidth)
                    if P.DoLayout then P:DoLayout() end
                elseif ag then if J > 1 then F:SetPoint("RIGHT", a4) end end
                ; if P.height == "fill" then
                    F:SetPoint("BOTTOM", a4)
                    ad = true
                end
            end
            ; if ad then ab:SetPoint("TOPLEFT", a4, "TOPLEFT", 0, -K) elseif ab then ab:SetPoint("TOPLEFT", a4, "TOPLEFT",
                    0, -(K + aa - ac + 3)) end
            ; K = K + a9 + 3; u(a4.obj.LayoutFinished, a4.obj, nil, K)
        end)
    local aj = function(ak, al, am, an, ao, P)
        local ap = an and (an["align" .. ak] or an.align) or am and (am["align" .. ak] or am.align) or al["align" .. ak] or
        al.align or "CENTERLEFT"
        local P, ao, aq = P or 0, ao or 0, nil; if type(ap) == "string" then
            ap = ap:lower()
            ap = ak == "V" and
            (ap:sub(1, 3) == "top" and "start" or ap:sub(1, 6) == "bottom" and "end" or ap:sub(1, 6) == "center" and "middle") or
            ak == "H" and (ap:sub(-4) == "left" and "start" or ap:sub(-5) == "right" and "end" or ap:sub(-6) == "center" and "middle") or
            ap; aq = (ap == "start" or ap == "fill") and 0 or ap == "end" and ao - P or (ao - P) / 2
        elseif type(ap) == "function" then aq = ap(P or 0, ao, ak) else aq = ap end
        ; return ap, max(0, min(aq, ao))
    end; local ar = function(ak, as, at, au, av)
        local aw = 0; for ao = at, au do aw = aw + (as[ao] or 0) end
        ; return aw + max(0, au - at) * (av or 0)
    end; l:RegisterLayout("Table",
        function(a4, U)
            local A = a4.obj; A:PauseLayout()
            local al = A:GetUserData("table")
            local ax = al.columns; local ay = al.spaceH or al.space or 0; local az = al.spaceV or al.space or 0; local aA = (a4:GetWidth() or a4.width or 0) -
            ay * (#ax - 1)
            local aB = A:GetUserData("layoutCache")
            if not aB then
                aB = { {}, {}, {}, {}, {}, {} }
                A:SetUserData("layoutCache", aB)
            end
            ; local aC, aD, aE, aF, aG, aH = unpack(aB)
            local aI, aJ = 0; for T, P in ipairs(U) do if P:IsShown() then repeat
                        aI = aI + 1; local aK = (aI - 1) % #ax + 1; local aL = ceil(aI / #ax)
                        local aM = aF[aK]
                        local ao = aM and aM.child or P; local an = ao:GetUserData("cell")
                        aJ = not aM; if not aM and an and an.rowspan then
                            aM = { child = P, from = aL, to = aL + an.rowspan - 1 }
                            aF[aK] = aM
                        end
                        ; if aM and T == #U then aM.to = aL end
                        ; local aN = max(0, min((an and an.colspan or 1) - 1, #ax - aK))
                        aI = aI + aN; if not aM or aM.to == aL then
                            aC[aI] = ao; aG[ao] = aM and aM.from or aL; aH[ao] = aK; if aM then aF[aK] = nil end
                        end
                    until aJ end end
            ; local aO = ceil(aI / #ax)
            local aP, aQ = aA, 0; for aK, am in ipairs(ax) do
                aD[aK] = 0; if type(am) == "number" then
                    am = { [am >= 1 and am < 10 and "weight" or "width"] = am }
                    ax[aK] = am
                end
                ; if am.weight then aQ = aQ + (am.weight or 1) else
                    if not am.width or am.width <= 0 then
                        for aL = 1, aO do
                            local P = aC[(aL - 1) * #ax + aK]
                            if P then
                                local aR = P.frame; aR:ClearAllPoints()
                                local aS = aR:GetWidth() or 0; aD[aK] = max(aD[aK], aS - ar("H", aD, aH[P], aK - 1, ay))
                            end
                        end
                        ; aD[aK] = max(am.min or am[1] or 0, min(aD[aK], am.max or am[2] or aD[aK]))
                    else aD[aK] = am.width < 1 and am.width * aA or am.width end
                    ; aP = max(0, aP - aD[aK])
                end
            end
            ; local aT = aQ > 0 and aP / aQ or 0; for aK, am in pairs(ax) do if am.weight then aD[aK] = aT * am.weight end end
            ; for aL = 1, aO do
                local aU = 0; for aK = 1, #ax do
                    local P = aC[(aL - 1) * #ax + aK]
                    if P then
                        local am = ax[aH[P]]
                        local an = P:GetUserData("cell")
                        local aV = ar("H", aD, 1, aH[P] - 1, ay) + (aH[P] == 1 and 0 or ay)
                        local aW = ar("H", aD, aH[P], aK, ay)
                        local aR = P.frame; aR:ClearAllPoints()
                        local aS = aR:GetWidth() or 0; local aX, aY = aj("H", al, am, an, aW, aS)
                        aR:SetPoint("LEFT", a4, aV + aY, 0)
                        if P:IsFullWidth() or aX == "fill" or aS > aW then aR:SetPoint("RIGHT", a4, "LEFT", aV + aY + aW,
                                0) end
                        ; if P.DoLayout then P:DoLayout() end
                        ; aU = max(aU, (aR:GetHeight() or 0) - ar("V", aE, aG[P], aL - 1, az))
                    end
                end
                ; aE[aL] = aU; for aK = 1, #ax do
                    local P = aC[(aL - 1) * #ax + aK]
                    if P then
                        local am = ax[aH[P]]
                        local an = P:GetUserData("cell")
                        local aZ = ar("V", aE, 1, aG[P] - 1, az) + (aG[P] == 1 and 0 or az)
                        local a_ = ar("V", aE, aG[P], aL, az)
                        local aR = P.frame; local b0 = aR:GetHeight() or 0; local aX, aY = aj("V", al, am, an, a_, b0)
                        if P:IsFullHeight() or aX == "fill" then aR:SetHeight(a_) end
                        ; aR:SetPoint("TOP", a4, 0, -(aZ + aY))
                    end
                end
            end
            ; local b1 = ar("V", aE, 1, #aE, az)
            for S, b2 in pairs(aB) do n(b2) end
            ; u(A.LayoutFinished, A, nil, b1)
            A:ResumeLayout()
        end)
end
; local function b3(...)
    local b4, a1 = "BlizOptionsGroup", 22; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local CreateFrame = CreateFrame; local function b5(F) F.obj:Fire("OnShow") end
    ; local function b6(F) F.obj:Fire("OnHide") end
    ; local function b7(F) F.obj:Fire("okay") end
    ; local function b8(F) F.obj:Fire("cancel") end
    ; local function b9(F) F.obj:Fire("default") end
    ; local function ba(F) F.obj:Fire("refresh") end
    ; local bb = { ["OnAcquire"] = function(self)
        self:SetName()
        self:SetTitle()
    end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local bc = J - 63; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - 26; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end, ["SetName"] = function(self, G, E)
        self.frame.name = G; self.frame.parent = E
    end,
        ["SetTitle"] = function(self, be)
            local a4 = self.content; a4:ClearAllPoints()
            if not be or be == "" then
                a4:SetPoint("TOPLEFT", 10, -10)
                self.label:SetText("")
            else
                a4:SetPoint("TOPLEFT", 10, -40)
                self.label:SetText(be)
            end
            ; a4:SetPoint("BOTTOMRIGHT", -10, 10)
        end }
    local function a0()
        local F = CreateFrame("Frame", nil, InterfaceOptionsFramePanelContainer)
        F:Hide()
        F.okay = b7; F.cancel = b8; F.default = b9; F.refresh = ba; F:SetScript("OnHide", b6)
        F:SetScript("OnShow", b5)
        local bf = F:CreateFontString(nil, "OVERLAY", "GameFontNormalLarge")
        bf:SetPoint("TOPLEFT", 10, -15)
        bf:SetPoint("BOTTOMRIGHT", F, "TOPRIGHT", 10, -45)
        bf:SetJustifyH("LEFT")
        bf:SetJustifyV("TOP")
        local a4 = CreateFrame("Frame", nil, F)
        a4:SetPoint("TOPLEFT", 10, -10)
        a4:SetPoint("BOTTOMRIGHT", -10, 10)
        local B = { label = bf, frame = F, content = a4, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function bh(...)
    local b4, a1 = "DropdownGroup", 22; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local assert, pairs, type = assert, pairs, type; local CreateFrame = CreateFrame; local function bi(self, bj, M)
        local bk = self.parentgroup; local bl = bk.status or bk.localstatus; bl.selected = M; self.parentgroup:Fire(
        "OnGroupSelected", M)
    end
    ; local bb = { ["OnAcquire"] = function(self)
        self.dropdown:SetText("")
        self:SetDropdownWidth(200)
        self:SetTitle("")
    end,
        ["OnRelease"] = function(self)
            self.dropdown.list = nil; self.status = nil; for C in pairs(self.localstatus) do self.localstatus[C] = nil end
        end,
        ["SetTitle"] = function(self, be)
            self.titletext:SetText(be)
            self.dropdown.frame:ClearAllPoints()
            if be and be ~= "" then self.dropdown.frame:SetPoint("TOPRIGHT", -2, 0) else self.dropdown.frame:SetPoint(
                "TOPLEFT", -1, 0) end
        end, ["SetGroupList"] = function(self, bm, bn) self.dropdown:SetList(bm, bn) end,
        ["SetStatusTable"] = function(self, bl)
            assert(type(bl) == "table")
            self.status = bl
        end,
        ["SetGroup"] = function(self, bk)
            self.dropdown:SetValue(bk)
            local bl = self.status or self.localstatus; bl.selected = bk; self:Fire("OnGroupSelected", bk)
        end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local bc = J - 26; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - 63; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end, ["LayoutFinished"] = function(self, J, K) self:SetHeight((K or 0) + 63) end,
        ["SetDropdownWidth"] = function(self, J) self.dropdown:SetWidth(J) end }
    local bo = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground", edgeFile =
    "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 5, bottom = 3 } }
    local function a0()
        local F = CreateFrame("Frame")
        F:SetHeight(100)
        F:SetWidth(100)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        local bp = F:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bp:SetPoint("TOPLEFT", 4, -5)
        bp:SetPoint("TOPRIGHT", -4, -5)
        bp:SetJustifyH("LEFT")
        bp:SetHeight(18)
        local bq = l:Create("Dropdown")
        bq.frame:SetParent(F)
        bq.frame:SetFrameLevel(bq.frame:GetFrameLevel() + 2)
        bq:SetCallback("OnValueChanged", bi)
        bq.frame:SetPoint("TOPLEFT", -1, 0)
        bq.frame:Show()
        bq:SetLabel("")
        local br = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        br:SetPoint("TOPLEFT", 0, -26)
        br:SetPoint("BOTTOMRIGHT", 0, 3)
        br:SetBackdrop(bo)
        br:SetBackdropColor(0.1, 0.1, 0.1, 0.5)
        br:SetBackdropBorderColor(0.4, 0.4, 0.4)
        local a4 = CreateFrame("Frame", nil, br)
        a4:SetPoint("TOPLEFT", 10, -10)
        a4:SetPoint("BOTTOMRIGHT", -10, 10)
        local B = { frame = F, localstatus = {}, titletext = bp, dropdown = bq, border = br, content = a4, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; bq.parentgroup = B; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function bs(...)
    local b4, a1 = "Frame", 28; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs, assert, type = pairs, assert, type; local n = table.wipe; local PlaySound = PlaySound; local CreateFrame, UIParent =
    CreateFrame, UIParent; local function bt(F)
        PlaySound(799)
        F.obj:Hide()
    end
    ; local function bu(F) F.obj:Fire("OnShow") end
    ; local function bv(F) F.obj:Fire("OnClose") end
    ; local function bw(F) l:ClearFocus() end
    ; local function bx(F)
        F:GetParent():StartMoving()
        l:ClearFocus()
    end
    ; local function by(bz)
        local F = bz:GetParent()
        F:StopMovingOrSizing()
        local self = F.obj; local bl = self.status or self.localstatus; bl.width = F:GetWidth()
        bl.height = F:GetHeight()
        bl.top = F:GetTop()
        bl.left = F:GetLeft()
    end
    ; local function bA(F)
        F:GetParent():StartSizing("BOTTOMRIGHT")
        l:ClearFocus()
    end
    ; local function bB(F)
        F:GetParent():StartSizing("BOTTOM")
        l:ClearFocus()
    end
    ; local function bC(F)
        F:GetParent():StartSizing("RIGHT")
        l:ClearFocus()
    end
    ; local function bD(F) F.obj:Fire("OnEnterStatusBar") end
    ; local function bE(F) F.obj:Fire("OnLeaveStatusBar") end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self.frame:SetParent(UIParent)
            self.frame:SetFrameStrata("FULLSCREEN_DIALOG")
            self.frame:SetFrameLevel(100)
            self:SetTitle()
            self:SetStatusText()
            self:ApplyStatus()
            self:Show()
            self:EnableResize(true)
        end, ["OnRelease"] = function(self)
        self.status = nil; n(self.localstatus)
    end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local bc = J - 34; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - 57; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end,
        ["SetTitle"] = function(self, be)
            self.titletext:SetText(be)
            self.titlebg:SetWidth((self.titletext:GetWidth() or 0) + 10)
        end, ["SetStatusText"] = function(self, bF) self.statustext:SetText(bF) end,
        ["Hide"] = function(self) self.frame:Hide() end, ["Show"] = function(self) self.frame:Show() end,
        ["EnableResize"] = function(self, bG)
            local v = bG and "Show" or "Hide"
            self.sizer_se[v](self.sizer_se)
            self.sizer_s[v](self.sizer_s)
            self.sizer_e[v](self.sizer_e)
        end, ["SetStatusTable"] = function(self, bl)
        assert(type(bl) == "table")
        self.status = bl; self:ApplyStatus()
    end,
        ["ApplyStatus"] = function(self)
            local bl = self.status or self.localstatus; local F = self.frame; self:SetWidth(bl.width or 700)
            self:SetHeight(bl.height or 500)
            F:ClearAllPoints()
            if bl.top and bl.left then
                F:SetPoint("TOP", UIParent, "BOTTOM", 0, bl.top)
                F:SetPoint("LEFT", UIParent, "LEFT", bl.left, 0)
            else F:SetPoint("CENTER") end
        end }
    local bH = { bgFile = "Interface\\DialogFrame\\UI-DialogBox-Background",
        edgeFile = "Interface\\DialogFrame\\UI-DialogBox-Border", tile = true, tileSize = 32, edgeSize = 32,
        insets = { left = 8, right = 8, top = 8, bottom = 8 } }
    local bo = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground", edgeFile =
    "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 5, bottom = 3 } }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent, BackdropTemplateMixin and "BackdropTemplate" or nil)
        F:Hide()
        F:EnableMouse(true)
        F:SetMovable(true)
        F:SetResizable(true)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        F:SetFrameLevel(100)
        F:SetBackdrop(bH)
        F:SetBackdropColor(0, 0, 0, 1)
        F:SetToplevel(true)
        F:SetScript("OnShow", bu)
        F:SetScript("OnHide", bv)
        F:SetScript("OnMouseDown", bw)
        local bI = CreateFrame("Button", nil, F, "UIPanelButtonTemplate")
        bI:SetScript("OnClick", bt)
        bI:SetPoint("BOTTOMRIGHT", -27, 17)
        bI:SetHeight(20)
        bI:SetWidth(100)
        bI:SetText(CLOSE)
        local bJ = CreateFrame("Button", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        bJ:SetPoint("BOTTOMLEFT", 15, 15)
        bJ:SetPoint("BOTTOMRIGHT", -132, 15)
        bJ:SetHeight(24)
        bJ:SetBackdrop(bo)
        bJ:SetBackdropColor(0.1, 0.1, 0.1)
        bJ:SetBackdropBorderColor(0.4, 0.4, 0.4)
        bJ:SetScript("OnEnter", bD)
        bJ:SetScript("OnLeave", bE)
        local bK = bJ:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bK:SetPoint("TOPLEFT", 7, -2)
        bK:SetPoint("BOTTOMRIGHT", -7, 2)
        bK:SetHeight(20)
        bK:SetJustifyH("LEFT")
        bK:SetText("")
        local bL = F:CreateTexture(nil, "OVERLAY")
        bL:SetTexture(131080)
        bL:SetTexCoord(0.31, 0.67, 0, 0.63)
        bL:SetPoint("TOP", 0, 12)
        bL:SetWidth(100)
        bL:SetHeight(40)
        local be = CreateFrame("Frame", nil, F)
        be:EnableMouse(true)
        be:SetScript("OnMouseDown", bx)
        be:SetScript("OnMouseUp", by)
        be:SetAllPoints(bL)
        local bp = be:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bp:SetPoint("TOP", bL, "TOP", 0, -14)
        local bM = F:CreateTexture(nil, "OVERLAY")
        bM:SetTexture(131080)
        bM:SetTexCoord(0.21, 0.31, 0, 0.63)
        bM:SetPoint("RIGHT", bL, "LEFT")
        bM:SetWidth(30)
        bM:SetHeight(40)
        local bN = F:CreateTexture(nil, "OVERLAY")
        bN:SetTexture(131080)
        bN:SetTexCoord(0.67, 0.77, 0, 0.63)
        bN:SetPoint("LEFT", bL, "RIGHT")
        bN:SetWidth(30)
        bN:SetHeight(40)
        local bO = CreateFrame("Frame", nil, F)
        bO:SetPoint("BOTTOMRIGHT")
        bO:SetWidth(25)
        bO:SetHeight(25)
        bO:EnableMouse()
        bO:SetScript("OnMouseDown", bA)
        bO:SetScript("OnMouseUp", by)
        local bP = bO:CreateTexture(nil, "BACKGROUND")
        bP:SetWidth(14)
        bP:SetHeight(14)
        bP:SetPoint("BOTTOMRIGHT", -8, 8)
        bP:SetTexture(137057)
        local bQ = 0.1 * 14 / 17; bP:SetTexCoord(0.05 - bQ, 0.5, 0.05, 0.5 + bQ, 0.05, 0.5 - bQ, 0.5 + bQ, 0.5)
        local bR = bO:CreateTexture(nil, "BACKGROUND")
        bR:SetWidth(8)
        bR:SetHeight(8)
        bR:SetPoint("BOTTOMRIGHT", -8, 8)
        bR:SetTexture(137057)
        local bQ = 0.1 * 8 / 17; bR:SetTexCoord(0.05 - bQ, 0.5, 0.05, 0.5 + bQ, 0.05, 0.5 - bQ, 0.5 + bQ, 0.5)
        local bS = CreateFrame("Frame", nil, F)
        bS:SetPoint("BOTTOMRIGHT", -25, 0)
        bS:SetPoint("BOTTOMLEFT")
        bS:SetHeight(25)
        bS:EnableMouse(true)
        bS:SetScript("OnMouseDown", bB)
        bS:SetScript("OnMouseUp", by)
        local bT = CreateFrame("Frame", nil, F)
        bT:SetPoint("BOTTOMRIGHT", 0, 25)
        bT:SetPoint("TOPRIGHT")
        bT:SetWidth(25)
        bT:EnableMouse(true)
        bT:SetScript("OnMouseDown", bC)
        bT:SetScript("OnMouseUp", by)
        local a4 = CreateFrame("Frame", nil, F)
        a4:SetPoint("TOPLEFT", 17, -27)
        a4:SetPoint("BOTTOMRIGHT", -17, 40)
        local B = { localstatus = {}, titletext = bp, statustext = bK, titlebg = bL, sizer_se = bO, sizer_s = bS,
            sizer_e = bT, content = a4, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; bI.obj, bJ.obj = B, B; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function bU(...)
    local b4, a1 = "InlineGroup", 22; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local CreateFrame, UIParent = CreateFrame, UIParent; local bb = {
        ["OnAcquire"] = function(self)
            self:SetWidth(300)
            self:SetHeight(100)
            self:SetTitle("")
        end, ["SetTitle"] = function(self, be) self.titletext:SetText(be) end,
        ["LayoutFinished"] = function(self, J, K)
            if self.noAutoHeight then return end
            ; self:SetHeight((K or 0) + 40)
        end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local bc = J - 20; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - 20; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end }
    local bo = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground", edgeFile =
    "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 5, bottom = 3 } }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        local bp = F:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bp:SetPoint("TOPLEFT", 14, 0)
        bp:SetPoint("TOPRIGHT", -14, 0)
        bp:SetJustifyH("LEFT")
        bp:SetHeight(18)
        local br = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        br:SetPoint("TOPLEFT", 0, -17)
        br:SetPoint("BOTTOMRIGHT", -1, 3)
        br:SetBackdrop(bo)
        br:SetBackdropColor(0.1, 0.1, 0.1, 0.5)
        br:SetBackdropBorderColor(0.4, 0.4, 0.4)
        local a4 = CreateFrame("Frame", nil, br)
        a4:SetPoint("TOPLEFT", 10, -10)
        a4:SetPoint("BOTTOMRIGHT", -10, 10)
        local B = { frame = F, content = a4, titletext = bp, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function bV(...)
    local b4, a1 = "ScrollFrame", 26; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs, assert, type = pairs, assert, type; local min, max, floor = math.min, math.max, math.floor; local CreateFrame, UIParent =
    CreateFrame, UIParent; local function bW(F)
        F:SetScript("OnUpdate", nil)
        F.obj:FixScroll()
    end
    ; local function bX(F, M) F.obj:MoveScroll(M) end
    ; local function bY(F) F:SetScript("OnUpdate", bW) end
    ; local function bZ(F, M) F.obj:SetScroll(M) end
    ; local bb = { ["OnAcquire"] = function(self)
        self:SetScroll(0)
        self.scrollframe:SetScript("OnUpdate", bW)
    end,
        ["OnRelease"] = function(self)
            self.status = nil; for C in pairs(self.localstatus) do self.localstatus[C] = nil end
            ; self.scrollframe:SetPoint("BOTTOMRIGHT")
            self.scrollbar:Hide()
            self.scrollBarShown = nil; self.content.height, self.content.width, self.content.original_width = nil, nil,
                nil
        end,
        ["SetScroll"] = function(self, M)
            local bl = self.status or self.localstatus; local b_ = self.scrollframe:GetHeight()
            local K = self.content:GetHeight()
            local c0; if b_ > K then c0 = 0 else c0 = floor((K - b_) / 1000.0 * M) end
            ; self.content:ClearAllPoints()
            self.content:SetPoint("TOPLEFT", 0, c0)
            self.content:SetPoint("TOPRIGHT", 0, c0)
            bl.offset = c0; bl.scrollvalue = M
        end,
        ["MoveScroll"] = function(self, M)
            local bl = self.status or self.localstatus; local K, b_ = self.scrollframe:GetHeight(),
                self.content:GetHeight()
            if self.scrollBarShown then
                local c1 = K - b_; local c2 = 1; if M < 0 then c2 = -1 end
                ; self.scrollbar:SetValue(min(max(bl.scrollvalue + c2 * 1000 / (c1 / 45), 0), 1000))
            end
        end,
        ["FixScroll"] = function(self)
            if self.updateLock then return end
            ; self.updateLock = true; local bl = self.status or self.localstatus; local K, b_ =
            self.scrollframe:GetHeight(), self.content:GetHeight()
            local c0 = bl.offset or 0; if b_ < K + 2 then if self.scrollBarShown then
                    self.scrollBarShown = nil; self.scrollbar:Hide()
                    self.scrollbar:SetValue(0)
                    self.scrollframe:SetPoint("BOTTOMRIGHT")
                    if self.content.original_width then self.content.width = self.content.original_width end
                    ; self:DoLayout()
                end else
                if not self.scrollBarShown then
                    self.scrollBarShown = true; self.scrollbar:Show()
                    self.scrollframe:SetPoint("BOTTOMRIGHT", -20, 0)
                    if self.content.original_width then self.content.width = self.content.original_width - 20 end
                    ; self:DoLayout()
                end
                ; local M = c0 / (b_ - K) * 1000; if M > 1000 then M = 1000 end
                ; self.scrollbar:SetValue(M)
                self:SetScroll(M)
                if M < 1000 then
                    self.content:ClearAllPoints()
                    self.content:SetPoint("TOPLEFT", 0, c0)
                    self.content:SetPoint("TOPRIGHT", 0, c0)
                    bl.offset = c0
                end
            end
            ; self.updateLock = nil
        end,
        ["LayoutFinished"] = function(self, J, K)
            self.content:SetHeight(K or 0 + 20)
            self:FixScroll()
            self.scrollframe:SetScript("OnUpdate", bW)
        end,
        ["SetStatusTable"] = function(self, bl)
            assert(type(bl) == "table")
            self.status = bl; if not bl.scrollvalue then bl.scrollvalue = 0 end
        end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; a4.width = J - (self.scrollBarShown and 20 or 0)
            a4.original_width = J
        end, ["OnHeightSet"] = function(self, K)
        local a4 = self.content; a4.height = K
    end }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        local c3 = l:GetNextWidgetNum(b4)
        local c4 = CreateFrame("ScrollFrame", nil, F)
        c4:SetPoint("TOPLEFT")
        c4:SetPoint("BOTTOMRIGHT")
        c4:EnableMouseWheel(true)
        c4:SetScript("OnMouseWheel", bX)
        c4:SetScript("OnSizeChanged", bY)
        local c5 = CreateFrame("Slider", ("AceConfigDialogScrollFrame%dScrollBar"):format(c3), c4,
            "UIPanelScrollBarTemplate")
        c5:SetPoint("TOPLEFT", c4, "TOPRIGHT", 4, -16)
        c5:SetPoint("BOTTOMLEFT", c4, "BOTTOMRIGHT", 4, 16)
        c5:SetMinMaxValues(0, 1000)
        c5:SetValueStep(1)
        c5:SetValue(0)
        c5:SetWidth(16)
        c5:Hide()
        c5:SetScript("OnValueChanged", bZ)
        local c6 = c5:CreateTexture(nil, "BACKGROUND")
        c6:SetAllPoints(c5)
        c6:SetColorTexture(0, 0, 0, 0.4)
        local a4 = CreateFrame("Frame", nil, c4)
        a4:SetPoint("TOPLEFT")
        a4:SetPoint("TOPRIGHT")
        a4:SetHeight(400)
        c4:SetScrollChild(a4)
        local B = { localstatus = { scrollvalue = 0 }, scrollframe = c4, scrollbar = c5, content = a4, frame = F, type =
        b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; c4.obj, c5.obj = B, B; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function c7(...)
    local b4, a1 = "SimpleGroup", 20; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local CreateFrame, UIParent = CreateFrame, UIParent; local bb = {
        ["OnAcquire"] = function(self)
            self:SetWidth(300)
            self:SetHeight(100)
        end, ["LayoutFinished"] = function(self, J, K)
        if self.noAutoHeight then return end
        ; self:SetHeight(K or 0)
    end, ["OnWidthSet"] = function(self, J)
        local a4 = self.content; a4:SetWidth(J)
        a4.width = J
    end, ["OnHeightSet"] = function(self, K)
        local a4 = self.content; a4:SetHeight(K)
        a4.height = K
    end }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        local a4 = CreateFrame("Frame", nil, F)
        a4:SetPoint("TOPLEFT")
        a4:SetPoint("BOTTOMRIGHT")
        local B = { frame = F, content = a4, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function c8(...)
    local b4, a1 = "TabGroup", 37; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs, ipairs, assert, type, n = pairs, ipairs, assert, type, table.wipe; local PlaySound = PlaySound; local CreateFrame, UIParent =
    CreateFrame, UIParent; local _G = _G; local c9 = {}
    local ca = {}
    local cb = {}
    local function cc(F) if F.disabled then PanelTemplates_SetDisabledTabState(F) elseif F.selected then
            PanelTemplates_SelectTab(F) else PanelTemplates_DeselectTab(F) end end
    ; local function cd(F, bF)
        F:_SetText(bF)
        local J = F.obj.frame.width or F.obj.frame:GetWidth() or 0; PanelTemplates_TabResize(F, 0, nil, nil, J,
            F:GetFontString():GetStringWidth())
    end
    ; local function ce(F, cf)
        F.selected = cf; cc(F)
    end
    ; local function cg(F, ch)
        F.disabled = ch; cc(F)
    end
    ; local function ci(F)
        local self = F.obj; self:BuildTabs()
        F:SetScript("OnUpdate", nil)
    end
    ; local function cj(F) if not (F.selected or F.disabled) then
            PlaySound(841)
            F.obj:SelectTab(F.value)
        end end
    ; local function ck(F)
        local self = F.obj; self:Fire("OnTabEnter", self.tabs[F.id].value, F)
    end
    ; local function cl(F)
        local self = F.obj; self:Fire("OnTabLeave", self.tabs[F.id].value, F)
    end
    ; local function cm(F) _G[F:GetName() .. "HighlightTexture"]:SetWidth(F:GetTextWidth() + 30) end
    ; local bb = { ["OnAcquire"] = function(self) self:SetTitle() end,
        ["OnRelease"] = function(self)
            self.status = nil; for C in pairs(self.localstatus) do self.localstatus[C] = nil end
            ; self.tablist = nil; for S, cn in pairs(self.tabs) do cn:Hide() end
        end,
        ["CreateTab"] = function(self, co)
            local cp = ("AceGUITabGroup%dTab%d"):format(self.num, co)
            local cn = CreateFrame("Button", cp, self.border, "OptionsFrameTabButtonTemplate")
            cn.obj = self; cn.id = co; cn.text = _G[cp .. "Text"]
            cn.text:ClearAllPoints()
            cn.text:SetPoint("LEFT", 14, -3)
            cn.text:SetPoint("RIGHT", -12, -3)
            cn:SetScript("OnClick", cj)
            cn:SetScript("OnEnter", ck)
            cn:SetScript("OnLeave", cl)
            cn:SetScript("OnShow", cm)
            cn._SetText = cn.SetText; cn.SetText = cd; cn.SetSelected = ce; cn.SetDisabled = cg; return cn
        end,
        ["SetTitle"] = function(self, bF)
            self.titletext:SetText(bF or "")
            if bF and bF ~= "" then self.alignoffset = 25 else self.alignoffset = 18 end
            ; self:BuildTabs()
        end, ["SetStatusTable"] = function(self, bl)
        assert(type(bl) == "table")
        self.status = bl
    end,
        ["SelectTab"] = function(self, M)
            local bl = self.status or self.localstatus; local cq; for T, b2 in ipairs(self.tabs) do if b2.value == M then
                    b2:SetSelected(true)
                    cq = true
                else b2:SetSelected(false) end end
            ; bl.selected = M; if cq then self:Fire("OnGroupSelected", M) end
        end, ["SetTabs"] = function(self, cr)
        self.tablist = cr; self:BuildTabs()
    end,
        ["BuildTabs"] = function(self)
            local cs = self.titletext:GetText() and self.titletext:GetText() ~= ""
            local ct = self.tablist; local cr = self.tabs; if not ct then return end
            ; local J = self.frame.width or self.frame:GetWidth() or 0; n(c9)
            n(ca)
            n(cb)
            for T, b2 in ipairs(ct) do
                local cn = cr[T]
                if not cn then
                    cn = self:CreateTab(T)
                    cr[T] = cn
                end
                ; cn:Show()
                cn:SetText(b2.text)
                cn:SetDisabled(b2.disabled)
                cn.value = b2.value; c9[T] = cn:GetWidth() - 6
            end
            ; for T = #ct + 1, #cr, 1 do cr[T]:Hide() end
            ; local cu = #ct; local cv = 1; local a8 = 0; for T = 1, #ct do
                if a8 ~= 0 and J - a8 - c9[T] < 0 then
                    ca[cv] = a8 + 10; cb[cv] = T - 1; cv = cv + 1; a8 = 0
                end
                ; a8 = a8 + c9[T]
            end
            ; ca[cv] = a8 + 10; cb[cv] = #ct; if cv > 1 then if cb[cv - 1] == cu - 1 then if cv == 2 and cb[cv - 1] > 2 or cb[cv] - cb[cv - 1] > 2 then if ca[cv] + c9[cu - 1] <= J then
                            cb[cv - 1] = cb[cv - 1] - 1; ca[cv] = ca[cv] + c9[cu - 1]
                            ca[cv - 1] = ca[cv - 1] - c9[cu - 1]
                        end end end end
            ; local cw = 1; for aL, cx in ipairs(cb) do
                local cy = true; for cz = cw, cx do
                    local cn = cr[cz]
                    cn:ClearAllPoints()
                    if cy then
                        cn:SetPoint("TOPLEFT", self.frame, "TOPLEFT", 0, -(cs and 14 or 7) - (aL - 1) * 20)
                        cy = false
                    else cn:SetPoint("LEFT", cr[cz - 1], "RIGHT", -10, 0) end
                end
                ; local cA = 0; if not (cv == 1 and ca[1] < J * 0.75 - 18) then cA = (J - ca[aL]) / (cx - cw + 1) end
                ; for T = cw, cx do PanelTemplates_TabResize(cr[T], cA + 4, nil, nil, J,
                        cr[T]:GetFontString():GetStringWidth()) end
                ; cw = cx + 1
            end
            ; self.borderoffset = (cs and 17 or 10) + cv * 20; self.border:SetPoint("TOPLEFT", 1, -self.borderoffset)
        end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local bc = J - 60; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc; self:BuildTabs(self)
            self.frame:SetScript("OnUpdate", ci)
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - (self.borderoffset + 23)
            if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end,
        ["LayoutFinished"] = function(self, J, K)
            if self.noAutoHeight then return end
            ; self:SetHeight((K or 0) + self.borderoffset + 23)
        end }
    local bo = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground", edgeFile =
    "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 5, bottom = 3 } }
    local function a0()
        local c3 = l:GetNextWidgetNum(b4)
        local F = CreateFrame("Frame", nil, UIParent)
        F:SetHeight(100)
        F:SetWidth(100)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        local bp = F:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bp:SetPoint("TOPLEFT", 14, 0)
        bp:SetPoint("TOPRIGHT", -14, 0)
        bp:SetJustifyH("LEFT")
        bp:SetHeight(18)
        bp:SetText("")
        local br = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        br:SetPoint("TOPLEFT", 1, -27)
        br:SetPoint("BOTTOMRIGHT", -1, 3)
        br:SetBackdrop(bo)
        br:SetBackdropColor(0.1, 0.1, 0.1, 0.5)
        br:SetBackdropBorderColor(0.4, 0.4, 0.4)
        local a4 = CreateFrame("Frame", nil, br)
        a4:SetPoint("TOPLEFT", 10, -7)
        a4:SetPoint("BOTTOMRIGHT", -10, 7)
        local B = { num = c3, frame = F, localstatus = {}, alignoffset = 18, titletext = bp, border = br,
            borderoffset = 27, tabs = {}, content = a4, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function cB(...)
    local b4, a1 = "TreeGroup", 45; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local next, pairs, ipairs, assert, type = next, pairs, ipairs, assert, type; local cC, o, floor = math.min,
        math.max, floor; local select, cD, unpack, cE = select, table.remove, unpack, table.concat; local CreateFrame, UIParent =
    CreateFrame, UIParent; local cF, cG; do
        local cH = setmetatable({}, { __mode = 'k' })
        function cF()
            local aC = next(cH)
            if aC then
                cH[aC] = nil; return aC
            else return {} end
        end

        ; function cG(aC)
            for C in pairs(aC) do aC[C] = nil end
            ; cH[aC] = true
        end
    end
    ; local cI = 175; local cJ = true; local function cK(cL)
        local E = cL.parent; if E and E.value then return cK(E) .. "\001" .. cL.value else return cL.value end
    end
    ; local function cM(cN, cO, cf, cP, cQ)
        local self = cN.obj; local cR = cN.toggle; local bF = cO.text or ""
        local cS = cO.icon; local cT = cO.iconCoords; local cU = cO.level; local M = cO.value; local cV = cO.uniquevalue; local ch =
        cO.disabled; cN.treeline = cO; cN.value = M; cN.uniquevalue = cV; if cf then
            cN:LockHighlight()
            cN.selected = true
        else
            cN:UnlockHighlight()
            cN.selected = false
        end
        ; cN.level = cU; if cU == 1 then
            cN:SetNormalFontObject("GameFontNormal")
            cN:SetHighlightFontObject("GameFontHighlight")
            cN.text:SetPoint("LEFT", (cS and 16 or 0) + 8, 2)
        else
            cN:SetNormalFontObject("GameFontHighlightSmall")
            cN:SetHighlightFontObject("GameFontHighlightSmall")
            cN.text:SetPoint("LEFT", (cS and 16 or 0) + 8 * cU, 2)
        end
        ; if ch then
            cN:EnableMouse(false)
            cN.text:SetText("|cff808080" .. bF .. FONT_COLOR_CODE_CLOSE)
        else
            cN.text:SetText(bF)
            cN:EnableMouse(true)
        end
        ; if cS then
            cN.icon:SetTexture(cS)
            cN.icon:SetPoint("LEFT", 8 * cU, cU == 1 and 0 or 1)
        else cN.icon:SetTexture(nil) end
        ; if cT then cN.icon:SetTexCoord(unpack(cT)) else cN.icon:SetTexCoord(0, 1, 0, 1) end
        ; if cP then
            if not cQ then
                cR:SetNormalTexture(130838)
                cR:SetPushedTexture(130836)
            else
                cR:SetNormalTexture(130821)
                cR:SetPushedTexture(130820)
            end
            ; cR:Show()
        else cR:Hide() end
    end
    ; local function cW(cX)
        local cY = false; for C, b2 in ipairs(cX) do
            if b2.children == nil and b2.visible ~= false then cY = true elseif b2.children then cY = cY or
                cW(b2.children) end
            ; if cY then return cY end
        end
        ; return false
    end
    ; local function cZ(self, b2, cX, cU, E)
        local cL = cF()
        cL.value = b2.value; cL.text = b2.text; cL.icon = b2.icon; cL.iconCoords = b2.iconCoords; cL.disabled = b2
        .disabled; cL.tree = cX; cL.level = cU; cL.parent = E; cL.visible = b2.visible; cL.uniquevalue = cK(cL)
        if b2.children then cL.hasChildren = true else cL.hasChildren = nil end
        ; self.lines[#self.lines + 1] = cL; return cL
    end
    ; local function c_(F)
        local self = F.obj; F:SetScript("OnUpdate", nil)
        self:RefreshTree(nil, true)
    end
    ; local function d0(...)
        local aI = select('#', ...)
        if aI == 1 then return ... else return ... .. "\001" .. d0(select(2, ...)) end
    end
    ; local function d1(F)
        local cN = F.button; local self = cN.obj; local bl = (self.status or self.localstatus).groups; bl[cN.uniquevalue] = not
        bl[cN.uniquevalue]
        self:RefreshTree()
    end
    ; local function bt(F)
        local self = F.obj; self:Fire("OnClick", F.uniquevalue, F.selected)
        if not F.selected then
            self:SetSelected(F.uniquevalue)
            F.selected = true; F:LockHighlight()
            self:RefreshTree()
        end
        ; l:ClearFocus()
    end
    ; local function d2(cN)
        local self = cN.obj; local bl = (self.status or self.localstatus).groups; bl[cN.uniquevalue] = not bl
        [cN.uniquevalue]
        self:RefreshTree()
    end
    ; local function d3(F)
        local self = F.obj; self:Fire("OnButtonEnter", F.uniquevalue, F)
        if self.enabletooltips then
            local d4 = l.tooltip; d4:SetOwner(F, "ANCHOR_NONE")
            d4:ClearAllPoints()
            d4:SetPoint("LEFT", F, "RIGHT")
            d4:SetText(F.text:GetText() or "", 1, .82, 0, true)
            d4:Show()
        end
    end
    ; local function d5(F)
        local self = F.obj; self:Fire("OnButtonLeave", F.uniquevalue, F)
        if self.enabletooltips then l.tooltip:Hide() end
    end
    ; local function d6(F, M)
        if F.obj.noupdate then return end
        ; local self = F.obj; local bl = self.status or self.localstatus; bl.scrollvalue = floor(M + 0.5)
        self:RefreshTree()
        l:ClearFocus()
    end
    ; local function d7(F) F.obj:RefreshTree() end
    ; local function d8(F, c2)
        local self = F.obj; if self.showscroll then
            local c5 = self.scrollbar; local min, max = c5:GetMinMaxValues()
            local M = c5:GetValue()
            local d9 = cC(max, o(min, M - c2))
            if M ~= d9 then c5:SetValue(d9) end
        end
    end
    ; local function da(F) F:SetBackdropColor(1, 1, 1, 0) end
    ; local function db(F) F:SetBackdropColor(1, 1, 1, 0.8) end
    ; local function dc(F)
        local dd = F:GetParent()
        dd:StartSizing("RIGHT")
    end
    ; local function de(F)
        local dd = F:GetParent()
        local self = dd.obj; local df = dd:GetParent()
        dd:StopMovingOrSizing()
        dd:SetUserPlaced(false)
        dd:SetHeight(0)
        dd:ClearAllPoints()
        dd:SetPoint("TOPLEFT", df, "TOPLEFT", 0, 0)
        dd:SetPoint("BOTTOMLEFT", df, "BOTTOMLEFT", 0, 0)
        local bl = self.status or self.localstatus; bl.treewidth = dd:GetWidth()
        dd.obj:Fire("OnTreeResize", dd:GetWidth())
        dd.obj:OnWidthSet(bl.fullwidth)
        dd.obj:DoLayout()
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetTreeWidth(cI, cJ)
            self:EnableButtonTooltips(true)
            self.frame:SetScript("OnUpdate", c_)
        end,
        ["OnRelease"] = function(self)
            self.status = nil; self.tree = nil; self.frame:SetScript("OnUpdate", nil)
            for C, b2 in pairs(self.localstatus) do if C == "groups" then for dg in pairs(b2) do b2[dg] = nil end else self.localstatus[C] = nil end end
            ; self.localstatus.scrollvalue = 0; self.localstatus.treewidth = cI; self.localstatus.treesizable = cJ
        end, ["EnableButtonTooltips"] = function(self, dh) self.enabletooltips = dh end,
        ["CreateButton"] = function(self)
            local c3 = l:GetNextWidgetNum("TreeGroupButton")
            local cN = CreateFrame("Button", ("AceGUI30TreeButton%d"):format(c3), self.treeframe,
                "OptionsListButtonTemplate")
            cN.obj = self; local cS = cN:CreateTexture(nil, "OVERLAY")
            cS:SetWidth(14)
            cS:SetHeight(14)
            cN.icon = cS; cN:SetScript("OnClick", bt)
            cN:SetScript("OnDoubleClick", d2)
            cN:SetScript("OnEnter", d3)
            cN:SetScript("OnLeave", d5)
            cN.toggle.button = cN; cN.toggle:SetScript("OnClick", d1)
            cN.text:SetHeight(14)
            return cN
        end,
        ["SetStatusTable"] = function(self, bl)
            assert(type(bl) == "table")
            self.status = bl; if not bl.groups then bl.groups = {} end
            ; if not bl.scrollvalue then bl.scrollvalue = 0 end
            ; if not bl.treewidth then bl.treewidth = cI end
            ; if bl.treesizable == nil then bl.treesizable = cJ end
            ; self:SetTreeWidth(bl.treewidth, bl.treesizable)
            self:RefreshTree()
        end,
        ["SetTree"] = function(self, cX, di)
            self.filter = di; if cX then assert(type(cX) == "table") end
            ; self.tree = cX; self:RefreshTree()
        end,
        ["BuildLevel"] = function(self, cX, cU, E)
            local dj = (self.status or self.localstatus).groups; for T, b2 in ipairs(cX) do if b2.children then if not self.filter or cW(b2.children) then
                        local cL = cZ(self, b2, cX, cU, E)
                        if dj[cL.uniquevalue] then self:BuildLevel(b2.children, cU + 1, cL) end
                    end elseif b2.visible ~= false or not self.filter then cZ(self, b2, cX, cU, E) end end
        end,
        ["RefreshTree"] = function(self, dk, dl)
            local dm = self.buttons; local dn = self.lines; for T, b2 in ipairs(dm) do b2:Hide() end
            ; while dn[1] do
                local aC = cD(dn)
                for C in pairs(aC) do aC[C] = nil end
                ; cG(aC)
            end
            ; if not self.tree then return end
            ; local bl = self.status or self.localstatus; local dp = bl.groups; local cX = self.tree; local dd = self
            .treeframe; bl.scrollToSelection = bl.scrollToSelection or dk; self:BuildLevel(cX, 1)
            local dq = #dn; local dr = floor(((self.treeframe:GetHeight() or 0) - 20) / 18)
            if dr <= 0 then return end
            ; if self.frame:GetParent() == UIParent and not dl then
                self.frame:SetScript("OnUpdate", c_)
                return
            end
            ; local cy, ds; dk = bl.scrollToSelection; bl.scrollToSelection = nil; if dq <= dr then
                bl.scrollvalue = 0; self:ShowScroll(false)
                cy, ds = 1, dq
            else
                self:ShowScroll(true)
                self.noupdate = true; self.scrollbar:SetMinMaxValues(0, dq - dr)
                if dq - bl.scrollvalue < dr then bl.scrollvalue = dq - dr end
                ; self.noupdate = nil; cy, ds = bl.scrollvalue + 1, bl.scrollvalue + dr; if dk and bl.selected then
                    local dt; for T, cL in ipairs(dn) do if cL.uniquevalue == bl.selected then dt = T end end
                    ; if not dt then
                    elseif dt >= cy and dt <= ds then
                    else
                        if dt < cy then bl.scrollvalue = dt - 1 else bl.scrollvalue = dt - dr end
                        ; cy, ds = bl.scrollvalue + 1, bl.scrollvalue + dr
                    end
                end
                ; if self.scrollbar:GetValue() ~= bl.scrollvalue then self.scrollbar:SetValue(bl.scrollvalue) end
            end
            ; local du = 1; for T = cy, ds do
                local cL = dn[T]
                local cN = dm[du]
                if not cN then
                    cN = self:CreateButton()
                    dm[du] = cN; cN:SetParent(dd)
                    cN:SetFrameLevel(dd:GetFrameLevel() + 1)
                    cN:ClearAllPoints()
                    if du == 1 then if self.showscroll then
                            cN:SetPoint("TOPRIGHT", -22, -10)
                            cN:SetPoint("TOPLEFT", 0, -10)
                        else
                            cN:SetPoint("TOPRIGHT", 0, -10)
                            cN:SetPoint("TOPLEFT", 0, -10)
                        end else
                        cN:SetPoint("TOPRIGHT", dm[du - 1], "BOTTOMRIGHT", 0, 0)
                        cN:SetPoint("TOPLEFT", dm[du - 1], "BOTTOMLEFT", 0, 0)
                    end
                end
                ; cM(cN, cL, bl.selected == cL.uniquevalue, cL.hasChildren, dp[cL.uniquevalue])
                cN:Show()
                du = du + 1
            end
        end,
        ["SetSelected"] = function(self, M)
            local bl = self.status or self.localstatus; if bl.selected ~= M then
                bl.selected = M; self:Fire("OnGroupSelected", M)
            end
        end,
        ["Select"] = function(self, cV, ...)
            self.filter = false; local bl = self.status or self.localstatus; local dj = bl.groups; local dv = { ... }
            for T = 1, #dv do dj[cE(dv, "\001", 1, T)] = true end
            ; bl.selected = cV; self:RefreshTree(true)
            self:Fire("OnGroupSelected", cV)
        end, ["SelectByPath"] = function(self, ...) self:Select(d0(...), ...) end,
        ["SelectByValue"] = function(self, cV) self:Select(cV, ("\001"):split(cV)) end,
        ["ShowScroll"] = function(self, dt)
            self.showscroll = dt; if dt then
                self.scrollbar:Show()
                if self.buttons[1] then self.buttons[1]:SetPoint("TOPRIGHT", self.treeframe, "TOPRIGHT", -22, -10) end
            else
                self.scrollbar:Hide()
                if self.buttons[1] then self.buttons[1]:SetPoint("TOPRIGHT", self.treeframe, "TOPRIGHT", 0, -10) end
            end
        end,
        ["OnWidthSet"] = function(self, J)
            local a4 = self.content; local dd = self.treeframe; local bl = self.status or self.localstatus; bl.fullwidth =
            J; local bc = J - bl.treewidth - 20; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc; local dw = cC(400, J - 50)
            if dw > 100 and bl.treewidth > dw then self:SetTreeWidth(dw, bl.treesizable) end
            ; dd:SetMaxResize(dw, 1600)
        end,
        ["OnHeightSet"] = function(self, K)
            local a4 = self.content; local bd = K - 20; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end,
        ["SetTreeWidth"] = function(self, dx, dy)
            if not dy then if type(dx) == 'number' then dy = false elseif type(dx) == 'boolean' then
                    dy = dx; dx = cI
                else
                    dy = false; dx = cI
                end end
            ; self.treeframe:SetWidth(dx)
            self.dragger:EnableMouse(dy)
            local bl = self.status or self.localstatus; bl.treewidth = dx; bl.treesizable = dy; if bl.fullwidth then self
                    :OnWidthSet(bl.fullwidth) end
        end, ["GetTreeWidth"] = function(self)
        local bl = self.status or self.localstatus; return bl.treewidth or cI
    end, ["LayoutFinished"] = function(self, J, K)
        if self.noAutoHeight then return end
        ; self:SetHeight((K or 0) + 20)
    end }
    local bo = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground", edgeFile =
    "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 5, bottom = 3 } }
    local dz = { bgFile = "Interface\\Tooltips\\UI-Tooltip-Background", edgeFile = nil, tile = true, tileSize = 16,
        edgeSize = 1, insets = { left = 3, right = 3, top = 7, bottom = 7 } }
    local function a0()
        local c3 = l:GetNextWidgetNum(b4)
        local F = CreateFrame("Frame", nil, UIParent)
        local dd = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        dd:SetPoint("TOPLEFT")
        dd:SetPoint("BOTTOMLEFT")
        dd:SetWidth(cI)
        dd:EnableMouseWheel(true)
        dd:SetBackdrop(bo)
        dd:SetBackdropColor(0.1, 0.1, 0.1, 0.5)
        dd:SetBackdropBorderColor(0.4, 0.4, 0.4)
        dd:SetResizable(true)
        dd:SetScript("OnUpdate", c_)
        dd:SetScript("OnSizeChanged", d7)
        dd:SetScript("OnMouseWheel", d8)
        local dA = CreateFrame("Frame", nil, dd, BackdropTemplateMixin and "BackdropTemplate" or nil)
        dA:SetWidth(8)
        dA:SetPoint("TOP", dd, "TOPRIGHT")
        dA:SetPoint("BOTTOM", dd, "BOTTOMRIGHT")
        dA:SetBackdrop(dz)
        dA:SetBackdropColor(1, 1, 1, 0)
        dA:SetScript("OnEnter", db)
        dA:SetScript("OnLeave", da)
        dA:SetScript("OnMouseDown", dc)
        dA:SetScript("OnMouseUp", de)
        local c5 = CreateFrame("Slider", ("AceConfigDialogTreeGroup%dScrollBar"):format(c3), dd,
            "UIPanelScrollBarTemplate")
        c5:SetScript("OnValueChanged", nil)
        c5:SetPoint("TOPRIGHT", -10, -26)
        c5:SetPoint("BOTTOMRIGHT", -10, 26)
        c5:SetMinMaxValues(0, 0)
        c5:SetValueStep(1)
        c5:SetValue(0)
        c5:SetWidth(16)
        c5:SetScript("OnValueChanged", d6)
        local c6 = c5:CreateTexture(nil, "BACKGROUND")
        c6:SetAllPoints(c5)
        c6:SetColorTexture(0, 0, 0, 0.4)
        local br = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        br:SetPoint("TOPLEFT", dd, "TOPRIGHT")
        br:SetPoint("BOTTOMRIGHT")
        br:SetBackdrop(bo)
        br:SetBackdropColor(0.1, 0.1, 0.1, 0.5)
        br:SetBackdropBorderColor(0.4, 0.4, 0.4)
        local a4 = CreateFrame("Frame", nil, br)
        a4:SetPoint("TOPLEFT", 10, -10)
        a4:SetPoint("BOTTOMRIGHT", -10, 10)
        local B = { frame = F, lines = {}, levels = {}, buttons = {}, hasChildren = {},
            localstatus = { groups = {}, scrollvalue = 0 }, filter = false, treeframe = dd, dragger = dA, scrollbar = c5,
            border = br, content = a4, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; dd.obj, dA.obj, c5.obj = B, B, B; return l:RegisterAsContainer(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function dB(...)
    local l = LibStub("AceGUI-3.0")
    local pairs, assert, type = pairs, assert, type; local PlaySound = PlaySound; local CreateFrame, UIParent =
    CreateFrame, UIParent; do
        local b4 = "Window"
        local a1 = 6; local function dC(Y) Y.obj:Fire("OnShow") end
        ; local function dD(Y) Y.obj:Fire("OnClose") end
        ; local function dE(Y)
            PlaySound(799)
            Y.obj:Hide()
        end
        ; local function dF(Y) l:ClearFocus() end
        ; local function dG(Y)
            Y:GetParent():StartMoving()
            l:ClearFocus()
        end
        ; local function dH(Y)
            local F = Y:GetParent()
            F:StopMovingOrSizing()
            local self = F.obj; local bl = self.status or self.localstatus; bl.width = F:GetWidth()
            bl.height = F:GetHeight()
            bl.top = F:GetTop()
            bl.left = F:GetLeft()
        end
        ; local function dI(Y)
            Y:GetParent():StartSizing("BOTTOMRIGHT")
            l:ClearFocus()
        end
        ; local function dJ(Y)
            Y:GetParent():StartSizing("BOTTOM")
            l:ClearFocus()
        end
        ; local function dK(Y)
            Y:GetParent():StartSizing("RIGHT")
            l:ClearFocus()
        end
        ; local function dL(Y) Y:GetParent():StopMovingOrSizing() end
        ; local function dM(self, be) self.titletext:SetText(be) end
        ; local function dN(self, bF)
        end
        ; local function dO(self) self.frame:Hide() end
        ; local function dP(self) self.frame:Show() end
        ; local function dQ(self)
            self.frame:SetParent(UIParent)
            self.frame:SetFrameStrata("FULLSCREEN_DIALOG")
            self:ApplyStatus()
            self:EnableResize(true)
            self:Show()
        end
        ; local function dR(self)
            self.status = nil; for C in pairs(self.localstatus) do self.localstatus[C] = nil end
        end
        ; local function dS(self, bl)
            assert(type(bl) == "table")
            self.status = bl; self:ApplyStatus()
        end
        ; local function dT(self)
            local bl = self.status or self.localstatus; local F = self.frame; self:SetWidth(bl.width or 700)
            self:SetHeight(bl.height or 500)
            if bl.top and bl.left then
                F:SetPoint("TOP", UIParent, "BOTTOM", 0, bl.top)
                F:SetPoint("LEFT", UIParent, "LEFT", bl.left, 0)
            else F:SetPoint("CENTER", UIParent, "CENTER") end
        end
        ; local function dU(self, J)
            local a4 = self.content; local bc = J - 34; if bc < 0 then bc = 0 end
            ; a4:SetWidth(bc)
            a4.width = bc
        end
        ; local function dV(self, K)
            local a4 = self.content; local bd = K - 57; if bd < 0 then bd = 0 end
            ; a4:SetHeight(bd)
            a4.height = bd
        end
        ; local function dW(self, bG)
            local v = bG and "Show" or "Hide"
            self.sizer_se[v](self.sizer_se)
            self.sizer_s[v](self.sizer_s)
            self.sizer_e[v](self.sizer_e)
        end
        ; local function a0()
            local F = CreateFrame("Frame", nil, UIParent)
            local self = {}
            self.type = "Window"
            self.Hide = dO; self.Show = dP; self.SetTitle = dM; self.OnRelease = dR; self.OnAcquire = dQ; self.SetStatusText =
            dN; self.SetStatusTable = dS; self.ApplyStatus = dT; self.OnWidthSet = dU; self.OnHeightSet = dV; self.EnableResize =
            dW; self.localstatus = {}
            self.frame = F; F.obj = self; F:SetWidth(700)
            F:SetHeight(500)
            F:SetPoint("CENTER", UIParent, "CENTER", 0, 0)
            F:EnableMouse()
            F:SetMovable(true)
            F:SetResizable(true)
            F:SetFrameStrata("FULLSCREEN_DIALOG")
            F:SetScript("OnMouseDown", dF)
            F:SetScript("OnShow", dC)
            F:SetScript("OnHide", dD)
            F:SetToplevel(true)
            local bL = F:CreateTexture(nil, "BACKGROUND")
            bL:SetTexture(251966)
            bL:SetPoint("TOPLEFT", 9, -6)
            bL:SetPoint("BOTTOMRIGHT", F, "TOPRIGHT", -28, -24)
            local dX = F:CreateTexture(nil, "BACKGROUND")
            dX:SetTexture(137056)
            dX:SetPoint("TOPLEFT", 8, -24)
            dX:SetPoint("BOTTOMRIGHT", -6, 8)
            dX:SetVertexColor(0, 0, 0, .75)
            local dY = F:CreateTexture(nil, "BORDER")
            dY:SetTexture(251963)
            dY:SetWidth(64)
            dY:SetHeight(64)
            dY:SetPoint("TOPLEFT")
            dY:SetTexCoord(0.501953125, 0.625, 0, 1)
            local dZ = F:CreateTexture(nil, "BORDER")
            dZ:SetTexture(251963)
            dZ:SetWidth(64)
            dZ:SetHeight(64)
            dZ:SetPoint("TOPRIGHT")
            dZ:SetTexCoord(0.625, 0.75, 0, 1)
            local d_ = F:CreateTexture(nil, "BORDER")
            d_:SetTexture(251963)
            d_:SetHeight(64)
            d_:SetPoint("TOPLEFT", dY, "TOPRIGHT")
            d_:SetPoint("TOPRIGHT", dZ, "TOPLEFT")
            d_:SetTexCoord(0.25, 0.369140625, 0, 1)
            local e0 = F:CreateTexture(nil, "BORDER")
            e0:SetTexture(251963)
            e0:SetWidth(64)
            e0:SetHeight(64)
            e0:SetPoint("BOTTOMLEFT")
            e0:SetTexCoord(0.751953125, 0.875, 0, 1)
            local e1 = F:CreateTexture(nil, "BORDER")
            e1:SetTexture(251963)
            e1:SetWidth(64)
            e1:SetHeight(64)
            e1:SetPoint("BOTTOMRIGHT")
            e1:SetTexCoord(0.875, 1, 0, 1)
            local e2 = F:CreateTexture(nil, "BORDER")
            e2:SetTexture(251963)
            e2:SetHeight(64)
            e2:SetPoint("BOTTOMLEFT", e0, "BOTTOMRIGHT")
            e2:SetPoint("BOTTOMRIGHT", e1, "BOTTOMLEFT")
            e2:SetTexCoord(0.376953125, 0.498046875, 0, 1)
            local e3 = F:CreateTexture(nil, "BORDER")
            e3:SetTexture(251963)
            e3:SetWidth(64)
            e3:SetPoint("TOPLEFT", dY, "BOTTOMLEFT")
            e3:SetPoint("BOTTOMLEFT", e0, "TOPLEFT")
            e3:SetTexCoord(0.001953125, 0.125, 0, 1)
            local e4 = F:CreateTexture(nil, "BORDER")
            e4:SetTexture(251963)
            e4:SetWidth(64)
            e4:SetPoint("TOPRIGHT", dZ, "BOTTOMRIGHT")
            e4:SetPoint("BOTTOMRIGHT", e1, "TOPRIGHT")
            e4:SetTexCoord(0.1171875, 0.2421875, 0, 1)
            local e5 = CreateFrame("Button", nil, F, "UIPanelCloseButton")
            e5:SetPoint("TOPRIGHT", 2, 1)
            e5:SetScript("OnClick", dE)
            self.closebutton = e5; e5.obj = self; local bp = F:CreateFontString(nil, "ARTWORK")
            bp:SetFontObject(GameFontNormal)
            bp:SetPoint("TOPLEFT", 12, -8)
            bp:SetPoint("TOPRIGHT", -32, -8)
            self.titletext = bp; local be = CreateFrame("Button", nil, F)
            be:SetPoint("TOPLEFT", bL)
            be:SetPoint("BOTTOMRIGHT", bL)
            be:EnableMouse()
            be:SetScript("OnMouseDown", dG)
            be:SetScript("OnMouseUp", dH)
            self.title = be; local bO = CreateFrame("Frame", nil, F)
            bO:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", 0, 0)
            bO:SetWidth(25)
            bO:SetHeight(25)
            bO:EnableMouse()
            bO:SetScript("OnMouseDown", dI)
            bO:SetScript("OnMouseUp", dL)
            self.sizer_se = bO; local bP = bO:CreateTexture(nil, "BACKGROUND")
            self.line1 = bP; bP:SetWidth(14)
            bP:SetHeight(14)
            bP:SetPoint("BOTTOMRIGHT", -8, 8)
            bP:SetTexture(137057)
            local bQ = 0.1 * 14 / 17; bP:SetTexCoord(0.05 - bQ, 0.5, 0.05, 0.5 + bQ, 0.05, 0.5 - bQ, 0.5 + bQ, 0.5)
            local bR = bO:CreateTexture(nil, "BACKGROUND")
            self.line2 = bR; bR:SetWidth(8)
            bR:SetHeight(8)
            bR:SetPoint("BOTTOMRIGHT", -8, 8)
            bR:SetTexture(137057)
            local bQ = 0.1 * 8 / 17; bR:SetTexCoord(0.05 - bQ, 0.5, 0.05, 0.5 + bQ, 0.05, 0.5 - bQ, 0.5 + bQ, 0.5)
            local bS = CreateFrame("Frame", nil, F)
            bS:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", -25, 0)
            bS:SetPoint("BOTTOMLEFT", F, "BOTTOMLEFT", 0, 0)
            bS:SetHeight(25)
            bS:EnableMouse()
            bS:SetScript("OnMouseDown", dJ)
            bS:SetScript("OnMouseUp", dL)
            self.sizer_s = bS; local bT = CreateFrame("Frame", nil, F)
            bT:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", 0, 25)
            bT:SetPoint("TOPRIGHT", F, "TOPRIGHT", 0, 0)
            bT:SetWidth(25)
            bT:EnableMouse()
            bT:SetScript("OnMouseDown", dK)
            bT:SetScript("OnMouseUp", dL)
            self.sizer_e = bT; local a4 = CreateFrame("Frame", nil, F)
            self.content = a4; a4.obj = self; a4:SetPoint("TOPLEFT", F, "TOPLEFT", 12, -32)
            a4:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", -12, 13)
            l:RegisterAsContainer(self)
            return self
        end
        ; l:RegisterWidgetType(b4, a0, a1)
    end
end
; local function e6(...)
    local b4, a1 = "Button", 24; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local _G = _G; local PlaySound, CreateFrame, UIParent = PlaySound, CreateFrame, UIParent; local function bt(
        F, ...)
        l:ClearFocus()
        PlaySound(852)
        F.obj:Fire("OnClick", ...)
    end
    ; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetHeight(24)
            self:SetWidth(200)
            self:SetDisabled(false)
            self:SetAutoWidth(false)
            self:SetText()
        end,
        ["SetText"] = function(self, bF)
            self.text:SetText(bF)
            if self.autoWidth then self:SetWidth(self.text:GetStringWidth() + 30) end
        end,
        ["SetAutoWidth"] = function(self, e9)
            self.autoWidth = e9; if self.autoWidth then self:SetWidth(self.text:GetStringWidth() + 30) end
        end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then self.frame:Disable() else self.frame:Enable() end
        end }
    local function a0()
        local G = "AceGUI30Button" .. l:GetNextWidgetNum(b4)
        local F = CreateFrame("Button", G, UIParent, "UIPanelButtonTemplate")
        F:Hide()
        F:EnableMouse(true)
        F:SetScript("OnClick", bt)
        F:SetScript("OnEnter", e7)
        F:SetScript("OnLeave", e8)
        local bF = F:GetFontString()
        bF:ClearAllPoints()
        bF:SetPoint("TOPLEFT", 15, -1)
        bF:SetPoint("BOTTOMRIGHT", -15, 1)
        bF:SetJustifyV("MIDDLE")
        local B = { text = bF, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function ea(...)
    local b4, a1 = "CheckBox", 26; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local select, pairs = select, pairs; local PlaySound = PlaySound; local CreateFrame, UIParent = CreateFrame,
        UIParent; local function eb(self)
        local ec = self.image:GetTexture()
        self.text:ClearAllPoints()
        if not ec then
            self.text:SetPoint("LEFT", self.checkbg, "RIGHT")
            self.text:SetPoint("RIGHT")
        else
            self.text:SetPoint("LEFT", self.image, "RIGHT", 1, 0)
            self.text:SetPoint("RIGHT")
        end
    end
    ; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function ed(F)
        local self = F.obj; if not self.disabled then if self.image:GetTexture() then self.text:SetPoint("LEFT",
                    self.image, "RIGHT", 2, -1) else self.text:SetPoint("LEFT", self.checkbg, "RIGHT", 1, -1) end end
        ; l:ClearFocus()
    end
    ; local function ee(F)
        local self = F.obj; if not self.disabled then
            self:ToggleChecked()
            if self.checked then PlaySound(856) else PlaySound(857) end
            ; self:Fire("OnValueChanged", self.checked)
            eb(self)
        end
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetType()
            self:SetValue(false)
            self:SetTriState(nil)
            self:SetWidth(200)
            self:SetImage()
            self:SetDisabled(nil)
            self:SetDescription(nil)
        end,
        ["OnWidthSet"] = function(self, J) if self.desc then
                self.desc:SetWidth(J - 30)
                if self.desc:GetText() and self.desc:GetText() ~= "" then self:SetHeight(28 + self.desc:GetStringHeight()) end
            end end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.frame:Disable()
                self.text:SetTextColor(0.5, 0.5, 0.5)
                SetDesaturation(self.check, true)
                if self.desc then self.desc:SetTextColor(0.5, 0.5, 0.5) end
            else
                self.frame:Enable()
                self.text:SetTextColor(1, 1, 1)
                if self.tristate and self.checked == nil then SetDesaturation(self.check, true) else SetDesaturation(
                    self.check, false) end
                ; if self.desc then self.desc:SetTextColor(1, 1, 1) end
            end
        end,
        ["SetValue"] = function(self, M)
            local ef = self.check; self.checked = M; if M then
                SetDesaturation(ef, false)
                ef:Show()
            else if self.tristate and M == nil then
                    SetDesaturation(ef, true)
                    ef:Show()
                else
                    SetDesaturation(ef, false)
                    ef:Hide()
                end end
            ; self:SetDisabled(self.disabled)
        end, ["GetValue"] = function(self) return self.checked end,
        ["SetTriState"] = function(self, eg)
            self.tristate = eg; self:SetValue(self:GetValue())
        end,
        ["SetType"] = function(self, type)
            local eh = self.checkbg; local ef = self.check; local ei = self.highlight; local ej; if type == "radio" then
                ej = 16; eh:SetTexture(130843)
                eh:SetTexCoord(0, 0.25, 0, 1)
                ef:SetTexture(130843)
                ef:SetTexCoord(0.25, 0.5, 0, 1)
                ef:SetBlendMode("ADD")
                ei:SetTexture(130843)
                ei:SetTexCoord(0.5, 0.75, 0, 1)
            else
                ej = 24; eh:SetTexture(130755)
                eh:SetTexCoord(0, 1, 0, 1)
                ef:SetTexture(130751)
                ef:SetTexCoord(0, 1, 0, 1)
                ef:SetBlendMode("BLEND")
                ei:SetTexture(130753)
                ei:SetTexCoord(0, 1, 0, 1)
            end
            ; eh:SetHeight(ej)
            eh:SetWidth(ej)
        end,
        ["ToggleChecked"] = function(self)
            local M = self:GetValue()
            if self.tristate then if M then self:SetValue(nil) elseif M == nil then self:SetValue(false) else self
                        :SetValue(true) end else self:SetValue(not self:GetValue()) end
        end, ["SetLabel"] = function(self, bf) self.text:SetText(bf) end,
        ["SetDescription"] = function(self, ek) if ek then
                if not self.desc then
                    local ek = self.frame:CreateFontString(nil, "OVERLAY", "GameFontHighlightSmall")
                    ek:ClearAllPoints()
                    ek:SetPoint("TOPLEFT", self.checkbg, "TOPRIGHT", 5, -21)
                    ek:SetWidth(self.frame.width - 30)
                    ek:SetPoint("RIGHT", self.frame, "RIGHT", -30, 0)
                    ek:SetJustifyH("LEFT")
                    ek:SetJustifyV("TOP")
                    self.desc = ek
                end
                ; self.desc:Show()
                self.desc:SetText(ek)
                self:SetHeight(28 + self.desc:GetStringHeight())
            else
                if self.desc then
                    self.desc:SetText("")
                    self.desc:Hide()
                end
                ; self:SetHeight(24)
            end end,
        ["SetImage"] = function(self, dv, ...)
            local el = self.image; el:SetTexture(dv)
            if el:GetTexture() then
                local aI = select("#", ...)
                if aI == 4 or aI == 8 then el:SetTexCoord(...) else el:SetTexCoord(0, 1, 0, 1) end
            end
            ; eb(self)
        end }
    local function a0()
        local F = CreateFrame("Button", nil, UIParent)
        F:Hide()
        F:EnableMouse(true)
        F:SetScript("OnEnter", e7)
        F:SetScript("OnLeave", e8)
        F:SetScript("OnMouseDown", ed)
        F:SetScript("OnMouseUp", ee)
        local eh = F:CreateTexture(nil, "ARTWORK")
        eh:SetWidth(24)
        eh:SetHeight(24)
        eh:SetPoint("TOPLEFT")
        eh:SetTexture(130755)
        local ef = F:CreateTexture(nil, "OVERLAY")
        ef:SetAllPoints(eh)
        ef:SetTexture(130751)
        local bF = F:CreateFontString(nil, "OVERLAY", "GameFontHighlight")
        bF:SetJustifyH("LEFT")
        bF:SetHeight(18)
        bF:SetPoint("LEFT", eh, "RIGHT")
        bF:SetPoint("RIGHT")
        local ei = F:CreateTexture(nil, "HIGHLIGHT")
        ei:SetTexture(130753)
        ei:SetBlendMode("ADD")
        ei:SetAllPoints(eh)
        local el = F:CreateTexture(nil, "OVERLAY")
        el:SetHeight(16)
        el:SetWidth(16)
        el:SetPoint("LEFT", eh, "RIGHT", 1, 0)
        local B = { checkbg = eh, check = ef, text = bF, highlight = ei, image = el, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function em(...)
    local b4, a1 = "ColorPicker", 25; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local CreateFrame, UIParent = CreateFrame, UIParent; local function en(self, eo, ep, eq, er,
                                                                                                  es)
        if not self.HasAlpha then er = 1 end
        ; self:SetColor(eo, ep, eq, er)
        if ColorPickerFrame:IsVisible() then self:Fire("OnValueChanged", eo, ep, eq, er) else if es then self:Fire(
                "OnValueConfirmed", eo, ep, eq, er) end end
    end
    ; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function et(F)
        ColorPickerFrame:Hide()
        local self = F.obj; if not self.disabled then
            ColorPickerFrame:SetFrameStrata("FULLSCREEN_DIALOG")
            ColorPickerFrame:SetFrameLevel(F:GetFrameLevel() + 10)
            ColorPickerFrame:SetClampedToScreen(true)
            ColorPickerFrame.func = function()
                local eo, ep, eq = ColorPickerFrame:GetColorRGB()
                local er = 1 - OpacitySliderFrame:GetValue()
                en(self, eo, ep, eq, er)
            end; ColorPickerFrame.hasOpacity = self.HasAlpha; ColorPickerFrame.opacityFunc = function()
                local eo, ep, eq = ColorPickerFrame:GetColorRGB()
                local er = 1 - OpacitySliderFrame:GetValue()
                en(self, eo, ep, eq, er, true)
            end; local eo, ep, eq, er = self.r, self.g, self.b, self.a; if self.HasAlpha then ColorPickerFrame.opacity = 1 -
                (er or 0) end
            ; ColorPickerFrame:SetColorRGB(eo, ep, eq)
            ColorPickerFrame.cancelFunc = function() en(self, eo, ep, eq, er, true) end; ColorPickerFrame:Show()
        end
        ; l:ClearFocus()
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetHeight(24)
            self:SetWidth(200)
            self:SetHasAlpha(false)
            self:SetColor(0, 0, 0, 1)
            self:SetDisabled(nil)
            self:SetLabel(nil)
        end, ["SetLabel"] = function(self, bF) self.text:SetText(bF) end,
        ["SetColor"] = function(self, eo, ep, eq, er)
            self.r = eo; self.g = ep; self.b = eq; self.a = er or 1; self.colorSwatch:SetVertexColor(eo, ep, eq, er)
        end, ["SetHasAlpha"] = function(self, eu) self.HasAlpha = eu end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if self.disabled then
                self.frame:Disable()
                self.text:SetTextColor(0.5, 0.5, 0.5)
            else
                self.frame:Enable()
                self.text:SetTextColor(1, 1, 1)
            end
        end }
    local function a0()
        local F = CreateFrame("Button", nil, UIParent)
        F:Hide()
        F:EnableMouse(true)
        F:SetScript("OnEnter", e7)
        F:SetScript("OnLeave", e8)
        F:SetScript("OnClick", et)
        local ev = F:CreateTexture(nil, "OVERLAY")
        ev:SetWidth(19)
        ev:SetHeight(19)
        ev:SetTexture(130939)
        ev:SetPoint("LEFT")
        local ew = F:CreateTexture(nil, "BACKGROUND")
        ev.background = ew; ew:SetWidth(16)
        ew:SetHeight(16)
        ew:SetColorTexture(1, 1, 1)
        ew:SetPoint("CENTER", ev)
        ew:Show()
        local ex = F:CreateTexture(nil, "BACKGROUND")
        ev.checkers = ex; ex:SetWidth(14)
        ex:SetHeight(14)
        ex:SetTexture(188523)
        ex:SetTexCoord(.25, 0, 0.5, .25)
        ex:SetDesaturated(true)
        ex:SetVertexColor(1, 1, 1, 0.75)
        ex:SetPoint("CENTER", ev)
        ex:Show()
        local bF = F:CreateFontString(nil, "OVERLAY", "GameFontHighlight")
        bF:SetHeight(24)
        bF:SetJustifyH("LEFT")
        bF:SetTextColor(1, 1, 1)
        bF:SetPoint("LEFT", ev, "RIGHT", 2, 0)
        bF:SetPoint("RIGHT")
        local B = { colorSwatch = ev, text = bF, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function ey(...)
    local l = LibStub("AceGUI-3.0")
    local min, max, floor = math.min, math.max, math.floor; local select, pairs, ipairs, type, tostring = select, pairs,
        ipairs, type, tostring; local ez = table.sort; local PlaySound = PlaySound; local UIParent, CreateFrame =
    UIParent, CreateFrame; local _G = _G; local function eA(E, ...)
        local T = 1; local P = select(T, ...)
        while P do
            P:SetFrameLevel(E:GetFrameLevel() + 1)
            eA(P, P:GetChildren())
            T = T + 1; P = select(T, ...)
        end
    end
    ; local function eB(eC, E, ...)
        local T = 1; local P = select(T, ...)
        E:SetFrameStrata(eC)
        while P do
            eB(eC, P, P:GetChildren())
            T = T + 1; P = select(T, ...)
        end
    end
    ; do
        local eD = "Dropdown-Pullout"
        local eE = 5; local eF = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground",
            edgeFile = "Interface\\DialogFrame\\UI-DialogBox-Border", edgeSize = 32, tileSize = 32, tile = true,
            insets = { left = 11, right = 12, top = 12, bottom = 11 } }
        local eG = { bgFile = "Interface\\Buttons\\UI-SliderBar-Background",
            edgeFile = "Interface\\Buttons\\UI-SliderBar-Border", tile = true, tileSize = 8, edgeSize = 8,
            insets = { left = 3, right = 3, top = 3, bottom = 3 } }
        local eH = 200; local eI = 600; local function eJ(eK)
            local self = eK.pullout; for C, b2 in ipairs(self.items) do if b2.CloseMenu and b2 ~= eK then b2:CloseMenu() end end
        end
        ; local function eL(Y, M) Y.obj:MoveScroll(M) end
        ; local function d6(Y, M) Y.obj:SetScroll(M) end
        ; local function eM(Y) Y.obj:FixScroll() end
        ; local function eN(self, M)
            local bl = self.scrollStatus; local F, P = self.scrollFrame, self.itemFrame; local K, b_ = F:GetHeight(),
                P:GetHeight()
            local c0; if K > b_ then c0 = 0 else c0 = floor((b_ - K) / 1000 * M) end
            ; P:ClearAllPoints()
            P:SetPoint("TOPLEFT", F, "TOPLEFT", 0, c0)
            P:SetPoint("TOPRIGHT", F, "TOPRIGHT", self.slider:IsShown() and -12 or 0, c0)
            bl.offset = c0; bl.scrollvalue = M
        end
        ; local function eO(self, M)
            local bl = self.scrollStatus; local F, P = self.scrollFrame, self.itemFrame; local K, b_ = F:GetHeight(),
                P:GetHeight()
            if K > b_ then self.slider:Hide() else
                self.slider:Show()
                local c1 = K - b_; local c2 = 1; if M < 0 then c2 = -1 end
                ; self.slider:SetValue(min(max(bl.scrollvalue + c2 * 1000 / (c1 / 45), 0), 1000))
            end
        end
        ; local function eP(self)
            local bl = self.scrollStatus; local F, P = self.scrollFrame, self.itemFrame; local K, b_ = F:GetHeight(),
                P:GetHeight()
            local c0 = bl.offset or 0; if b_ < K then
                self.slider:Hide()
                P:SetPoint("TOPRIGHT", F, "TOPRIGHT", 0, c0)
                self.slider:SetValue(0)
            else
                self.slider:Show()
                local M = c0 / (b_ - K) * 1000; if M > 1000 then M = 1000 end
                ; self.slider:SetValue(M)
                self:SetScroll(M)
                if M < 1000 then
                    P:ClearAllPoints()
                    P:SetPoint("TOPLEFT", F, "TOPLEFT", 0, c0)
                    P:SetPoint("TOPRIGHT", F, "TOPRIGHT", -12, c0)
                    bl.offset = c0
                end
            end
        end
        ; local function dQ(self) self.frame:SetParent(UIParent) end
        ; local function dR(self)
            self:Clear()
            self.frame:ClearAllPoints()
            self.frame:Hide()
        end
        ; local function eQ(self, eK)
            self.items[#self.items + 1] = eK; local eR = #self.items * 16; self.itemFrame:SetHeight(eR)
            self.frame:SetHeight(min(eR + 34, self.maxHeight))
            eK.frame:SetPoint("LEFT", self.itemFrame, "LEFT")
            eK.frame:SetPoint("RIGHT", self.itemFrame, "RIGHT")
            eK:SetPullout(self)
            eK:SetOnEnter(eJ)
        end
        ; local function eS(self, eT, eU, eV, bQ, eW)
            local eX = self.items; local F = self.frame; local eY = self.itemFrame; F:SetPoint(eT, eU, eV, bQ, eW)
            local K = 8; for T, eK in pairs(eX) do
                eK:SetPoint("TOP", eY, "TOP", 0, -2 + (T - 1) * -16)
                eK:Show()
                K = K + 16
            end
            ; eY:SetHeight(K)
            eB("TOOLTIP", F, F:GetChildren())
            F:Show()
            self:Fire("OnOpen")
        end
        ; local function eZ(self)
            self.frame:Hide()
            self:Fire("OnClose")
        end
        ; local function e_(self)
            local eX = self.items; for T, eK in pairs(eX) do
                l:Release(eK)
                eX[T] = nil
            end
        end
        ; local function f0(self) return ipairs(self.items) end
        ; local function f1(self, aq) self.hideOnLeave = aq end
        ; local function f2(self, K)
            self.maxHeight = K or eI; if self.frame:GetHeight() > K then self.frame:SetHeight(K) elseif self.itemFrame:GetHeight() + 34 < K then
                self.frame:SetHeight(self.itemFrame:GetHeight() + 34) end
        end
        ; local function f3(self) return 6 + (self.slider:IsShown() and 12 or 0) end
        ; local function f4(self) return 6 end
        ; local function a0()
            local f5 = l:GetNextWidgetNum(eD)
            local F = CreateFrame("Frame", "AceGUI30Pullout" .. f5, UIParent,
                BackdropTemplateMixin and "BackdropTemplate" or nil)
            local self = {}
            self.count = f5; self.type = eD; self.frame = F; F.obj = self; self.OnAcquire = dQ; self.OnRelease = dR; self.AddItem =
            eQ; self.Open = eS; self.Close = eZ; self.Clear = e_; self.IterateItems = f0; self.SetHideOnLeave = f1; self.SetScroll =
            eN; self.MoveScroll = eO; self.FixScroll = eP; self.SetMaxHeight = f2; self.GetRightBorderWidth = f3; self.GetLeftBorderWidth =
            f4; self.items = {}
            self.scrollStatus = { scrollvalue = 0 }
            self.maxHeight = eI; F:SetBackdrop(eF)
            F:SetBackdropColor(0, 0, 0)
            F:SetFrameStrata("FULLSCREEN_DIALOG")
            F:SetClampedToScreen(true)
            F:SetWidth(eH)
            F:SetHeight(self.maxHeight)
            local f6 = CreateFrame("ScrollFrame", nil, F)
            local eY = CreateFrame("Frame", nil, f6)
            self.scrollFrame = f6; self.itemFrame = eY; f6.obj = self; eY.obj = self; local f7 = CreateFrame("Slider",
                "AceGUI30PulloutScrollbar" .. f5, f6, BackdropTemplateMixin and "BackdropTemplate" or nil)
            f7:SetOrientation("VERTICAL")
            f7:SetHitRectInsets(0, 0, -10, 0)
            f7:SetBackdrop(eG)
            f7:SetWidth(8)
            f7:SetThumbTexture("Interface\\Buttons\\UI-SliderBar-Button-Vertical")
            f7:SetFrameStrata("FULLSCREEN_DIALOG")
            self.slider = f7; f7.obj = self; f6:SetScrollChild(eY)
            f6:SetPoint("TOPLEFT", F, "TOPLEFT", 6, -12)
            f6:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", -6, 12)
            f6:EnableMouseWheel(true)
            f6:SetScript("OnMouseWheel", eL)
            f6:SetScript("OnSizeChanged", eM)
            f6:SetToplevel(true)
            f6:SetFrameStrata("FULLSCREEN_DIALOG")
            eY:SetPoint("TOPLEFT", f6, "TOPLEFT", 0, 0)
            eY:SetPoint("TOPRIGHT", f6, "TOPRIGHT", -12, 0)
            eY:SetHeight(400)
            eY:SetToplevel(true)
            eY:SetFrameStrata("FULLSCREEN_DIALOG")
            f7:SetPoint("TOPLEFT", f6, "TOPRIGHT", -16, 0)
            f7:SetPoint("BOTTOMLEFT", f6, "BOTTOMRIGHT", -16, 0)
            f7:SetScript("OnValueChanged", d6)
            f7:SetMinMaxValues(0, 1000)
            f7:SetValueStep(1)
            f7:SetValue(0)
            f6:Show()
            eY:Show()
            f7:Hide()
            self:FixScroll()
            l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE)
    end
    ; do
        local eD = "Dropdown"
        local eE = 35; local function e7(Y)
            Y.obj.button:LockHighlight()
            Y.obj:Fire("OnEnter")
        end
        ; local function e8(Y)
            Y.obj.button:UnlockHighlight()
            Y.obj:Fire("OnLeave")
        end
        ; local function f8(Y)
            local self = Y.obj; if self.open then self.pullout:Close() end
        end
        ; local function f9(Y)
            local self = Y.obj; PlaySound(856)
            if self.open then
                self.open = nil; self.pullout:Close()
                l:ClearFocus()
            else
                self.open = true; self.pullout:SetWidth(self.pulloutWidth or self.frame:GetWidth())
                self.pullout:Open("TOPLEFT", self.frame, "BOTTOMLEFT", 0, self.label:IsShown() and -2 or 0)
                l:SetFocus(self)
            end
        end
        ; local function fa(Y)
            local self = Y.userdata.obj; local M = self.value; if not self.multiselect then for T, eK in Y:IterateItems() do
                    eK:SetValue(eK.userdata.value == M) end end
            ; self.open = true; self:Fire("OnOpened")
        end
        ; local function fb(Y)
            local self = Y.userdata.obj; self.open = nil; self:Fire("OnClosed")
        end
        ; local function fc(self)
            local bF; for T, B in self.pullout:IterateItems() do if B.type == "Dropdown-Item-Toggle" then if B:GetValue() then if bF then bF =
                            bF .. ", " .. B:GetText() else bF = B:GetText() end end end end
            ; self:SetText(bF)
        end
        ; local function fd(Y, bj, fe)
            local self = Y.userdata.obj; if self.multiselect then
                self:Fire("OnValueChanged", Y.userdata.value, fe)
                fc(self)
            else
                if fe then
                    self:SetValue(Y.userdata.value)
                    self:Fire("OnValueChanged", Y.userdata.value)
                else Y:SetValue(true) end
                ; if self.open then self.pullout:Close() end
            end
        end
        ; local function dQ(self)
            local ff = l:Create("Dropdown-Pullout")
            self.pullout = ff; ff.userdata.obj = self; ff:SetCallback("OnClose", fb)
            ff:SetCallback("OnOpen", fa)
            self.pullout.frame:SetFrameLevel(self.frame:GetFrameLevel() + 1)
            eA(self.pullout.frame, self.pullout.frame:GetChildren())
            self:SetHeight(44)
            self:SetWidth(200)
            self:SetLabel()
            self:SetPulloutWidth(nil)
            self.list = {}
        end
        ; local function dR(self)
            if self.open then self.pullout:Close() end
            ; l:Release(self.pullout)
            self.pullout = nil; self:SetText("")
            self:SetDisabled(false)
            self:SetMultiselect(false)
            self.value = nil; self.list = nil; self.open = nil; self.hasClose = nil; self.frame:ClearAllPoints()
            self.frame:Hide()
        end
        ; local function fg(self, ch)
            self.disabled = ch; if ch then
                self.text:SetTextColor(0.5, 0.5, 0.5)
                self.button:Disable()
                self.button_cover:Disable()
                self.label:SetTextColor(0.5, 0.5, 0.5)
            else
                self.button:Enable()
                self.button_cover:Enable()
                self.label:SetTextColor(1, .82, 0)
                self.text:SetTextColor(1, 1, 1)
            end
        end
        ; local function fh(self) if self.open then self.pullout:Close() end end
        ; local function fi(self, bF) self.text:SetText(bF or "") end
        ; local function fj(self, bF) if bF and bF ~= "" then
                self.label:SetText(bF)
                self.label:Show()
                self.dropdown:SetPoint("TOPLEFT", self.frame, "TOPLEFT", -15, -14)
                self:SetHeight(40)
                self.alignoffset = 26
            else
                self.label:SetText("")
                self.label:Hide()
                self.dropdown:SetPoint("TOPLEFT", self.frame, "TOPLEFT", -15, 0)
                self:SetHeight(26)
                self.alignoffset = 12
            end end
        ; local function fk(self, M)
            self:SetText(self.list[M] or "")
            self.value = M
        end
        ; local function fl(self) return self.value end
        ; local function fm(self, eK, M)
            if not self.multiselect then return end
            ; for T, B in self.pullout:IterateItems() do if B.userdata.value == eK then if B.SetValue then B:SetValue(M) end end end
            ; fc(self)
        end
        ; local function fn(self, eK, ch) for T, B in self.pullout:IterateItems() do if B.userdata.value == eK then B
                        :SetDisabled(ch) end end end
        ; local function fo(self, M, bF, fp)
            if not fp then fp = "Dropdown-Item-Toggle" end
            ; local fq = l:GetWidgetVersion(fp)
            if not fq then error(("The given item type, %q, does not exist within AceGUI-3.0"):format(tostring(fp)), 2) end
            ; local eK = l:Create(fp)
            eK:SetText(bF)
            eK.userdata.obj = self; eK.userdata.value = M; eK:SetCallback("OnValueChanged", fd)
            self.pullout:AddItem(eK)
        end
        ; local function fr(self) if not self.hasClose then
                local e5 = l:Create("Dropdown-Item-Execute")
                e5:SetText(CLOSE)
                self.pullout:AddItem(e5)
                self.hasClose = true
            end end
        ; local fs = {}
        local function ft(bQ, eW)
            local fu, fv = tonumber(bQ), tonumber(eW)
            if fu and fv then return fu < fv else return tostring(bQ) < tostring(eW) end
        end
        ; local function fw(self, bm, bn, fp)
            self.list = bm or {}
            self.pullout:Clear()
            self.hasClose = nil; if not bm then return end
            ; if type(bn) ~= "table" then
                for b2 in pairs(bm) do fs[#fs + 1] = b2 end
                ; ez(fs, ft)
                for T, L in ipairs(fs) do
                    fo(self, L, bm[L], fp)
                    fs[T] = nil
                end
            else for T, L in ipairs(bn) do fo(self, L, bm[L], fp) end end
            ; if self.multiselect then
                fc(self)
                fr(self)
            end
        end
        ; local function eQ(self, M, bF, fp)
            self.list[M] = bF; fo(self, M, bF, fp)
        end
        ; local function fx(self, fy)
            self.multiselect = fy; if fy then
                fc(self)
                fr(self)
            end
        end
        ; local function fz(self) return self.multiselect end
        ; local function fA(self, J) self.pulloutWidth = J end
        ; local function a0()
            local f5 = l:GetNextWidgetNum(eD)
            local F = CreateFrame("Frame", nil, UIParent)
            local bq = CreateFrame("Frame", "AceGUI30DropDown" .. f5, F, "UIDropDownMenuTemplate")
            local self = {}
            self.type = eD; self.frame = F; self.dropdown = bq; self.count = f5; F.obj = self; bq.obj = self; self.OnRelease =
            dR; self.OnAcquire = dQ; self.ClearFocus = fh; self.SetText = fi; self.SetValue = fk; self.GetValue = fl; self.SetList =
            fw; self.SetLabel = fj; self.SetDisabled = fg; self.AddItem = eQ; self.SetMultiselect = fx; self.GetMultiselect =
            fz; self.SetItemValue = fm; self.SetItemDisabled = fn; self.SetPulloutWidth = fA; self.alignoffset = 26; F
                :SetScript("OnHide", f8)
            bq:ClearAllPoints()
            bq:SetPoint("TOPLEFT", F, "TOPLEFT", -15, 0)
            bq:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", 17, 0)
            bq:SetScript("OnHide", nil)
            local e3 = _G[bq:GetName() .. "Left"]
            local fB = _G[bq:GetName() .. "Middle"]
            local e4 = _G[bq:GetName() .. "Right"]
            fB:ClearAllPoints()
            e4:ClearAllPoints()
            fB:SetPoint("LEFT", e3, "RIGHT", 0, 0)
            fB:SetPoint("RIGHT", e4, "LEFT", 0, 0)
            e4:SetPoint("TOPRIGHT", bq, "TOPRIGHT", 0, 17)
            local cN = _G[bq:GetName() .. "Button"]
            self.button = cN; cN.obj = self; cN:SetScript("OnEnter", e7)
            cN:SetScript("OnLeave", e8)
            cN:SetScript("OnClick", f9)
            local fC = CreateFrame("BUTTON", nil, self.frame)
            self.button_cover = fC; fC.obj = self; fC:SetPoint("TOPLEFT", self.frame, "BOTTOMLEFT", 0, 25)
            fC:SetPoint("BOTTOMRIGHT", self.frame, "BOTTOMRIGHT")
            fC:SetScript("OnEnter", e7)
            fC:SetScript("OnLeave", e8)
            fC:SetScript("OnClick", f9)
            local bF = _G[bq:GetName() .. "Text"]
            self.text = bF; bF.obj = self; bF:ClearAllPoints()
            bF:SetPoint("RIGHT", e4, "RIGHT", -43, 2)
            bF:SetPoint("LEFT", e3, "LEFT", 25, 2)
            local bf = F:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
            bf:SetPoint("TOPLEFT", F, "TOPLEFT", 0, 0)
            bf:SetPoint("TOPRIGHT", F, "TOPRIGHT", 0, 0)
            bf:SetJustifyH("LEFT")
            bf:SetHeight(18)
            bf:Hide()
            self.label = bf; l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE)
    end
end
; local function fD(...)
    local l = LibStub("AceGUI-3.0")
    local select, assert = select, assert; local PlaySound = PlaySound; local CreateFrame = CreateFrame; local function eA(
        E, ...)
        local T = 1; local P = select(T, ...)
        while P do
            P:SetFrameLevel(E:GetFrameLevel() + 1)
            eA(P, P:GetChildren())
            T = T + 1; P = select(T, ...)
        end
    end
    ; local function eB(eC, E, ...)
        local T = 1; local P = select(T, ...)
        E:SetFrameStrata(eC)
        while P do
            eB(eC, P, P:GetChildren())
            T = T + 1; P = select(T, ...)
        end
    end
    ; local fE = { version = 1000, counter = 0 }
    function fE.Frame_OnEnter(Y)
        local self = Y.obj; if self.useHighlight then self.highlight:Show() end
        ; self:Fire("OnEnter")
        if self.specialOnEnter then self.specialOnEnter(self) end
    end

    ; function fE.Frame_OnLeave(Y)
        local self = Y.obj; self.highlight:Hide()
        self:Fire("OnLeave")
        if self.specialOnLeave then self.specialOnLeave(self) end
    end

    ; function fE.OnAcquire(self)
        self.frame:SetToplevel(true)
        self.frame:SetFrameStrata("FULLSCREEN_DIALOG")
    end

    ; function fE.OnRelease(self)
        self:SetDisabled(false)
        self.pullout = nil; self.frame:SetParent(nil)
        self.frame:ClearAllPoints()
        self.frame:Hide()
    end

    ; function fE.SetPullout(self, ff)
        self.pullout = ff; self.frame:SetParent(nil)
        self.frame:SetParent(ff.itemFrame)
        self.parent = ff.itemFrame; eA(ff.itemFrame, ff.itemFrame:GetChildren())
    end

    ; function fE.SetText(self, bF) self.text:SetText(bF or "") end

    ; function fE.GetText(self) return self.text:GetText() end

    ; function fE.SetPoint(self, ...) self.frame:SetPoint(...) end

    ; function fE.Show(self) self.frame:Show() end

    ; function fE.Hide(self) self.frame:Hide() end

    ; function fE.SetDisabled(self, ch)
        self.disabled = ch; if ch then
            self.useHighlight = false; self.text:SetTextColor(.5, .5, .5)
        else
            self.useHighlight = true; self.text:SetTextColor(1, 1, 1)
        end
    end

    ; function fE.SetOnLeave(self, v) self.specialOnLeave = v end

    ; function fE.SetOnEnter(self, v) self.specialOnEnter = v end

    ; function fE.Create(type)
        local f5 = l:GetNextWidgetNum(type)
        local F = CreateFrame("Button", "AceGUI30DropDownItem" .. f5)
        local self = {}
        self.frame = F; F.obj = self; self.type = type; self.useHighlight = true; F:SetHeight(17)
        F:SetFrameStrata("FULLSCREEN_DIALOG")
        local bF = F:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
        bF:SetTextColor(1, 1, 1)
        bF:SetJustifyH("LEFT")
        bF:SetPoint("TOPLEFT", F, "TOPLEFT", 18, 0)
        bF:SetPoint("BOTTOMRIGHT", F, "BOTTOMRIGHT", -8, 0)
        self.text = bF; local ei = F:CreateTexture(nil, "OVERLAY")
        ei:SetTexture(136810)
        ei:SetBlendMode("ADD")
        ei:SetHeight(14)
        ei:ClearAllPoints()
        ei:SetPoint("RIGHT", F, "RIGHT", -3, 0)
        ei:SetPoint("LEFT", F, "LEFT", 5, 0)
        ei:Hide()
        self.highlight = ei; local ef = F:CreateTexture("OVERLAY")
        ef:SetWidth(16)
        ef:SetHeight(16)
        ef:SetPoint("LEFT", F, "LEFT", 3, -1)
        ef:SetTexture(130751)
        ef:Hide()
        self.check = ef; local fF = F:CreateTexture("OVERLAY")
        fF:SetWidth(16)
        fF:SetHeight(16)
        fF:SetPoint("RIGHT", F, "RIGHT", -3, -1)
        fF:SetTexture(130940)
        fF:Hide()
        self.sub = fF; F:SetScript("OnEnter", fE.Frame_OnEnter)
        F:SetScript("OnLeave", fE.Frame_OnLeave)
        self.OnAcquire = fE.OnAcquire; self.OnRelease = fE.OnRelease; self.SetPullout = fE.SetPullout; self.GetText = fE
        .GetText; self.SetText = fE.SetText; self.SetDisabled = fE.SetDisabled; self.SetPoint = fE.SetPoint; self.Show =
        fE.Show; self.Hide = fE.Hide; self.SetOnLeave = fE.SetOnLeave; self.SetOnEnter = fE.SetOnEnter; return self
    end

    ; local fG = LibStub:NewLibrary("AceGUI-3.0-DropDown-ItemBase", fE.version)
    if fG then fG.GetItemBase = function() return fE end end
    ; do
        local eD = "Dropdown-Item-Header"
        local eE = 1; local function eJ(Y)
            local self = Y.obj; self:Fire("OnEnter")
            if self.specialOnEnter then self.specialOnEnter(self) end
        end
        ; local function fH(Y)
            local self = Y.obj; self:Fire("OnLeave")
            if self.specialOnLeave then self.specialOnLeave(self) end
        end
        ; local function fg(self, ch)
            fE.SetDisabled(self, ch)
            if not ch then self.text:SetTextColor(1, 1, 0) end
        end
        ; local function a0()
            local self = fE.Create(eD)
            self.SetDisabled = fg; self.frame:SetScript("OnEnter", eJ)
            self.frame:SetScript("OnLeave", fH)
            self.text:SetTextColor(1, 1, 0)
            l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE + fE.version)
    end
    ; do
        local eD = "Dropdown-Item-Execute"
        local eE = 1; local function fI(Y, cN)
            local self = Y.obj; if self.disabled then return end
            ; self:Fire("OnClick")
            if self.pullout then self.pullout:Close() end
        end
        ; local function a0()
            local self = fE.Create(eD)
            self.frame:SetScript("OnClick", fI)
            l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE + fE.version)
    end
    ; do
        local eD = "Dropdown-Item-Toggle"
        local eE = 4; local function fJ(self) if self.value then self.check:Show() else self.check:Hide() end end
        ; local function dR(self)
            fE.OnRelease(self)
            self:SetValue(nil)
        end
        ; local function fI(Y, cN)
            local self = Y.obj; if self.disabled then return end
            ; self.value = not self.value; if self.value then PlaySound(856) else PlaySound(857) end
            ; fJ(self)
            self:Fire("OnValueChanged", self.value)
        end
        ; local function fk(self, M)
            self.value = M; fJ(self)
        end
        ; local function fl(self) return self.value end
        ; local function a0()
            local self = fE.Create(eD)
            self.frame:SetScript("OnClick", fI)
            self.SetValue = fk; self.GetValue = fl; self.OnRelease = dR; l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE + fE.version)
    end
    ; do
        local eD = "Dropdown-Item-Menu"
        local eE = 2; local function eJ(Y)
            local self = Y.obj; self:Fire("OnEnter")
            if self.specialOnEnter then self.specialOnEnter(self) end
            ; self.highlight:Show()
            if not self.disabled and self.submenu then self.submenu:Open("TOPLEFT", self.frame, "TOPRIGHT",
                    self.pullout:GetRightBorderWidth(), 0, self.frame:GetFrameLevel() + 100) end
        end
        ; local function b6(Y)
            local self = Y.obj; if self.submenu then self.submenu:Close() end
        end
        ; local function fK(self, fL)
            assert(fL.type == "Dropdown-Pullout")
            self.submenu = fL
        end
        ; local function fM(self) self.submenu:Close() end
        ; local function a0()
            local self = fE.Create(eD)
            self.sub:Show()
            self.frame:SetScript("OnEnter", eJ)
            self.frame:SetScript("OnHide", b6)
            self.SetMenu = fK; self.CloseMenu = fM; l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE + fE.version)
    end
    ; do
        local eD = "Dropdown-Item-Separator"
        local eE = 2; local function fg(self, ch)
            fE.SetDisabled(self, ch)
            self.useHighlight = false
        end
        ; local function a0()
            local self = fE.Create(eD)
            self.SetDisabled = fg; local cL = self.frame:CreateTexture(nil, "OVERLAY")
            cL:SetHeight(1)
            cL:SetColorTexture(.5, .5, .5)
            cL:SetPoint("LEFT", self.frame, "LEFT", 10, 0)
            cL:SetPoint("RIGHT", self.frame, "RIGHT", -10, 0)
            self.text:Hide()
            self.useHighlight = false; l:RegisterAsWidget(self)
            return self
        end
        ; l:RegisterWidgetType(eD, a0, eE + fE.version)
    end
end
; local function fN(...)
    local b4, a1 = "EditBox", 28; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local tostring, pairs = tostring, pairs; local PlaySound = PlaySound; local GetCursorInfo, ClearCursor, GetSpellInfo =
    GetCursorInfo, ClearCursor, GetSpellInfo; local CreateFrame, UIParent = CreateFrame, UIParent; local _G = _G; if not AceGUIEditBoxInsertLink then
        hooksecurefunc("ChatEdit_InsertLink", function(...) return _G.AceGUIEditBoxInsertLink(...) end) end
    ; function _G.AceGUIEditBoxInsertLink(bF) for T = 1, l:GetWidgetCount(b4) do
            local fO = _G["AceGUI-3.0EditBox" .. T]
            if fO and fO:IsVisible() and fO:HasFocus() then
                fO:Insert(bF)
                return true
            end
        end end

    ; local function fP(self) if not self.disablebutton then
            self.button:Show()
            self.editbox:SetTextInsets(0, 20, 3, 3)
        end end
    ; local function fQ(self)
        self.button:Hide()
        self.editbox:SetTextInsets(0, 0, 3, 3)
    end
    ; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function fR(F)
        F.obj.editbox:SetFocus()
        F:SetScript("OnShow", nil)
    end
    ; local function fS(F) l:ClearFocus() end
    ; local function fT(F)
        local self = F.obj; local M = F:GetText()
        local b8 = self:Fire("OnEnterPressed", M)
        if not b8 then
            PlaySound(856)
            fQ(self)
        end
    end
    ; local function fU(F)
        local self = F.obj; local type, co, fV = GetCursorInfo()
        local G; if type == "item" then G = fV elseif type == "spell" then G = GetSpellInfo(co, fV) elseif type == "macro" then G =
            GetMacroInfo(co) end
        ; if G then
            self:SetText(G)
            self:Fire("OnEnterPressed", G)
            ClearCursor()
            fQ(self)
            l:ClearFocus()
        end
    end
    ; local function fW(F)
        local self = F.obj; local M = F:GetText()
        if tostring(M) ~= tostring(self.lasttext) then
            self:Fire("OnTextChanged", M)
            self.lasttext = M; fP(self)
        end
    end
    ; local function fX(F) l:SetFocus(F.obj) end
    ; local function bt(F)
        local fO = F.obj.editbox; fO:ClearFocus()
        fT(fO)
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetWidth(200)
            self:SetDisabled(false)
            self:SetLabel()
            self:SetText()
            self:DisableButton(false)
            self:SetMaxLetters(0)
        end, ["OnRelease"] = function(self) self:ClearFocus() end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.editbox:EnableMouse(false)
                self.editbox:ClearFocus()
                self.editbox:SetTextColor(0.5, 0.5, 0.5)
                self.label:SetTextColor(0.5, 0.5, 0.5)
            else
                self.editbox:EnableMouse(true)
                self.editbox:SetTextColor(1, 1, 1)
                self.label:SetTextColor(1, .82, 0)
            end
        end,
        ["SetText"] = function(self, bF)
            self.lasttext = bF or ""
            self.editbox:SetText(bF or "")
            self.editbox:SetCursorPosition(0)
            fQ(self)
        end, ["GetText"] = function(self, bF) return self.editbox:GetText() end,
        ["SetLabel"] = function(self, bF) if bF and bF ~= "" then
                self.label:SetText(bF)
                self.label:Show()
                self.editbox:SetPoint("TOPLEFT", self.frame, "TOPLEFT", 7, -18)
                self:SetHeight(44)
                self.alignoffset = 30
            else
                self.label:SetText("")
                self.label:Hide()
                self.editbox:SetPoint("TOPLEFT", self.frame, "TOPLEFT", 7, 0)
                self:SetHeight(26)
                self.alignoffset = 12
            end end, ["DisableButton"] = function(self, ch)
        self.disablebutton = ch; if ch then fQ(self) end
    end, ["SetMaxLetters"] = function(self, c3) self.editbox:SetMaxLetters(c3 or 0) end,
        ["ClearFocus"] = function(self)
            self.editbox:ClearFocus()
            self.frame:SetScript("OnShow", nil)
        end,
        ["SetFocus"] = function(self)
            self.editbox:SetFocus()
            if not self.frame:IsShown() then self.frame:SetScript("OnShow", fR) end
        end, ["HighlightText"] = function(self, at, au) self.editbox:HighlightText(at, au) end }
    local function a0()
        local c3 = l:GetNextWidgetNum(b4)
        local F = CreateFrame("Frame", nil, UIParent)
        F:Hide()
        local fO = CreateFrame("EditBox", "AceGUI-3.0EditBox" .. c3, F, "InputBoxTemplate")
        fO:SetAutoFocus(false)
        fO:SetFontObject(ChatFontNormal)
        fO:SetScript("OnEnter", e7)
        fO:SetScript("OnLeave", e8)
        fO:SetScript("OnEscapePressed", fS)
        fO:SetScript("OnEnterPressed", fT)
        fO:SetScript("OnTextChanged", fW)
        fO:SetScript("OnReceiveDrag", fU)
        fO:SetScript("OnMouseDown", fU)
        fO:SetScript("OnEditFocusGained", fX)
        fO:SetTextInsets(0, 0, 3, 3)
        fO:SetMaxLetters(256)
        fO:SetPoint("BOTTOMLEFT", 6, 0)
        fO:SetPoint("BOTTOMRIGHT")
        fO:SetHeight(19)
        local bf = F:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
        bf:SetPoint("TOPLEFT", 0, -2)
        bf:SetPoint("TOPRIGHT", 0, -2)
        bf:SetJustifyH("LEFT")
        bf:SetHeight(18)
        local cN = CreateFrame("Button", nil, fO, "UIPanelButtonTemplate")
        cN:SetWidth(40)
        cN:SetHeight(20)
        cN:SetPoint("RIGHT", -2, 0)
        cN:SetText(OKAY)
        cN:SetScript("OnClick", bt)
        cN:Hide()
        local B = { alignoffset = 30, editbox = fO, label = bf, button = cN, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; fO.obj, cN.obj = B, B; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function fY(...)
    local b4, a1 = "Heading", 20; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local CreateFrame, UIParent = CreateFrame, UIParent; local bb = {
        ["OnAcquire"] = function(self)
            self:SetText()
            self:SetFullWidth()
            self:SetHeight(18)
        end,
        ["SetText"] = function(self, bF)
            self.label:SetText(bF or "")
            if bF and bF ~= "" then
                self.left:SetPoint("RIGHT", self.label, "LEFT", -5, 0)
                self.right:Show()
            else
                self.left:SetPoint("RIGHT", -3, 0)
                self.right:Hide()
            end
        end }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:Hide()
        local bf = F:CreateFontString(nil, "BACKGROUND", "GameFontNormal")
        bf:SetPoint("TOP")
        bf:SetPoint("BOTTOM")
        bf:SetJustifyH("CENTER")
        local e3 = F:CreateTexture(nil, "BACKGROUND")
        e3:SetHeight(8)
        e3:SetPoint("LEFT", 3, 0)
        e3:SetPoint("RIGHT", bf, "LEFT", -5, 0)
        e3:SetTexture(137057)
        e3:SetTexCoord(0.81, 0.94, 0.5, 1)
        local e4 = F:CreateTexture(nil, "BACKGROUND")
        e4:SetHeight(8)
        e4:SetPoint("RIGHT", -3, 0)
        e4:SetPoint("LEFT", bf, "RIGHT", 5, 0)
        e4:SetTexture(137057)
        e4:SetTexCoord(0.81, 0.94, 0.5, 1)
        local B = { label = bf, left = e3, right = e4, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function fZ(...)
    local b4, a1 = "Icon", 21; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local select, pairs, print = select, pairs, print; local CreateFrame, UIParent = CreateFrame, UIParent; local function e7(
        F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function bt(F, cN)
        F.obj:Fire("OnClick", cN)
        l:ClearFocus()
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetHeight(110)
            self:SetWidth(110)
            self:SetLabel()
            self:SetImage(nil)
            self:SetImageSize(64, 64)
            self:SetDisabled(false)
        end,
        ["SetLabel"] = function(self, bF) if bF and bF ~= "" then
                self.label:Show()
                self.label:SetText(bF)
                self:SetHeight(self.image:GetHeight() + 25)
            else
                self.label:Hide()
                self:SetHeight(self.image:GetHeight() + 10)
            end end,
        ["SetImage"] = function(self, dv, ...)
            local el = self.image; el:SetTexture(dv)
            if el:GetTexture() then
                local aI = select("#", ...)
                if aI == 4 or aI == 8 then el:SetTexCoord(...) else el:SetTexCoord(0, 1, 0, 1) end
            end
        end,
        ["SetImageSize"] = function(self, J, K)
            self.image:SetWidth(J)
            self.image:SetHeight(K)
            if self.label:IsShown() then self:SetHeight(K + 25) else self:SetHeight(K + 10) end
        end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.frame:Disable()
                self.label:SetTextColor(0.5, 0.5, 0.5)
                self.image:SetVertexColor(0.5, 0.5, 0.5, 0.5)
            else
                self.frame:Enable()
                self.label:SetTextColor(1, 1, 1)
                self.image:SetVertexColor(1, 1, 1, 1)
            end
        end }
    local function a0()
        local F = CreateFrame("Button", nil, UIParent)
        F:Hide()
        F:EnableMouse(true)
        F:SetScript("OnEnter", e7)
        F:SetScript("OnLeave", e8)
        F:SetScript("OnClick", bt)
        local bf = F:CreateFontString(nil, "BACKGROUND", "GameFontHighlight")
        bf:SetPoint("BOTTOMLEFT")
        bf:SetPoint("BOTTOMRIGHT")
        bf:SetJustifyH("CENTER")
        bf:SetJustifyV("TOP")
        bf:SetHeight(18)
        local el = F:CreateTexture(nil, "BACKGROUND")
        el:SetWidth(64)
        el:SetHeight(64)
        el:SetPoint("TOP", 0, -5)
        local ei = F:CreateTexture(nil, "HIGHLIGHT")
        ei:SetAllPoints(el)
        ei:SetTexture(136580)
        ei:SetTexCoord(0, 1, 0.23, 0.77)
        ei:SetBlendMode("ADD")
        local B = { label = bf, image = el, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; B.SetText = function(self, ...)
            print("AceGUI-3.0-Icon: SetText is deprecated! Use SetLabel instead!")
            self:SetLabel(...)
        end; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function f_(...)
    local b4, a1 = "InteractiveLabel", 21; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local select, pairs = select, pairs; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function g0(F, cN)
        F.obj:Fire("OnClick", cN)
        l:ClearFocus()
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:LabelOnAcquire()
            self:SetHighlight()
            self:SetHighlightTexCoord()
            self:SetDisabled(false)
        end, ["SetHighlight"] = function(self, ...) self.highlight:SetTexture(...) end,
        ["SetHighlightTexCoord"] = function(self, ...)
            local g1 = select("#", ...)
            if g1 == 4 or g1 == 8 then self.highlight:SetTexCoord(...) else self.highlight:SetTexCoord(0, 1, 0, 1) end
        end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.frame:EnableMouse(false)
                self.label:SetTextColor(0.5, 0.5, 0.5)
            else
                self.frame:EnableMouse(true)
                self.label:SetTextColor(1, 1, 1)
            end
        end }
    local function a0()
        local bf = l:Create("Label")
        local F = bf.frame; F:EnableMouse(true)
        F:SetScript("OnEnter", e7)
        F:SetScript("OnLeave", e8)
        F:SetScript("OnMouseDown", g0)
        local ei = F:CreateTexture(nil, "HIGHLIGHT")
        ei:SetTexture(nil)
        ei:SetAllPoints()
        ei:SetBlendMode("ADD")
        bf.highlight = ei; bf.type = b4; bf.LabelOnAcquire = bf.OnAcquire; for bg, v in pairs(bb) do bf[bg] = v end
        ; return bf
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function g2(...)
    local b4, a1 = "Keybinding", 26; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local IsShiftKeyDown, IsControlKeyDown, IsAltKeyDown = IsShiftKeyDown, IsControlKeyDown,
        IsAltKeyDown; local CreateFrame, UIParent = CreateFrame, UIParent; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function g3(F, cN)
        if cN == "LeftButton" or cN == "RightButton" then
            local self = F.obj; if self.waitingForKey then
                F:EnableKeyboard(false)
                F:EnableMouseWheel(false)
                self.msgframe:Hide()
                F:UnlockHighlight()
                self.waitingForKey = nil
            else
                F:EnableKeyboard(true)
                F:EnableMouseWheel(true)
                self.msgframe:Show()
                F:LockHighlight()
                self.waitingForKey = true
            end
        end
        ; l:ClearFocus()
    end
    ; local g4 = { ["BUTTON1"] = true, ["BUTTON2"] = true, ["UNKNOWN"] = true, ["LSHIFT"] = true, ["LCTRL"] = true,
        ["LALT"] = true, ["RSHIFT"] = true, ["RCTRL"] = true, ["RALT"] = true }
    local function g5(F, L)
        local self = F.obj; if self.waitingForKey then
            local g6 = L; if g6 == "ESCAPE" then g6 = "" else
                if g4[g6] then return end
                ; if IsShiftKeyDown() then g6 = "SHIFT-" .. g6 end
                ; if IsControlKeyDown() then g6 = "CTRL-" .. g6 end
                ; if IsAltKeyDown() then g6 = "ALT-" .. g6 end
            end
            ; F:EnableKeyboard(false)
            F:EnableMouseWheel(false)
            self.msgframe:Hide()
            F:UnlockHighlight()
            self.waitingForKey = nil; if not self.disabled then
                self:SetKey(g6)
                self:Fire("OnKeyChanged", g6)
            end
        end
    end
    ; local function g7(F, cN)
        if cN == "LeftButton" or cN == "RightButton" then return elseif cN == "MiddleButton" then cN = "BUTTON3" elseif cN == "Button4" then cN =
            "BUTTON4" elseif cN == "Button5" then cN = "BUTTON5" end
        ; g5(F, cN)
    end
    ; local function g8(F, g9)
        local cN; if g9 >= 0 then cN = "MOUSEWHEELUP" else cN = "MOUSEWHEELDOWN" end
        ; g5(F, cN)
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetWidth(200)
            self:SetLabel("")
            self:SetKey("")
            self.waitingForKey = nil; self.msgframe:Hide()
            self:SetDisabled(false)
            self.button:EnableKeyboard(false)
            self.button:EnableMouseWheel(false)
        end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.button:Disable()
                self.label:SetTextColor(0.5, 0.5, 0.5)
            else
                self.button:Enable()
                self.label:SetTextColor(1, 1, 1)
            end
        end,
        ["SetKey"] = function(self, L) if (L or "") == "" then
                self.button:SetText(NOT_BOUND)
                self.button:SetNormalFontObject("GameFontNormal")
            else
                self.button:SetText(L)
                self.button:SetNormalFontObject("GameFontHighlight")
            end end, ["GetKey"] = function(self)
        local L = self.button:GetText()
        if L == NOT_BOUND then L = nil end
        ; return L
    end,
        ["SetLabel"] = function(self, bf)
            self.label:SetText(bf or "")
            if (bf or "") == "" then
                self.alignoffset = nil; self:SetHeight(24)
            else
                self.alignoffset = 30; self:SetHeight(44)
            end
        end }
    local ga = { bgFile = "Interface\\Tooltips\\UI-Tooltip-Background",
        edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", tile = true, tileSize = 16, edgeSize = 16,
        insets = { left = 3, right = 3, top = 3, bottom = 3 } }
    local function gb(F)
        F:SetWidth(F.msg:GetWidth() + 10)
        F:SetScript("OnUpdate", nil)
    end
    ; local function a0()
        local G = "AceGUI30KeybindingButton" .. l:GetNextWidgetNum(b4)
        local F = CreateFrame("Frame", nil, UIParent)
        local cN = CreateFrame("Button", G, F, "UIPanelButtonTemplate")
        cN:EnableMouse(true)
        cN:EnableMouseWheel(false)
        cN:RegisterForClicks("AnyDown")
        cN:SetScript("OnEnter", e7)
        cN:SetScript("OnLeave", e8)
        cN:SetScript("OnClick", g3)
        cN:SetScript("OnKeyDown", g5)
        cN:SetScript("OnMouseDown", g7)
        cN:SetScript("OnMouseWheel", g8)
        cN:SetPoint("BOTTOMLEFT")
        cN:SetPoint("BOTTOMRIGHT")
        cN:SetHeight(24)
        cN:EnableKeyboard(false)
        local bF = cN:GetFontString()
        bF:SetPoint("LEFT", 7, 0)
        bF:SetPoint("RIGHT", -7, 0)
        local bf = F:CreateFontString(nil, "OVERLAY", "GameFontHighlight")
        bf:SetPoint("TOPLEFT")
        bf:SetPoint("TOPRIGHT")
        bf:SetJustifyH("CENTER")
        bf:SetHeight(18)
        local gc = CreateFrame("Frame", nil, UIParent, BackdropTemplateMixin and "BackdropTemplate" or nil)
        gc:SetHeight(30)
        gc:SetBackdrop(ga)
        gc:SetBackdropColor(0, 0, 0)
        gc:SetFrameStrata("FULLSCREEN_DIALOG")
        gc:SetFrameLevel(1000)
        gc:SetToplevel(true)
        local gd = gc:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        gd:SetText("Press a key to bind, ESC to clear the binding or click the button again to cancel.")
        gc.msg = gd; gd:SetPoint("TOPLEFT", 5, -5)
        gc:SetScript("OnUpdate", gb)
        gc:SetPoint("BOTTOM", cN, "TOP")
        gc:Hide()
        local B = { button = cN, label = bf, msgframe = gc, frame = F, alignoffset = 30, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; cN.obj = B; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function ge(...)
    local b4, a1 = "Label", 27; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local max, select, pairs = math.max, select, pairs; local CreateFrame, UIParent = CreateFrame, UIParent; local function gf(
        self)
        if self.resizing then return end
        ; local F = self.frame; local J = F.width or F:GetWidth() or 0; local el = self.image; local bf = self.label; local K; bf
            :ClearAllPoints()
        el:ClearAllPoints()
        if self.imageshown then
            local gg = el:GetWidth()
            if J - gg < 200 or (bf:GetText() or "") == "" then
                el:SetPoint("TOP")
                bf:SetPoint("TOP", el, "BOTTOM")
                bf:SetPoint("LEFT")
                bf:SetWidth(J)
                K = el:GetHeight() + bf:GetStringHeight()
            else
                el:SetPoint("TOPLEFT")
                if el:GetHeight() > bf:GetStringHeight() then bf:SetPoint("LEFT", el, "RIGHT", 4, 0) else bf:SetPoint(
                    "TOPLEFT", el, "TOPRIGHT", 4, 0) end
                ; bf:SetWidth(J - gg - 4)
                K = max(el:GetHeight(), bf:GetStringHeight())
            end
        else
            bf:SetPoint("TOPLEFT")
            bf:SetWidth(J)
            K = bf:GetStringHeight()
        end
        ; if not K or K == 0 then K = 1 end
        ; self.resizing = true; F:SetHeight(K)
        F.height = K; self.resizing = nil
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self.resizing = true; self:SetWidth(200)
            self:SetText()
            self:SetImage(nil)
            self:SetImageSize(16, 16)
            self:SetColor()
            self:SetFontObject()
            self:SetJustifyH("LEFT")
            self:SetJustifyV("TOP")
            self.resizing = nil; gf(self)
        end, ["OnWidthSet"] = function(self, J) gf(self) end,
        ["SetText"] = function(self, bF)
            self.label:SetText(bF)
            gf(self)
        end,
        ["SetColor"] = function(self, eo, ep, eq)
            if not (eo and ep and eq) then eo, ep, eq = 1, 1, 1 end
            ; self.label:SetVertexColor(eo, ep, eq)
        end,
        ["SetImage"] = function(self, dv, ...)
            local el = self.image; el:SetTexture(dv)
            if el:GetTexture() then
                self.imageshown = true; local aI = select("#", ...)
                if aI == 4 or aI == 8 then el:SetTexCoord(...) else el:SetTexCoord(0, 1, 0, 1) end
            else self.imageshown = nil end
            ; gf(self)
        end, ["SetFont"] = function(self, gh, K, gi)
        self.label:SetFont(gh, K, gi)
        gf(self)
    end, ["SetFontObject"] = function(self, gh) self:SetFont((gh or GameFontHighlightSmall):GetFont()) end,
        ["SetImageSize"] = function(self, J, K)
            self.image:SetWidth(J)
            self.image:SetHeight(K)
            gf(self)
        end, ["SetJustifyH"] = function(self, gj) self.label:SetJustifyH(gj) end,
        ["SetJustifyV"] = function(self, gk) self.label:SetJustifyV(gk) end }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:Hide()
        local bf = F:CreateFontString(nil, "BACKGROUND", "GameFontHighlightSmall")
        local el = F:CreateTexture(nil, "BACKGROUND")
        local B = { label = bf, image = el, frame = F, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function gl(...)
    local b4, a1 = "MultiLineEditBox", 29; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local pairs = pairs; local GetCursorInfo, GetSpellInfo, ClearCursor = GetCursorInfo, GetSpellInfo, ClearCursor; local CreateFrame, UIParent =
    CreateFrame, UIParent; local _G = _G; if not AceGUIMultiLineEditBoxInsertLink then hooksecurefunc(
        "ChatEdit_InsertLink", function(...) return _G.AceGUIMultiLineEditBoxInsertLink(...) end) end
    ; function _G.AceGUIMultiLineEditBoxInsertLink(bF) for T = 1, l:GetWidgetCount(b4) do
            local fO = _G[("MultiLineEditBox%uEdit"):format(T)]
            if fO and fO:IsVisible() and fO:HasFocus() then
                fO:Insert(bF)
                return true
            end
        end end

    ; local function V(self)
        self:SetHeight(self.numlines * 14 + (self.disablebutton and 19 or 41) + self.labelHeight)
        if self.labelHeight == 0 then self.scrollBar:SetPoint("TOP", self.frame, "TOP", 0, -23) else self.scrollBar
                :SetPoint("TOP", self.label, "BOTTOM", 0, -19) end
        ; if self.disablebutton then
            self.scrollBar:SetPoint("BOTTOM", self.frame, "BOTTOM", 0, 21)
            self.scrollBG:SetPoint("BOTTOMLEFT", 0, 4)
        else
            self.scrollBar:SetPoint("BOTTOM", self.button, "TOP", 0, 18)
            self.scrollBG:SetPoint("BOTTOMLEFT", self.button, "TOPLEFT")
        end
    end
    ; local function gm(self)
        self = self.obj; self.editBox:ClearFocus()
        if not self:Fire("OnEnterPressed", self.editBox:GetText()) then self.button:Disable() end
    end
    ; local function gn(self, S, eW, S, go)
        self, eW = self.obj.scrollFrame, -eW; local c0 = self:GetVerticalScroll()
        if eW < c0 then self:SetVerticalScroll(eW) else
            eW = eW + go - self:GetHeight()
            if eW > c0 then self:SetVerticalScroll(eW) end
        end
    end
    ; local function gq(self)
        self:HighlightText(0, 0)
        self.obj:Fire("OnEditFocusLost")
    end
    ; local function eJ(self)
        self = self.obj; if not self.entered then
            self.entered = true; self:Fire("OnEnter")
        end
    end
    ; local function fH(self)
        self = self.obj; if self.entered then
            self.entered = nil; self:Fire("OnLeave")
        end
    end
    ; local function gr(self)
        self = self.obj.editBox; self:SetFocus()
        self:SetCursorPosition(self:GetNumLetters())
    end
    ; local function gs(self)
        local type, co, fV = GetCursorInfo()
        if type == "spell" then fV = GetSpellInfo(co, fV) elseif type ~= "item" then return end
        ; ClearCursor()
        self = self.obj; local gt = self.editBox; if not gt:HasFocus() then
            gt:SetFocus()
            gt:SetCursorPosition(gt:GetNumLetters())
        end
        ; gt:Insert(fV)
        self.button:Enable()
    end
    ; local function eM(self, J, K) self.obj.editBox:SetWidth(J) end
    ; local function gu(self, gv) if gv then
            self = self.obj; self:Fire("OnTextChanged", self.editBox:GetText())
            self.button:Enable()
        end end
    ; local function gw(self)
        self:HighlightText(0, 0)
        self:SetCursorPosition(self:GetNumLetters())
        self:SetCursorPosition(0)
        self.obj.button:Disable()
    end
    ; local function gx(self, c0)
        local gt = self.obj.editBox; gt:SetHitRectInsets(0, 0, c0, gt:GetHeight() - c0 - self:GetHeight())
    end
    ; local function gy(F)
        F.obj.editBox:SetFocus()
        F:SetScript("OnShow", nil)
    end
    ; local function gz(F)
        l:SetFocus(F.obj)
        F.obj:Fire("OnEditFocusGained")
    end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self.editBox:SetText("")
            self:SetDisabled(false)
            self:SetWidth(200)
            self:DisableButton(false)
            self:SetNumLines()
            self.entered = nil; self:SetMaxLetters(0)
        end, ["OnRelease"] = function(self) self:ClearFocus() end,
        ["SetDisabled"] = function(self, ch)
            local gt = self.editBox; if ch then
                gt:ClearFocus()
                gt:EnableMouse(false)
                gt:SetTextColor(0.5, 0.5, 0.5)
                self.label:SetTextColor(0.5, 0.5, 0.5)
                self.scrollFrame:EnableMouse(false)
                self.button:Disable()
            else
                gt:EnableMouse(true)
                gt:SetTextColor(1, 1, 1)
                self.label:SetTextColor(1, 0.82, 0)
                self.scrollFrame:EnableMouse(true)
            end
        end,
        ["SetLabel"] = function(self, bF)
            if bF and bF ~= "" then
                self.label:SetText(bF)
                if self.labelHeight ~= 10 then
                    self.labelHeight = 10; self.label:Show()
                end
            elseif self.labelHeight ~= 0 then
                self.labelHeight = 0; self.label:Hide()
            end
            ; V(self)
        end, ["SetNumLines"] = function(self, M)
        if not M or M < 4 then M = 4 end
        ; self.numlines = M; V(self)
    end, ["SetText"] = function(self, bF) self.editBox:SetText(bF) end,
        ["GetText"] = function(self) return self.editBox:GetText() end,
        ["SetMaxLetters"] = function(self, c3) self.editBox:SetMaxLetters(c3 or 0) end,
        ["DisableButton"] = function(self, ch)
            self.disablebutton = ch; if ch then self.button:Hide() else self.button:Show() end
            ; V(self)
        end, ["ClearFocus"] = function(self)
        self.editBox:ClearFocus()
        self.frame:SetScript("OnShow", nil)
    end,
        ["SetFocus"] = function(self)
            self.editBox:SetFocus()
            if not self.frame:IsShown() then self.frame:SetScript("OnShow", gy) end
        end, ["HighlightText"] = function(self, at, au) self.editBox:HighlightText(at, au) end,
        ["GetCursorPosition"] = function(self) return self.editBox:GetCursorPosition() end,
        ["SetCursorPosition"] = function(self, ...) return self.editBox:SetCursorPosition(...) end }
    local eF = { bgFile = [[Interface\Tooltips\UI-Tooltip-Background]],
        edgeFile = [[Interface\Tooltips\UI-Tooltip-Border]], edgeSize = 16, insets = { left = 4, right = 3, top = 4,
        bottom = 3 } }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:Hide()
        local gA = l:GetNextWidgetNum(b4)
        local bf = F:CreateFontString(nil, "OVERLAY", "GameFontNormalSmall")
        bf:SetPoint("TOPLEFT", F, "TOPLEFT", 0, -4)
        bf:SetPoint("TOPRIGHT", F, "TOPRIGHT", 0, -4)
        bf:SetJustifyH("LEFT")
        bf:SetText(ACCEPT)
        bf:SetHeight(10)
        local cN = CreateFrame("Button", ("%s%dButton"):format(b4, gA), F, "UIPanelButtonTemplate")
        cN:SetPoint("BOTTOMLEFT", 0, 4)
        cN:SetHeight(22)
        cN:SetWidth(bf:GetStringWidth() + 24)
        cN:SetText(ACCEPT)
        cN:SetScript("OnClick", gm)
        cN:Disable()
        local bF = cN:GetFontString()
        bF:ClearAllPoints()
        bF:SetPoint("TOPLEFT", cN, "TOPLEFT", 5, -5)
        bF:SetPoint("BOTTOMRIGHT", cN, "BOTTOMRIGHT", -5, 1)
        bF:SetJustifyV("MIDDLE")
        local gB = CreateFrame("Frame", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        gB:SetBackdrop(eF)
        gB:SetBackdropColor(0, 0, 0)
        gB:SetBackdropBorderColor(0.4, 0.4, 0.4)
        local f6 = CreateFrame("ScrollFrame", ("%s%dScrollFrame"):format(b4, gA), F, "UIPanelScrollFrameTemplate")
        local gC = _G[f6:GetName() .. "ScrollBar"]
        gC:ClearAllPoints()
        gC:SetPoint("TOP", bf, "BOTTOM", 0, -19)
        gC:SetPoint("BOTTOM", cN, "TOP", 0, 18)
        gC:SetPoint("RIGHT", F, "RIGHT")
        gB:SetPoint("TOPRIGHT", gC, "TOPLEFT", 0, 19)
        gB:SetPoint("BOTTOMLEFT", cN, "TOPLEFT")
        f6:SetPoint("TOPLEFT", gB, "TOPLEFT", 5, -6)
        f6:SetPoint("BOTTOMRIGHT", gB, "BOTTOMRIGHT", -4, 4)
        f6:SetScript("OnEnter", eJ)
        f6:SetScript("OnLeave", fH)
        f6:SetScript("OnMouseUp", gr)
        f6:SetScript("OnReceiveDrag", gs)
        f6:SetScript("OnSizeChanged", eM)
        f6:HookScript("OnVerticalScroll", gx)
        local gt = CreateFrame("EditBox", ("%s%dEdit"):format(b4, gA), f6)
        gt:SetAllPoints()
        gt:SetFontObject(ChatFontNormal)
        gt:SetMultiLine(true)
        gt:EnableMouse(true)
        gt:SetAutoFocus(false)
        gt:SetCountInvisibleLetters(false)
        gt:SetScript("OnCursorChanged", gn)
        gt:SetScript("OnEditFocusLost", gq)
        gt:SetScript("OnEnter", eJ)
        gt:SetScript("OnEscapePressed", gt.ClearFocus)
        gt:SetScript("OnLeave", fH)
        gt:SetScript("OnMouseDown", gs)
        gt:SetScript("OnReceiveDrag", gs)
        gt:SetScript("OnTextChanged", gu)
        gt:SetScript("OnTextSet", gw)
        gt:SetScript("OnEditFocusGained", gz)
        f6:SetScrollChild(gt)
        local B = { button = cN, editBox = gt, frame = F, label = bf, labelHeight = 10, numlines = 4, scrollBar = gC,
            scrollBG = gB, scrollFrame = f6, type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; cN.obj, gt.obj, f6.obj = B, B, B; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function gD(...)
    local b4, a1 = "Slider", 23; local l = LibStub and LibStub("AceGUI-3.0", true)
    if not l or (l:GetWidgetVersion(b4) or 0) >= a1 then return end
    ; local min, max, floor = math.min, math.max, math.floor; local tonumber, pairs = tonumber, pairs; local PlaySound =
    PlaySound; local CreateFrame, UIParent = CreateFrame, UIParent; local function gE(self)
        local M = self.value or 0; if self.ispercent then self.editbox:SetText(("%s%%"):format(floor(M * 1000 + 0.5) / 10)) else
            self.editbox:SetText(floor(M * 100 + 0.5) / 100) end
    end
    ; local function gF(self)
        local min, max = self.min or 0, self.max or 100; if self.ispercent then
            self.lowtext:SetFormattedText("%s%%", min * 100)
            self.hightext:SetFormattedText("%s%%", max * 100)
        else
            self.lowtext:SetText(min)
            self.hightext:SetText(max)
        end
    end
    ; local function e7(F) F.obj:Fire("OnEnter") end
    ; local function e8(F) F.obj:Fire("OnLeave") end
    ; local function bw(F)
        F.obj.slider:EnableMouseWheel(true)
        l:ClearFocus()
    end
    ; local function gG(F, d9)
        local self = F.obj; if not F.setup then
            if self.step and self.step > 0 then
                local gH = self.min or 0; d9 = floor((d9 - gH) / self.step + 0.5) * self.step + gH
            end
            ; if d9 ~= self.value and not self.disabled then
                self.value = d9; self:Fire("OnValueChanged", d9)
            end
            ; if self.value then gE(self) end
        end
    end
    ; local function gI(F)
        local self = F.obj; self:Fire("OnMouseUp", self.value)
    end
    ; local function gJ(F, b2)
        local self = F.obj; if not self.disabled then
            local M = self.value; if b2 > 0 then M = min(M + (self.step or 1), self.max) else M = max(M -
                (self.step or 1), self.min) end
            ; self.slider:SetValue(M)
        end
    end
    ; local function fS(F) F:ClearFocus() end
    ; local function fT(F)
        local self = F.obj; local M = F:GetText()
        if self.ispercent then
            M = M:gsub('%%', '')
            M = tonumber(M) / 100
        else M = tonumber(M) end
        ; if M then
            PlaySound(856)
            self.slider:SetValue(M)
            self:Fire("OnMouseUp", M)
        end
    end
    ; local function gK(F) F:SetBackdropBorderColor(0.5, 0.5, 0.5, 1) end
    ; local function gL(F) F:SetBackdropBorderColor(0.3, 0.3, 0.3, 0.8) end
    ; local bb = {
        ["OnAcquire"] = function(self)
            self:SetWidth(200)
            self:SetHeight(44)
            self:SetDisabled(false)
            self:SetIsPercent(nil)
            self:SetSliderValues(0, 100, 1)
            self:SetValue(0)
            self.slider:EnableMouseWheel(false)
        end,
        ["SetDisabled"] = function(self, ch)
            self.disabled = ch; if ch then
                self.slider:EnableMouse(false)
                self.label:SetTextColor(.5, .5, .5)
                self.hightext:SetTextColor(.5, .5, .5)
                self.lowtext:SetTextColor(.5, .5, .5)
                self.editbox:SetTextColor(.5, .5, .5)
                self.editbox:EnableMouse(false)
                self.editbox:ClearFocus()
            else
                self.slider:EnableMouse(true)
                self.label:SetTextColor(1, .82, 0)
                self.hightext:SetTextColor(1, 1, 1)
                self.lowtext:SetTextColor(1, 1, 1)
                self.editbox:SetTextColor(1, 1, 1)
                self.editbox:EnableMouse(true)
            end
        end,
        ["SetValue"] = function(self, M)
            self.slider.setup = true; self.slider:SetValue(M)
            self.value = M; gE(self)
            self.slider.setup = nil
        end, ["GetValue"] = function(self) return self.value end,
        ["SetLabel"] = function(self, bF) self.label:SetText(bF) end,
        ["SetSliderValues"] = function(self, min, max, gM)
            local F = self.slider; F.setup = true; self.min = min; self.max = max; self.step = gM; F:SetMinMaxValues(
            min or 0, max or 100)
            gF(self)
            F:SetValueStep(gM or 1)
            if self.value then F:SetValue(self.value) end
            ; F.setup = nil
        end, ["SetIsPercent"] = function(self, M)
        self.ispercent = M; gF(self)
        gE(self)
    end }
    local gN = { bgFile = "Interface\\Buttons\\UI-SliderBar-Background",
        edgeFile = "Interface\\Buttons\\UI-SliderBar-Border", tile = true, tileSize = 8, edgeSize = 8,
        insets = { left = 3, right = 3, top = 6, bottom = 6 } }
    local gO = { bgFile = "Interface\\ChatFrame\\ChatFrameBackground",
        edgeFile = "Interface\\ChatFrame\\ChatFrameBackground", tile = true, edgeSize = 1, tileSize = 5 }
    local function a0()
        local F = CreateFrame("Frame", nil, UIParent)
        F:EnableMouse(true)
        F:SetScript("OnMouseDown", bw)
        local bf = F:CreateFontString(nil, "OVERLAY", "GameFontNormal")
        bf:SetPoint("TOPLEFT")
        bf:SetPoint("TOPRIGHT")
        bf:SetJustifyH("CENTER")
        bf:SetHeight(15)
        local f7 = CreateFrame("Slider", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        f7:SetOrientation("HORIZONTAL")
        f7:SetHeight(15)
        f7:SetHitRectInsets(0, 0, -10, 0)
        f7:SetBackdrop(gN)
        f7:SetThumbTexture("Interface\\Buttons\\UI-SliderBar-Button-Horizontal")
        f7:SetPoint("TOP", bf, "BOTTOM")
        f7:SetPoint("LEFT", 3, 0)
        f7:SetPoint("RIGHT", -3, 0)
        f7:SetValue(0)
        f7:SetScript("OnValueChanged", gG)
        f7:SetScript("OnEnter", e7)
        f7:SetScript("OnLeave", e8)
        f7:SetScript("OnMouseUp", gI)
        f7:SetScript("OnMouseWheel", gJ)
        local gP = f7:CreateFontString(nil, "ARTWORK", "GameFontHighlightSmall")
        gP:SetPoint("TOPLEFT", f7, "BOTTOMLEFT", 2, 3)
        local gQ = f7:CreateFontString(nil, "ARTWORK", "GameFontHighlightSmall")
        gQ:SetPoint("TOPRIGHT", f7, "BOTTOMRIGHT", -2, 3)
        local fO = CreateFrame("EditBox", nil, F, BackdropTemplateMixin and "BackdropTemplate" or nil)
        fO:SetAutoFocus(false)
        fO:SetFontObject(GameFontHighlightSmall)
        fO:SetPoint("TOP", f7, "BOTTOM")
        fO:SetHeight(14)
        fO:SetWidth(70)
        fO:SetJustifyH("CENTER")
        fO:EnableMouse(true)
        fO:SetBackdrop(gO)
        fO:SetBackdropColor(0, 0, 0, 0.5)
        fO:SetBackdropBorderColor(0.3, 0.3, 0.30, 0.80)
        fO:SetScript("OnEnter", gK)
        fO:SetScript("OnLeave", gL)
        fO:SetScript("OnEnterPressed", fT)
        fO:SetScript("OnEscapePressed", fS)
        local B = { label = bf, slider = f7, lowtext = gP, hightext = gQ, editbox = fO, alignoffset = 25, frame = F,
            type = b4 }
        for bg, v in pairs(bb) do B[bg] = v end
        ; f7.obj, fO.obj = B, B; return l:RegisterAsWidget(B)
    end
    ; l:RegisterWidgetType(b4, a0, a1)
end
; local function gR(...)
    local l = LibStub("AceGUI-3.0")
    function makeTip(bF)
        ttFrame = l:Create("Window")
        ttFrame:SetTitle("Tip")
        ttFrame:Show()
        ttFrame:SetWidth(250)
        ttFrame:SetHeight(250)
        ttFrame:SetPoint("BOTTOMRIGHT")
        ttFrame:SetLayout("Flow")
        tip = l:Create("InteractiveLabel")
        tip:SetPoint("CENTER")
        tip:SetText(bF)
        tip:SetWidth(200)
        ttFrame:AddChild(tip)
    end

    ; function deleteTip()
        ttFrame:Hide()
        tip, ttFrame = nil, nil
    end

    ; function orca_create_checkbox(bF, M, gS, gT, tip)
        local config_option = l:Create("CheckBox")
        config_option:SetValue(M)
        config_option:SetLabel(bF)
        config_option:SetCallback("OnValueChanged", function(B, bj, aq)
            gT(B, bj, aq)
            _saveSettings()
        end)
        if tip then
            config_option:SetCallback("OnEnter", function() makeTip(tip) end)
            config_option:SetCallback("OnLeave", function() deleteTip() end)
        end
        ; gS:AddChild(config_option)
        return config_option
    end

    ; local function gU(Y, bj, eK)
        ORCA.eagleProfile = eK; _saveSettings()
        OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadeagle(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then
            _parseEagleNames()
            gV:SetList(profileresult)
        end
        ; gV:SetCallback("OnValueChanged", gU)
        gS:AddChild(gV)
        return config_option
    end

    ; local function gW(Y, bj, eK)
        ORCA.quest_profile = eK; _saveSettings()
        OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadquest(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if questresult then gV:SetList(questresult) end end
        ; gV:SetCallback("OnValueChanged", gW)
        gS:AddChild(gV)
        return config_option
    end

    ; local function gX(Y, bj, eK)
        ORCA.grind_profile = eK; _saveSettings()
        OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadprofile(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", gX)
        gV:SetWidth(1000)
        gS:AddChild(gV)
        return config_option
    end

    ; local function gY(Y, bj, eK) ORCA.switchprofileone = eK end
    ; function orca_create_loadprofile2(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", gY)
        gS:AddChild(gV)
        return config_option
    end

    ; local function gZ(Y, bj, eK)
        ORCA.switchprofiletwo = eK; _saveSettings()
        print("hello")
        OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadprofile3(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", gZ)
        gS:AddChild(gV)
        return config_option
    end

    ; local function g_(Y, bj, eK)
        _saveSettings()
        ORCA.switchprofilethree = eK; OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadprofile4(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", g_)
        gS:AddChild(gV)
        return config_option
    end

    ; local function h0(Y, bj, eK)
        _saveSettings()
        ORCA.switchprofilefour = eK; OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadprofile5(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", h0)
        gS:AddChild(gV)
        return config_option
    end

    ; local function h1(Y, bj, eK)
        _saveSettings()
        ORCA.switchprofilefive = eK; OrcaUITabGroup:SelectTab(ORCA.lastFrame)
    end
    ; function orca_create_loadprofile6(bF, M, gS, gT)
        local gV = l:Create("Dropdown")
        gV:SetLabel(bF)
        if IsHackEnabled then if profileresult then gV:SetList(profileresult) end end
        ; gV:SetCallback("OnValueChanged", h1)
        gS:AddChild(gV)
        return config_option
    end

    ; function orca_create_image(gS, ew, J, K)
        local config_option = l:Create("InteractiveLabel")
        config_option:SetImage(ew)
        if J and K then config_option:SetImageSize(J, K) else config_option:SetImageSize(16, 16) end
        ; gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_icon(ew, gS, gT, J, K)
        local config_option = l:Create("Icon")
        config_option:SetImage(ew)
        if J and K then config_option:SetImageSize(J, K) else config_option:SetImageSize(30, 30) end
        ; config_option:SetCallback("OnClick", function()
            gT()
            _saveSettings()
        end)
        gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_button(bF, gS, gT, ew)
        local config_option = l:Create("Button")
        config_option:SetText(bF)
        config_option:SetCallback("OnClick", function()
            gT()
            _saveSettings()
        end)
        gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_keybind(bF, M, gS, gT)
        local config_option = l:Create("Keybinding")
        config_option:SetLabel(bF)
        key_is_bound = nil; for C, b2 in pairs(ORCA) do if C == M then
                key_is_bound = true; config_option:SetKey(b2)
            end end
        ; if not key_is_bound then config_option:SetKey("Not Bound") end
        ; config_option:SetCallback("OnKeyChanged",
            function() if M and config_option:GetKey() then
                    xRunMacroText("/script ORCA." .. M .. "=" .. "'" .. config_option:GetKey() .. "'")
                    SetBinding(config_option:GetKey(), nil)
                    _saveSettings()
                else xRunMacroText("/script ORCA." .. M .. "=nil") end end)
        gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_slider(bF, M, min, max, gM, gS, gT, tip)
        local config_option = l:Create("Slider")
        config_option:SetLabel(bF)
        config_option:SetSliderValues(min, max, gM)
        if M == nil then config_option:SetValue(0) else config_option:SetValue(M) end
        ; config_option:SetCallback("OnMouseUp", function(B, bj, aq)
            gT(B, bj, aq)
            _saveSettings()
        end)
        if tip then
            config_option:SetCallback("OnEnter", function() makeTip(tip) end)
            config_option:SetCallback("OnLeave", function() deleteTip() end)
        end
        ; gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_editbox(bF, M, gS, gT)
        local config_option = l:Create("EditBox")
        config_option:SetLabel(bF)
        config_option:SetText(M)
        config_option:SetCallback("OnEnterPressed", function(B, bj, aq)
            gT(B, bj, aq)
            _saveSettings()
            l:ClearFocus()
        end)
        if tip then
            config_option:SetCallback("OnEnter", function() makeTip(tip) end)
            config_option:SetCallback("OnLeave", function() deleteTip() end)
        end
        ; gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_editbox2(bF, M, gS, gT)
        local config_option = l:Create("EditBox")
        config_option:SetLabel(bF)
        config_option:SetText(M)
        config_option:SetWidth(75)
        config_option:SetCallback("OnEnterPressed", function(B, bj, aq)
            gT(B, bj, aq)
            _saveSettings()
            l:ClearFocus()
        end)
        if tip then
            config_option:SetCallback("OnEnter", function() makeTip(tip) end)
            config_option:SetCallback("OnLeave", function() deleteTip() end)
        end
        ; gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_multiline_editbox(bF, M, gS, gT)
        local config_option = l:Create("MultiLineEditBox")
        config_option:SetLabel(bF)
        if M == nil then M = "" end
        ; config_option:SetText(M)
        config_option:SetNumLines(8)
        config_option:SetCallback("OnEnterPressed", function(B, bj, aq)
            gT(B, bj, aq)
            _saveSettings()
            l:ClearFocus()
        end)
        gS:AddChild(config_option)
        return config_option
    end

    ; function orca_create_simple_group(bF, gS)
        local h2 = l:Create("InlineGroup")
        h2:SetTitle(bF)
        gS:AddChild(h2)
        return h2
    end

    ; function orca_create_simple_label(bF, gS, el)
        local h2 = l:Create("InteractiveLabel")
        h2:SetText(bF)
        if not el == nil then h2:SetImage(bF) end
        ; gS:AddChild(h2)
        return h2
    end
end
; local function h3(...)
    local l = LibStub(_t("AceGUI-3.0"))
    function draw_fishing_group(g1)
        orca_create_simple_label(_t("This is working for Windows TBC only"), g1)
        orca_create_checkbox(_t("Enable Fishing"), ORCA.fishbot, g1, function() ORCA.fishbot = not ORCA.fishbot end,
            _t("Enable Fishing"))
        orca_create_editbox(_t("Fishing Enchant"), ORCA.fish_enchant_saved_text, g1,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.fish_enchant_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.fish_enchant = h4 else
                        B:SetText(bF)
                        ORCA.fish_enchant = nil; ORCA.fish_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.fish_enchant = nil; ORCA.fish_enchant_box_saved_text = nil
                end end, _t("This is the enchant you have on your fishing pole."))
        orca_create_editbox(_t("Fishing Skill Name"), ORCA.fish_spell_name, g1,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.fish_spell_name = bF else ORCA.fish_spell_name = nil end end,
            _t("This is your localized fishing skill name, for English it is 'Fishing'."))
    end

    ; function draw_keybind_group(g1)
        local h5 = orca_create_simple_group(_t("Toggles"), g1)
        orca_create_keybind(_t("Toggle Rotation on/off"), _t("Toggle"), h5)
        orca_create_simple_label(
        _t(
        "Unless otherwise stated, if it is a healing key it will auto target. If it is a hostile spell then it will perform the action on your mouseover if you have a mouseover, or your target."),
            g1)
        local h6 = orca_create_simple_group(_t("Hold key to perform action"), g1)
        local h7 = { _t("PRIEST"), _t("PALADIN"), _t("DRUID"), _t("SHAMAN") }
        for T = 1, #h7 do if select(2, UnitClass(_t("player"))) == h7[T] then
                orca_create_keybind(_t("Fast heal your Target"), _t("qh"), h6)
                orca_create_keybind(_t("Slow heal your Target"), _t("sh"), h6)
                orca_create_keybind(_t("Fast heal auto Target"), _t("qh_auto"), h6)
                orca_create_keybind(_t("Slow heal auto Target"), _t("sh_auto"), h6)
            end end
        ; if select(2, UnitClass(_t("player"))) == _t("WARRIOR") then
            orca_create_keybind(_t("Charge/intercept"), _t("charge"), h6)
            orca_create_keybind(_t("Intervene"), _t("intervene_key"), h6)
            orca_create_keybind(_t("Intimidating Shout"), _t("warfear"), h6)
            orca_create_keybind(_t("Bladestorm"), _t("bladestorm_key"), h6)
            orca_create_keybind(_t("Recklessness"), _t("recklessness"), h6)
            orca_create_keybind(_t("Reck+Bladestorm"), _t("reckstorm"), h6)
            orca_create_keybind(_t("Shield Wall"), _t("shieldwall_key"), h6)
            orca_create_keybind(_t("Retaliation"), _t("retaliation_key"), h6)
            orca_create_keybind(_t("Disarm"), _t("war_disarm"), h6)
            orca_create_keybind(_t("Shockwave"), _t("shockwave_key"), h6)
        end
        ; if select(2, UnitClass(_t("player"))) == _t("PALADIN") then
            orca_create_keybind(_t("Hammer of Justice"), _t("hoj_key"), h6)
            orca_create_keybind(_t("Bubble"), _t("bubble_key"), h6)
            orca_create_keybind(_t("Hand of Protection"), _t("hop_key"), h6)
            orca_create_keybind(_t("Hand of Sacrifice"), _t("hos_key"), h6)
            orca_create_keybind(_t("Divine Sacrifice"), _t("divinesacrifice_key"), h6)
            orca_create_simple_label(_t("If have a target will freedom that, if not, freedoms self"), h6)
            orca_create_keybind(_t("Freedom Target/Self"), _t("freedom_key"), h6)
            orca_create_keybind(_t("Turn Evil anything"), _t("turn_evil"), h6)
            orca_create_keybind(_t("Divine Favor"), _t("divinefavor_key"), h6)
        end
        ; if select(2, UnitClass(_t("player"))) == _t("PRIEST") then
            orca_create_keybind(_t("Fear"), _t("priest_fear"), h6)
            orca_create_keybind(_t("Dispersion"), _t("disperse"), h6)
            orca_create_keybind(_t("Psychic Horror"), _t("prieststun"), h6)
        end
        ; if select(2, UnitClass(_t("player"))) == _t("WARLOCK") then
            orca_create_keybind(_t("Fear"), _t("warlock_fear"), h6)
            orca_create_keybind(_t("Death Coil"), _t("death_coil"), h6)
        end
        ; if select(2, UnitClass(_t("player"))) == _t("SHAMAN") then
            orca_create_keybind(_t("Ghost Wolf"), _t("wolf_key"), h6)
            orca_create_keybind(_t("Feral Spirit"), _t("feral_key"), h6)
            orca_create_keybind(_t("Heroism/Bloodlust"), _t("hero_key"), h6)
            orca_create_keybind(_t("Shamanistic Rage"), _t("shamanistic_rage"), h6)
            orca_create_keybind(_t("Earthbind Key"), _t("earthbind_key"), h6)
            orca_create_keybind(_t("Hex Key"), _t("hex_key"), h6)
        end
        ; orca_create_simple_label(_t("---"), g1)
    end

    ; function draw_quest_group(h8)
        orca_create_simple_label(_t("WARNING: Do not use this unless you have fully read and understand the tutorial."),
            h8)
        orca_create_editbox(_t("Tutorial"), _t("https://forums.getgud.cc/index.php?/topic/2843-23jul20-questing/"), h8,
            function(...)
            end)
        orca_create_checkbox(_t("Questing"), ORCA.quest, h8, function() ORCA.quest = not ORCA.quest end)
        orca_create_checkbox(_t("Auto Start Questing"), ORCA.autoquest, h8,
            function() ORCA.autoquest = not ORCA.autoquest end)
        orca_create_editbox(_t("Profile Name"), ORCA.quest_profile, h8,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.quest_profile = bF else
                    B:SetText(bF)
                    ORCA.quest_profile = nil
                end end)
        orca_create_loadquest(_t("Load Profile"), ORCA.gay, h8, function() ORCA.quest_profile = ORCA.gay end)
    end

    ; function draw_grind_group(h8)
        orca_create_editbox(_t("Profile Name"), ORCA.grind_profile, h8,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.grind_profile = bF else
                    B:SetText(bF)
                    ORCA.grind_profile = nil
                end end)
        orca_create_loadprofile(_t("Load Profile"), ORCA.gay1, h8, function() ORCA.grind_profile = ORCA.gay1 end)
        orca_create_checkbox(_t("Start Grind"), ORCA.grind, h8,
            function(B, S, aq)
                if ORCA.slave and not ORCA.grind then
                    B:SetValue(false)
                    ORCA.grind = false; Squid_Alert(_t(
                    "You cannot start this while slave is active. Turn slave off first."))
                    return
                end
                ; ORCA.grind = aq; if ORCA.grind and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.grind = nil
                end
                ; if ORCA.grind then B:SetValue(true) else B:SetValue(false) end
            end, _t("This starts the bot."))
        orca_create_checkbox(_t("Circle Path"), ORCA.circlejerk, h8, function() ORCA.circlejerk = not ORCA.circlejerk end)
        orca_create_slider(_t("Grind Search Range"), ORCA.max_grind_dist, 10, 200, 1, h8,
            function(S, S, aq) ORCA.max_grind_dist = aq end,
            _t(
            "While botting, this makes the green circle bigger or smaller which would increase or decrease the search range."))
        orca_create_simple_label(_t("\n"), h8)
        settings_button = orca_create_button(_t("Settings"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("botsetting"))
                ORCA.lastFrame = _t("botsetting")
                _saveSettings()
            end)
        orca_create_simple_label(_t("\n"), h8)
        settings_button = orca_create_button(_t("Create Profile"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("createprofile"))
                ORCA.lastFrame = _t("createprofile")
                _saveSettings()
            end)
    end

    ; function _isRecordingOrSlave()
        local h9 = { ORCA.slave, ORCA.recordDungeonEntrance, ORCA.recordDungeonExit, ORCA.recordDungeonRegroup,
            ORCA.recordGrindPath, ORCA.recordGrindPathCTM, ORCA.recordNPCtoGrind, ORCA.recordReplen, ORCA.recordReplen2,
            ORCA.recordReplen3, ORCA.recordResToGrind, ORCA.recordNPCtoGrindCTM }
        for T, b2 in pairs(h9) do if b2 then return true end end
    end

    ; function draw_create_group(h8)
        orca_create_editbox(_t("Profile to edit"), ORCA.grind_profile, h8,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.grind_profile = bF else
                    B:SetText(bF)
                    ORCA.grind_profile = nil
                end end)
        orca_create_loadprofile(_t("Load Profile"), ORCA.gay2, h8, function() ORCA.grind_profile = ORCA.gay2 end)
        local ha = orca_create_simple_group(_t("Edit"), h8)
        orca_create_checkbox(_t("Edit Grind Points"), ORCA.editgp, ha,
            function(B) if not ORCA.editgp and _isRecordingOrSlave() then
                    ORCA.editgp = false; B:SetValue(false)
                    Squid_Alert(_t("You can't edit grind points while recording something or while you're a slave."))
                    return
                else ORCA.editgp = not ORCA.editgp end end, _t("This will allow you to edit the grind points."))
        orca_create_editbox(_t("Click to record Z axis+: "), ORCA.clickrecordz, ha,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.clickrecordz = bF else
                    B:SetText(bF)
                    ORCA.clickrecordz = nil
                end end)
        local hb = orca_create_simple_group(_t("Record"), h8)
        orca_create_checkbox(_t("Rec. Grind Path (click)"), ORCA.recordGrindPathCTM, hb,
            function(B, S, M)
                if not ORCA.recordGrindPathCTM and _isRecordingOrSlave() then
                    ORCA.recordGrindPathCTM = false; B:SetValue(false)
                    Squid_Alert(_t("You can't record grind path while recording something or while you're a slave."))
                    return
                else ORCA.recordGrindPathCTM = M end
                ; ORCA.recordGrindPathCTM = M; if ORCA.recordGrindPathCTM and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordGrindPathCTM = not ORCA.recordGrindPathCTM; B:SetValue(false)
                end
                ; print(not ORCA.recordGrindPathCTM and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordGrindPathCTM then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This records a grind path, you can record it by moving the green circle to wherever you want in game and pressing left control. You can also record it by opening the map and then holding shift and left clicking the map."))
        orca_create_checkbox(_t("Rec. NPC (click)"), ORCA.recordNPCtoGrindCTM, hb,
            function(B, S, aq)
                if not ORCA.recordNPCtoGrindCTM and _isRecordingOrSlave() then
                    ORCA.recordNPCtoGrindCTM = false; B:SetValue(false)
                    Squid_Alert(_t("You can't record NPC while recording something or while you're a slave."))
                    return
                else ORCA.recordNPCtoGrindCTM = aq end
                ; ORCA.recordNPCtoGrindCTM = aq; if ORCA.recordNPCtoGrindCTM and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordNPCtoGrindCTM = not ORCA.recordNPCtoGrindCTM; B:SetValue(false)
                end
                ; print(not ORCA.recordNPCtoGrindCTM and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordNPCtoGrindCTM then B:SetValue(true) else B:SetValue(false) end
            end,
            _t("This records an NPC for repairing and selling. Check the box, target the NPC, then uncheck the box."))
        orca_create_checkbox(_t("Rec. Grind Path (run)"), ORCA.recordGrindPath, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordGrindPath then
                    B:SetValue(false)
                    ORCA.recordGrindPath = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordGrindPath = aq; if ORCA.recordGrindPath and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordGrindPath = not ORCA.recordGrindPath; B:SetValue(false)
                end
                ; print(not ORCA.recordGrindPath and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordGrindPath then B:SetValue(true) else B:SetValue(false) end
            end, _t("This records a grind path while youre running around."))
        orca_create_checkbox(_t("Rec. Resurrection Path"), ORCA.recordResPathCTM, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordResPathCTM then
                    B:SetValue(false)
                    ORCA.recordResPathCTM = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordResPathCTM = aq; if ORCA.recordResPath and not ORCA.Res_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordResPathCTM = not ORCA.recordResPathCTM; B:SetValue(false)
                end
                ; print(not ORCA.recordResPathCTM and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordResPathCTM then B:SetValue(true) else B:SetValue(false) end
            end, _t("This records a resurrection path."))
        orca_create_checkbox(_t("Rec. Replen Vendor"), ORCA.recordReplen, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordReplen then
                    B:SetValue(false)
                    ORCA.recordReplen = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordReplen = aq; if ORCA.recordReplen and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordReplen = not ORCA.recordReplen; B:SetValue(false)
                end
                ; print(not ORCA.recordReplen and _t("|cffff6060Recording done.") or _t("|cFF3dfc89Started recording."))
                if ORCA.recordReplen then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This records an NPC for replenishing specific items. Check the box, target the NPC, then uncheck the box."))
        orca_create_checkbox(_t("Rec. Replen #2 (optional)"), ORCA.recordReplen2, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordReplen2 then
                    B:SetValue(false)
                    ORCA.recordReplen2 = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordReplen2 = aq; if ORCA.recordReplen2 and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordReplen2 = not ORCA.recordReplen2; B:SetValue(false)
                end
                ; print(not ORCA.recordReplen2 and _t("|cffff6060Recording done.") or _t("|cFF3dfc89Started recording."))
                if ORCA.recordReplen2 then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This records an NPC for replenishing specific items. Check the box, target the NPC, then uncheck the box."))
        orca_create_checkbox(_t("Rec. Replen #3 (optional)"), ORCA.recordReplen3, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordReplen3 then
                    B:SetValue(false)
                    ORCA.recordReplen3 = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordReplen3 = aq; if ORCA.recordReplen3 and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordReplen3 = not ORCA.recordReplen; B:SetValue(false)
                end
                ; print(not ORCA.recordReplen3 and _t("|cffff6060Recording done.") or _t("|cFF3dfc89Started recording."))
                if ORCA.recordReplen3 then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This records an NPC for replenishing specific items. Check the box, target the NPC, then uncheck the box."))
        orca_create_checkbox(_t("Rec. Dung. Entrance"), ORCA.recordDungeonEntrance, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordDungeonEntrance then
                    B:SetValue(false)
                    ORCA.recordDungeonEntrance = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordDungeonEntrance = aq; if ORCA.recordDungeonEntrance and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordDungeonEntrance = not ORCA.recordDungeonEntrance; B:SetValue(false)
                end
                ; if ORCA.recordDungeonEntrance and IsInInstance() then
                    print(_t("|cffff6060ERROR! Must be OUTSIDE the instance to record the entrance!"))
                    ORCA.recordDungeonEntrance = not ORCA.recordDungeonEntrance; B:SetValue(false)
                end
                ; print(not ORCA.recordDungeonEntrance and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordDungeonEntrance then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This is for recording a dungeon entrance. Go outside the instance, put the marker in the instance portal and press left-control."))
        orca_create_checkbox(_t("Rec. Dung. Exit"), ORCA.recordDungeonExit, hb,
            function(B, S, aq)
                if _isRecordingOrSlave() and not ORCA.recordDungeonExit then
                    B:SetValue(false)
                    ORCA.recordDungeonExit = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordDungeonExit = aq; if ORCA.recordDungeonExit and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordDungeonExit = not ORCA.recordDungeonExit; B:SetValue(false)
                end
                ; if ORCA.recordDungeonExit and not IsInInstance() then
                    print(_t("|cffff6060ERROR! Must be INSIDE the instance to record the exit!"))
                    ORCA.recordDungeonExit = not ORCA.recordDungeonExit; B:SetValue(false)
                end
                ; print(not ORCA.recordDungeonExit and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordDungeonExit then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This is for recording a dungeon exit. Go inside the instance, put the marker in the instance portal and press left-control."))
        orca_create_checkbox(_t("Rec. Dung. Regroup"), ORCA.recordDungeonRegroup, hb,
            function(B, bj, aq)
                if _isRecordingOrSlave() and not ORCA.recordDungeonRegroup then
                    B:SetValue(false)
                    ORCA.recordDungeonRegroup = false; Squid_Alert(_t(
                    "You are already recording something or are set as a slave. Disable the other recording or slave first."))
                    return
                end
                ; ORCA.recordDungeonRegroup = aq; if ORCA.recordDungeonRegroup and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.recordDungeonRegroup = not ORCA.recordDungeonRegroup; B:SetValue(false)
                end
                ; if ORCA.recordDungeonRegroup and IsInInstance() then
                    print(_t("|cffffthis 6060ERROR! Must be OUTSIDE the instance to record the Regroup!"))
                    ORCA.recordDungeonRegroup = not ORCA.recordDungeonRegroup; B:SetValue(false)
                end
                ; print(not ORCA.recordDungeonRegroup and _t("|cffff6060Recording done.") or
                _t("|cFF3dfc89Started recording."))
                if ORCA.recordDungeonRegroup then B:SetValue(true) else B:SetValue(false) end
            end,
            _t(
            "This is for recording where to run to after exiting a dungeon to reset. It may be necessary for some dungeons."))
        local hc = orca_create_simple_group(_t("Profile Info"), h8)
        PlayerInfo = orca_create_simple_group(_t("Current Player Coords"), hc)
        if px then
            orca_create_simple_label(_t("PlayerX: ") .. px, PlayerInfo)
            orca_create_simple_label(_t("PlayerY: ") .. py, PlayerInfo)
            orca_create_simple_label(_t("PlayerZ: ") .. pz, PlayerInfo)
        end
        ; GrindPoints = orca_create_simple_group(_t("Grind Path"), hc)
        if gp then orca_create_simple_label(_t("Amount of grind points loaded: ") .. #gp, GrindPoints) else
            orca_create_simple_label(_t("Amount of grind points loaded: ") .. 0, GrindPoints) end
        ; if gp then orca_create_simple_label(_t("Positioning in grind path: ") .. _firstStep(gp) .. _t("/") .. #gp,
                GrindPoints) else orca_create_simple_label(_t("Positioning in grind path: 0/0"), GrindPoints) end
        ; NPCinfo = orca_create_simple_group(_t("Repair NPC Info"), hc)
        if NPCname and NPCposX and NPCposY and NPCposZ then
            orca_create_simple_label(_t("Repair NPC Name: ") .. NPCname, NPCinfo)
            orca_create_simple_label(_t("Repair NPC X: ") .. NPCposX, NPCinfo)
            orca_create_simple_label(_t("Repair NPC Y: ") .. NPCposY, NPCinfo)
            orca_create_simple_label(_t("Repair NPC Z: ") .. NPCposZ, NPCinfo)
        else orca_create_simple_label(_t("Repair NPC Not Loaded "), NPCinfo) end
        ; rNPCinfo = orca_create_simple_group(_t("Replenish NPC Info"), hc)
        if replenname and replenposX and replenposY and replenposZ then
            orca_create_simple_label(_t("Replenish NPC Name: ") .. replenname, rNPCinfo)
            orca_create_simple_label(_t("Replenish NPC X: ") .. replenposX, rNPCinfo)
            orca_create_simple_label(_t("Replenish NPC Y: ") .. replenposY, rNPCinfo)
            orca_create_simple_label(_t("Replenish NPC Z: ") .. replenposZ, rNPCinfo)
        else orca_create_simple_label(_t("Replenish Vendor Not Loaded "), rNPCinfo) end
        ; rNPCinfo2 = orca_create_simple_group(_t("Replenish #2 NPC Info"), hc)
        if replen2name and replen2posX and replen2posY and replen2posZ then
            orca_create_simple_label(_t("Replenish #2 NPC Name: ") .. replen2name, rNPCinfo2)
            orca_create_simple_label(_t("Replenish #2 NPC X: ") .. replen2posX, rNPCinfo2)
            orca_create_simple_label(_t("Replenish #2 NPC Y: ") .. replen2posY, rNPCinfo2)
            orca_create_simple_label(_t("Replenish #2 NPC Z: ") .. replen2posZ, rNPCinfo2)
        else orca_create_simple_label(_t("Replenish Vendor #2 Not Loaded "), rNPCinfo2) end
        ; rNPCinfo3 = orca_create_simple_group(_t("Replenish #3 NPC Info"), hc)
        if replen3name and replen3posX and replen3posY and replen3posZ then
            orca_create_simple_label(_t("Replenish #3 NPC Name: ") .. replen3name, rNPCinfo3)
            orca_create_simple_label(_t("Replenish #3 NPC X: ") .. replen3posX, rNPCinfo3)
            orca_create_simple_label(_t("Replenish #3 NPC Y: ") .. replen3posY, rNPCinfo3)
            orca_create_simple_label(_t("Replenish #3 NPC Z: ") .. replen3posZ, rNPCinfo3)
        else orca_create_simple_label(_t("Replenish Vendor #3 Not Loaded "), rNPCinfo3) end
        ; orca_create_simple_label(_t("----"), h8)
    end

    ; function draw_afk_one_group(h8)
        local hd = orca_create_simple_group(_t("Consumables"), h8)
        orca_create_editbox(_t("Food: "), ORCA.foodName, hd,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.foodName = bF else
                    B:SetText(bF)
                    ORCA.foodName = nil
                end end)
        orca_create_editbox(_t("Drink: "), ORCA.drinkName, hd,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.drinkName = bF else
                    B:SetText(bF)
                    ORCA.drinkName = nil
                end end)
        orca_create_editbox(_t("Health Potion: "), ORCA.healthPotionName, hd,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.healthPotionName = bF else
                    B:SetText(bF)
                    ORCA.healthPotionName = nil
                end end)
        orca_create_editbox(_t("Mana Potion: "), ORCA.manaPotionName, hd,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.manaPotionName = bF else
                    B:SetText(bF)
                    ORCA.manaPotionName = nil
                end end)
        orca_create_slider(_t("Eat Under Health%"), ORCA.min_HP, 0, 85, 1, hd, function(S, S, aq) ORCA.min_HP = aq end,
            _t("If below this HP, the bot will wait until full HP to continue botting."))
        orca_create_slider(_t("Drink Under Mana%"), ORCA.min_MP, -1, 85, 1, hd, function(S, S, aq) ORCA.min_MP = aq end,
            _t("If below this MP, the bot will wait until full HP to continue botting."))
        orca_create_slider(_t("Use Health Potion %"), ORCA.hpPot, 0, 100, 1, hd, function(S, S, M) ORCA.hpPot = M end,
            _t("This will use your health potions or healthstones below this % HP."))
        orca_create_slider(_t("Use Mana Potion %"), ORCA.mpPot, 0, 100, 1, hd, function(S, S, M) ORCA.mpPot = M end,
            _t("This will use your mana potions or mage mana stones below this % HP."))
        local he = orca_create_simple_group(_t("Mount Settings"), h8)
        orca_create_checkbox(_t("Mount"), ORCA.mount, he, function() ORCA.mount = not ORCA.mount end,
            _t("Makes the bot use mount"))
        orca_create_checkbox(_t("Flying Mount"), ORCA.flyingmount, he,
            function() ORCA.flyingmount = not ORCA.flyingmount end, _t("Makes the bot use flying mount"))
        orca_create_editbox(_t("Mount Item"), ORCA.mountItem, he,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mountItem = bF else ORCA.mountItem = nil end end)
        orca_create_editbox(_t("Mount Spell"), ORCA.mountSpell, he,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mountSpell = bF else ORCA.mountSpell = nil end end)
        orca_create_editbox(_t("PvP Mount:"), ORCA.pvpMount, he,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.pvpMount = bF else ORCA.pvpMount = nil end end)
        local hf = orca_create_simple_group(_t("Pull Settings"), h8)
        orca_create_editbox(_t("Pull Spell"), ORCA.pullspell, hf,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.pullspell = bF else ORCA.pullspell = nil end end)
        orca_create_slider(_t("Number of pull casts"), ORCA.pullcount, 0, 5, 1, hf, function(S, S, aq) ORCA.pullcount =
            aq end,
            _t(
            "Type a pull spell into the bot. Whatever spell you write the bot will initiate combat with. On top of that, there will be a slider so u can slide it to lets say 2 and the grind bot will start combat with 2 casts then do whatever else."))
        orca_create_slider(_t("Pull more mobs at once"), ORCA.pullthismany, 0, 10, 1, hf,
            function(S, S, aq) ORCA.pullthismany = aq end,
            _t(
            "The grind bot will attempt to initiate combat with this many mobs at once. If you are below your rest HP or MP% it will not pull more."))
        orca_create_slider(_t("Char vs mob lvl"), ORCA.pulllvl, 0, 10, 1, hf, function(S, S, aq) ORCA.pulllvl = aq end,
            _t(
            "The bot will not initialize combat with mobs that are this many or more higher level than your character."))
        orca_create_checkbox(_t("Custom Killing Distance"), ORCA.cgrinddist, hf, function(S, S, aq) ORCA.cgrinddist = aq end,
            _t(
            "This makes the bot go to this distance to attack mobs while grinding. It is useful for classes such as shaman if you want it to act like an Elemental Shaman."))
        orca_create_slider(_t("Start Killing Distance"), ORCA.grinddist, 5, 100, 1, hf,
            function(S, S, aq) ORCA.grinddist = aq end,
            _t(
            "This makes the bot go to this distance to attack mobs while grinding. It is useful for classes such as shaman if you want it to act like an Elemental Shaman."))
        orca_create_checkbox(_t("Target Elites"), ORCA.farmelites, hf, function() ORCA.farmelites = not ORCA.farmelites end,
            _t("Makes the grind bot target elites."))
        local hg = orca_create_simple_group(_t("Item Buying"), h8)
        orca_create_checkbox(_t("Hearth to vendor"), ORCA.hearth_to_vendor, hg,
            function(S, S, aq) ORCA.hearth_to_vendor = aq end,
            _t(
            "This will make the bot use hearthstone to go to vendors. If you are multiboxing it will also send a command to your party to also hearth."))
        orca_create_editbox(_t("Replenish Item #1"), ORCA.replenish, hg,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.replenish = bF else ORCA.replenish = nil end end)
        orca_create_slider(_t("Stacks to replenish item #1"), ORCA.amountToReplenish, 2, 40, 1, hg,
            function(S, S, aq) ORCA.amountToReplenish = aq end)
        orca_create_editbox(_t("Replenish Item #2"), ORCA.replenishtwo, hg,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.replenishtwo = bF else ORCA.replenishtwo = nil end end)
        orca_create_slider(_t("Stacks to replenish item #2"), ORCA.amountToReplenishtwo, 2, 40, 1, hg,
            function(S, S, aq) ORCA.amountToReplenishtwo = aq end)
        orca_create_editbox(_t("Replenish Item #3"), ORCA.replenishthree, hg,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.replenishthree = bF else ORCA.replenishthree = nil end end)
        orca_create_slider(_t("Stacks to replenish item #3"), ORCA.amountToReplenishthree, 2, 40, 1, hg,
            function(S, S, aq) ORCA.amountToReplenishthree = aq end)
        local hh = orca_create_simple_group(_t("Selling & Loot Options"), h8)
        orca_create_checkbox(_t("Sell grey/white"), ORCA.sell, hh, function(S, S, aq) ORCA.sell = aq end,
            _t("This makes the bot sell white and grey items."))
        orca_create_checkbox(_t("Sell greens"), ORCA.greens, hh, function(S, S, aq) ORCA.greens = aq end,
            _t("This makes the bot sell green items."))
        orca_create_multiline_editbox(_t("Dont Sell (Separate by Comma):"), ORCA.dontsell_saved_text, hh,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.dontsell_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.dontsell = h4; xRunMacroText(_t("/dump ORCA.dontsell"))
                    else
                        B:SetText(bF)
                        ORCA.dontsell = {}
                        ORCA.dontsell_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.dontsell = {}
                    ORCA.dontsell_heal_saved_text = nil
                end end)
        orca_create_multiline_editbox(_t("Delete Items(separate by comma):"), ORCA.delitems_saved_text, hh,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.delitems_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.delitems = h4; xRunMacroText(_t("/dump ORCA.delitems"))
                    else
                        B:SetText(bF)
                        ORCA.delitems = {}
                        ORCA.delitems_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.delitems = {}
                    ORCA.delitems_heal_saved_text = nil
                end end, _t("This will make the bot delete the items you put in the box. (Separate by comma)"))
        local hi = orca_create_simple_group(_t("Lists"), h8)
        orca_create_simple_label(_t("Heals only the names on this list, if blank, heals everyone (Separate by comma)"),
            hi)
        orca_create_multiline_editbox(_t(""), ORCA.who_to_heal_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.who_to_heal_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.whoToHeal = h4; xRunMacroText(_t("/dump ORCA.whoToHeal"))
                    else
                        B:SetText(bF)
                        ORCA.whoToHeal = {}
                        ORCA.who_to_heal_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.whoToHeal = {}
                    ORCA.who_to_heal_saved_text = nil
                end end)
        orca_create_simple_label(_t("Dispels only spell names on this list (Separate by comma)"), hi)
        orca_create_multiline_editbox(_t(""), ORCA.what_to_dispel_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_dispel_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.dispelWhitelist = h4; xRunMacroText(_t("/dump ORCA.dispelWhitelist"))
                    else
                        B:SetText(bF)
                        ORCA.dispelWhitelist = {}
                        ORCA.what_to_dispel_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.dispelWhitelist = {}
                    ORCA.what_to_dispel_saved_text = nil
                end end,
            _t(
            "If this is blank, the class rotation will dispel everything. If you put something in here, it will only dispel the spells you put in here."))
        orca_create_checkbox(_t("Override Interrupt Logic"), ORCA.disableInterrupts, hi,
            function(B, S, M) ORCA.disableInterrupts = M end,
            _t("Turn this on if using the boxes below to customize what the bot interrupts."))
        orca_create_slider(_t("Enemy HP%"), ORCA.interrupt_enemy_hp, 0, 100, 1, hi,
            function(S, S, aq) ORCA.interrupt_enemy_hp = aq end,
            _t("This makes the bot interrupt the below list when any enemy is below this % health."))
        orca_create_simple_label(_t("Interrupt when enemy below %"), hi)
        orca_create_multiline_editbox(_t(""), ORCA.what_to_interrupt_enemy_hp_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_interrupt_enemy_hp_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.interrupt_enemy_hp_Whitelist = h4; xRunMacroText(_t(
                        "/dump ORCA.interrupt_enemy_hp_Whitelist"))
                    else
                        B:SetText(bF)
                        ORCA.interrupt_enemy_hp_Whitelist = {}
                        ORCA.what_to_interrupt_enemy_hp_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.interrupt_enemy_hpWhitelist = {}
                    ORCA.what_to_interrupt_enemy_hp_saved_text = nil
                end end)
        orca_create_slider(_t("Friendly HP%"), ORCA.interrupt_friendly_hp, 0, 100, 1, hi,
            function(S, S, aq) ORCA.interrupt_friendly_hp = aq end,
            _t("This makes the bot interrupt the below list when any friendly is below this % health."))
        orca_create_multiline_editbox(_t("Interrupt when friendly below %"),
            ORCA.what_to_interrupt_friendly_hp_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_interrupt_friendly_hp_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.interrupt_friendly_hp_Whitelist = h4; xRunMacroText(_t(
                        "/dump ORCA.interrupt_friendly_hp_Whitelist"))
                    else
                        B:SetText(bF)
                        ORCA.interrupt_friendly_hp_Whitelist = {}
                        ORCA.what_to_interrupt_friendly_hp_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.interrupt_friendly_hpWhitelist = {}
                    ORCA.what_to_interrupt_friendly_hp_saved_text = nil
                end end)
        orca_create_slider(_t("Either HP%"), ORCA.interrupt_either_hp, 0, 100, 1, hi,
            function(S, S, aq) ORCA.interrupt_either_hp = aq end,
            _t("This makes the bot interrupt the below list when any friendly or enemy is below this % health."))
        orca_create_multiline_editbox(_t("Interrupt when either below %"), ORCA.what_to_interrupt_either_hp_saved_text,
            hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_interrupt_either_hp_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.interrupt_either_hp_Whitelist = h4; xRunMacroText(_t(
                        "/dump ORCA.interrupt_either_hp_Whitelist"))
                    else
                        B:SetText(bF)
                        ORCA.interrupt_either_hp_Whitelist = {}
                        ORCA.what_to_interrupt_either_hp_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.interrupt_either_hpWhitelist = {}
                    ORCA.what_to_interrupt_either_hp_saved_text = nil
                end end)
        orca_create_multiline_editbox(_t("Interrupt always"), ORCA.what_to_interrupt_always_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_interrupt_always_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.interrupt_always_Whitelist = h4; xRunMacroText(_t("/dump ORCA.interrupt_always_Whitelist"))
                    else
                        B:SetText(bF)
                        ORCA.interrupt_always_Whitelist = {}
                        ORCA.what_to_interrupt_always_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.interrupt_alwaysWhitelist = {}
                    ORCA.what_to_interrupt_always_saved_text = nil
                end end, _t("Anything on this list will be interrupted always."))
        orca_create_simple_label(_t("Mob names to ignore (Separate by comma)"), hi)
        orca_create_multiline_editbox(_t(""), ORCA.blacklist_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.blacklist_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.blacklistNames = h4; xRunMacroText(_t("/dump ORCA.blacklistNames"))
                    else
                        B:SetText(bF)
                        ORCA.blacklistNames = {}
                        ORCA.blacklist_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.blacklistNames = {}
                    ORCA.blacklist_saved_text = nil
                end end)
        orca_create_simple_label(_t("Do not intiate combat with:\n\(separated by comma)"), hi)
        orca_create_multiline_editbox(_t(""), ORCA.graylist_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.graylist_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.graylistNames = h4; xRunMacroText(_t("/dump ORCA.graylistNames"))
                    else
                        B:SetText(bF)
                        ORCA.graylistNames = {}
                        ORCA.graylist_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.graylistNames = {}
                    ORCA.graylist_saved_text = nil
                end end)
        orca_create_simple_label(_t("Mine or Herb these mobs (separate by comma)"), hi)
        orca_create_multiline_editbox(_t(""), ORCA.skinlist_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.skinlist_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.skinlistNames = h4; xRunMacroText(_t("/dump ORCA.skinlistNames"))
                    else
                        B:SetText(bF)
                        ORCA.skinlistNames = {}
                        ORCA.skinlist_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.skinlistNames = {}
                    ORCA.skinlist_saved_text = nil
                end end)
        orca_create_checkbox(_t("Auto Interact"), ORCA.auto_interact_objects, hi,
            function(S, S, aq) ORCA.auto_interact_objects = aq end)
        orca_create_multiline_editbox(_t("Object Names"), ORCA.obj_box_saved_text, hi,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.obj_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.objects_to_draw = h4; xRunMacroText(_t("/dump ORCA.objects_to_draw"))
                    else
                        B:SetText(bF)
                        ORCA.objects_to_draw = {}
                        ORCA.obj_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.objects_to_draw = {}
                    ORCA.obj_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Delete greys"), ORCA.deletegreys, hh, function(S, S, aq) ORCA.deletegreys = aq end,
            _t("This makes the bot delete grey items on pickup."))
        orca_create_checkbox(_t("Dont Loot"), ORCA.dontloot, hh, function(S, S, aq) ORCA.dontloot = aq end,
            _t("This makes the bot not loot."))
        orca_create_checkbox(_t("Dont Repair"), ORCA.dontrepair, hh, function(S, S, aq) ORCA.dontrepair = aq end,
            _t("This makes the bot not repair."))
        local hj = orca_create_simple_group(_t("Mail"), h8)
        orca_create_checkbox(_t("Mail"), ORCA.mail, hj, function(S, S, aq) ORCA.mail = aq end,
            _t("Turn this on to use mailing."))
        orca_create_simple_label(
        _t("If the mailbox you are trying to use is not named 'Mailbox', you should use this to specify what name it is"),
            hj)
        orca_create_editbox(_t("Mailbox Name:"), ORCA.mailname, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mailname = bF else ORCA.mailname = nil end end)
        orca_create_editbox(_t("Mail To:"), ORCA.mailto, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mailto = bF else ORCA.mailto = nil end end,
            _t("This is who to mail to, make sure they are on your friends list."))
        orca_create_checkbox(_t("Mail White"), ORCA.mailwhite, hj, function(S, S, aq) ORCA.mailwhite = aq end)
        orca_create_checkbox(_t("Mail Green"), ORCA.mailgreen, hj, function(S, S, aq) ORCA.mailgreen = aq end)
        orca_create_checkbox(_t("Mail Blue"), ORCA.mailblue, hj, function(S, S, aq) ORCA.mailblue = aq end)
        orca_create_checkbox(_t("Mail Purple"), ORCA.mailpurple, hj, function(S, S, aq) ORCA.mailpurple = aq end)
        orca_create_multiline_editbox(_t("Mail Certain Items (Separate by Comma):"), ORCA.specialmail_saved_text, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.specialmail_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.specialmail = h4; xRunMacroText(_t("/dump ORCA.specialmail"))
                    else
                        B:SetText(bF)
                        ORCA.specialmail = {}
                        ORCA.specialmail_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.specialmail = {}
                    ORCA.specialmail_heal_saved_text = nil
                end end)
        orca_create_multiline_editbox(_t("Dont Mail (Separate by Comma):"), ORCA.dontspecialmail_saved_text, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.dontspecialmail_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.dontspecialmail = h4; xRunMacroText(_t("/dump ORCA.dontspecialmail"))
                    else
                        B:SetText(bF)
                        ORCA.dontspecialmail = {}
                        ORCA.dontspecialmail_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.dontspecialmail = {}
                    ORCA.dontspecialmail_heal_saved_text = nil
                end end)
        orca_create_checkbox(_t("Disable Drawing"), ORCA.disabledraw, h8,
            function() ORCA.disabledraw = not ORCA.disabledraw end, _t("This disables drawings."))
        local hk = orca_create_simple_group(_t("Nav Mesh"), h8)
        orca_create_slider(_t("Random Jump (1 to X seconds)"), ORCA.randomJump, 0, 250, 1, hk,
            function(S, S, aq) ORCA.randomJump = aq end,
            _t("This makes the bot jump. It will jump less the higher the slider is."))
        orca_create_checkbox(_t("Avoid water"), ORCA.nowater, hk, function(S, S, aq) ORCA.nowater = aq end)
        orca_create_slider(_t("Padding from Walls"), ORCA.wallpadding, 0, 5, 1, hk,
            function(S, S, aq) ORCA.wallpadding = aq end)
        orca_create_checkbox(_t("Disable Local Nav Unstuck"), ORCA.disableUnstuck, hk,
            function(S, S, aq) ORCA.disableUnstuck = aq end)
        orca_create_checkbox(_t("Enable Unstuck Drawings"), ORCA.drawUnstuck, hk, function(S, S, aq) ORCA.drawUnstuck =
            aq end)
        local hl = orca_create_simple_group(_t("Windows Only"), h8)
        orca_create_slider(_t("Argument A"), ORCA.argA, 0, 25, 0.1, hl, function(S, S, aq) ORCA.argA = aq end,
            _t("do not touch if you dont know what youre doing"))
        orca_create_slider(_t("Argument B"), ORCA.argB, 0, 25, 0.1, hl, function(S, S, aq) ORCA.argB = aq end,
            _t("do not touch if you dont know what youre doing"))
        orca_create_slider(_t("Argument C"), ORCA.argC, 0, 25, 0.1, hl, function(S, S, aq) ORCA.argC = aq end,
            _t("do not touch if you dont know what youre doing"))
        orca_create_slider(_t("Argument D"), ORCA.argD, 0, 25, 0.1, hl, function(S, S, aq) ORCA.argD = aq end,
            _t("do not touch if you dont know what youre doing"))
        orca_create_checkbox(_t("Start Grind"), ORCA.grind, hl,
            function(B, S, aq)
                if ORCA.slave and not ORCA.grind then
                    B:SetValue(false)
                    ORCA.grind = false; Squid_Alert(_t(
                    "You cannot start this while slave is active. Turn slave off first."))
                    return
                end
                ; ORCA.grind = aq; if ORCA.grind and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.grind = nil
                end
                ; if ORCA.grind then B:SetValue(true) else B:SetValue(false) end
            end, _t("This starts the bot."))
        orca_setup_tool = orca_create_button(_t("Setup"), h8,
            function()
                OpenURL(_t("https://github.com/SalvationAddon/salvation-app/blob/master/docs/How-To.md"))
                orca_enable_button:SetText(_t("Setup"))
            end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_gather_group(h8)
        orca_create_checkbox(_t("Start"), ORCA.grind, h8,
            function(B, S, aq)
                if ORCA.slave and not ORCA.grind then
                    B:SetValue(false)
                    ORCA.grind = false; Squid_Alert(_t(
                    "You cannot start this while slave is active. Turn slave off first."))
                    return
                end
                ; ORCA.grind = aq; if ORCA.grind and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.grind = nil
                end
                ; if ORCA.grind then B:SetValue(true) else B:SetValue(false) end
            end, _t("This starts the bot."))
        orca_create_editbox(_t("Profile Name"), ORCA.grind_profile, h8,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.grind_profile = bF else
                    B:SetText(bF)
                    ORCA.grind_profile = nil
                end end)
        orca_create_loadprofile(_t("Load Profile"), ORCA.gay2, h8, function() ORCA.grind_profile = ORCA.gay2 end)
        orca_create_checkbox(_t("Circle Path"), ORCA.circlejerk, h8, function() ORCA.circlejerk = not ORCA.circlejerk end)
        orca_create_checkbox(_t("Ignore if other player"), ORCA.dontsnipenodes, h8,
            function() ORCA.dontsnipenodes = not ORCA.dontsnipenodes end,
            _t("If another player is around a node the bot will blacklist the node."))
        orca_create_checkbox(_t("Ignore elite nodes"), ORCA.blacklistelitenodes, h8,
            function() ORCA.blacklistelitenodes = not ORCA.blacklistelitenodes end,
            _t("If an elite enemy is around a node the bot will blacklist the node."))
        orca_create_checkbox(_t("Gather Mines"), ORCA.mining, h8, function(S, S, aq) ORCA.mining = aq end,
            _t("This makes the bot gather mining nodes."))
        orca_create_checkbox(_t("Gather Herbs"), ORCA.herbing, h8, function(S, S, aq) ORCA.herbing = aq end,
            _t("This makes the bot gather herb nodes."))
        orca_create_checkbox(_t("Gather & Grind"), ORCA.hybrid, h8, function(S, S, aq) ORCA.hybrid = aq end,
            _t("While gather botting, the bot will also grind mobs."))
        orca_create_checkbox(_t("Ignore mobs while mounted"), ORCA.ignoreWhileMounted, h8,
            function(S, S, aq) ORCA.ignoreWhileMounted = aq end,
            _t("This makes the bot ignore all mobs while it is mounted (useful for gathering)."))
        orca_create_simple_label(_t("Ignore these node names (Separate by Comma):"), h8)
        orca_create_multiline_editbox(_t(""), ORCA.ignore_nodes_saved_text, h8,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.ignore_nodes_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.ignoreNodes = h4; herbs = ogHerb; mines = ogMine; xRunMacroText(_t("/dump ORCA.ignoreNodes"))
                    else
                        B:SetText(bF)
                        herbs = ogHerb; mines = ogMine; ORCA.ignoreNodes = {}
                        ORCA.ignore_nodes_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    herbs = ogHerb; mines = ogMine; ORCA.ignoreNodes = {}
                    ORCA.ignore_nodes_saved_text = nil
                end end)
        local hj = orca_create_simple_group(_t("Mail"), h8)
        orca_create_checkbox(_t("Hearth to mail"), ORCA.hearth_to_vendor, hj,
            function(S, S, aq) ORCA.hearth_to_vendor = aq end,
            _t(
            "Make sure your hearthstone is set in the correct spot, near a mailbox, and when your bags are full it will hearth to near that mailbox."))
        orca_create_checkbox(_t("Mail"), ORCA.mail, hj, function(S, S, aq) ORCA.mail = aq end,
            _t("Turn this on to use mailing."))
        orca_create_simple_label(
        _t("If the mailbox you are trying to use is not named 'Mailbox', you should use this to specify what name it is"),
            hj)
        orca_create_editbox(_t("Mailbox Name:"), ORCA.mailname, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mailname = bF else ORCA.mailname = nil end end)
        orca_create_editbox(_t("Mail To:"), ORCA.mailto, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then ORCA.mailto = bF else ORCA.mailto = nil end end,
            _t("This is who to mail to, make sure they are on your friends list."))
        orca_create_checkbox(_t("Mail White"), ORCA.mailwhite, hj, function(S, S, aq) ORCA.mailwhite = aq end)
        orca_create_checkbox(_t("Mail Green"), ORCA.mailgreen, hj, function(S, S, aq) ORCA.mailgreen = aq end)
        orca_create_checkbox(_t("Mail Blue"), ORCA.mailblue, hj, function(S, S, aq) ORCA.mailblue = aq end)
        orca_create_checkbox(_t("Mail Purple"), ORCA.mailpurple, hj, function(S, S, aq) ORCA.mailpurple = aq end)
        orca_create_multiline_editbox(_t("Mail Certain Items (Separate by Comma):"), ORCA.specialmail_saved_text, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.specialmail_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.specialmail = h4; xRunMacroText(_t("/dump ORCA.specialmail"))
                    else
                        B:SetText(bF)
                        ORCA.specialmail = {}
                        ORCA.specialmail_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.specialmail = {}
                    ORCA.specialmail_heal_saved_text = nil
                end end)
        orca_create_multiline_editbox(_t("Dont Mail (Separate by Comma):"), ORCA.dontspecialmail_saved_text, hj,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.dontspecialmail_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.dontspecialmail = h4; xRunMacroText(_t("/dump ORCA.dontspecialmail"))
                    else
                        B:SetText(bF)
                        ORCA.dontspecialmail = {}
                        ORCA.dontspecialmail_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.dontspecialmail = {}
                    ORCA.dontspecialmail_heal_saved_text = nil
                end end)
        orca_create_simple_label(_t("---"), h8)
        settings_button = orca_create_button(_t("More Settings"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("botsetting"))
                ORCA.lastFrame = _t("botsetting")
                _saveSettings()
            end)
        settings_button = orca_create_button(_t("Create Profile"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("createprofile"))
                ORCA.lastFrame = _t("createprofile")
                _saveSettings()
            end)
    end

    ; function draw_pvp_group(h8)
        orca_create_checkbox(_t("Battleground Bot"), ORCA.bgbot, h8, function(S, S, aq) ORCA.bgbot = aq end,
            _t("This will make the bot do battlegrounds."))
        orca_create_checkbox(_t("Start"), ORCA.grind, h8,
            function(B, S, aq)
                if ORCA.slave and not ORCA.grind then
                    B:SetValue(false)
                    ORCA.grind = false; Squid_Alert(_t(
                    "You cannot start this while slave is active. Turn slave off first."))
                    return
                end
                ; ORCA.grind = aq; if ORCA.grind and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.grind = nil
                end
                ; if ORCA.grind then B:SetValue(true) else B:SetValue(false) end
            end, _t("This starts the bot."))
        orca_create_checkbox(_t("Hit only Players or Elites"), ORCA.onlyPlayers, h8,
            function(S, S, aq) ORCA.onlyPlayers = aq end,
            _t(
            "This makes the bot only target players in battlegrounds. It will not target any PvE mobs such as the ones in AV."))
        orca_create_checkbox(_t("Healing Mode (pvp)"), ORCA.ishealer, h8, function() ORCA.ishealer = not ORCA.ishealer end,
            _t("This makes the bot look more human if you are a healer."))
        orca_create_checkbox(_t("AV Passive Mode"), ORCA.passiveInAV, h8, function(S, S, aq) ORCA.passiveInAV = aq end,
            _t(
            "This makes the bot passive in AV. It doesnt try to target anyone or cast any spells on them. It just stands around and collects honor."))
        orca_create_checkbox(_t("Ignore players while mounted"), ORCA.ignoreWhileMounted, h8,
            function(S, S, aq) ORCA.ignoreWhileMounted = aq end,
            _t("This makes the bot ignore all players while it is mounted (useful for battlegrounds)."))
        local hm = orca_create_simple_group(_t("WotLK Battlegrounds"), h8)
        orca_create_checkbox(_t("Use PVP frame to queue"), ORCA.usepvpframe, hm, function(S, S, aq) ORCA.usepvpframe = aq end,
            _t("This makes the bot use the PVP frame to queue for battlegrounds."))
        orca_create_editbox(_t("Battlemaster Name:"), ORCA.wolkbattlemaster, hm,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.wolkbattlemaster = bF else
                    B:SetText(bF)
                    ORCA.wolkbattlemaster = nil
                end end)
        orca_create_checkbox(_t("Random BG"), ORCA.wolk_random, hm, function(S, S, aq) ORCA.wolk_random = aq end,
            _t("This makes the bot do random battlegrounds."))
        orca_create_checkbox(_t("WSG"), ORCA.wolk_wsg, hm, function(S, S, aq) ORCA.wolk_wsg = aq end,
            _t("This makes the bot do WSG."))
        orca_create_checkbox(_t("AB"), ORCA.wolk_ab, hm, function(S, S, aq) ORCA.wolk_ab = aq end,
            _t("This makes the bot do AB."))
        orca_create_checkbox(_t("AV"), ORCA.wolk_av, hm, function(S, S, aq) ORCA.wolk_av = aq end,
            _t("This makes the bot do AV."))
        orca_create_checkbox(_t("EotS"), ORCA.wolk_eots, hm, function(S, S, aq) ORCA.wolk_eots = aq end,
            _t("This makes the bot do EotS."))
        orca_create_checkbox(_t("SoTA"), ORCA.wolk_sota, hm, function(S, S, aq) ORCA.wolk_sota = aq end,
            _t("This makes the bot do SoTA."))
        local hn = orca_create_simple_group(_t("Classic Battlegrounds"), h8)
        orca_create_editbox(_t("AV ") .. _t("Battlemaster Name"), ORCA.avbattlemaster, hn,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.avbattlemaster = bF else
                    B:SetText(bF)
                    ORCA.avbattlemaster = nil
                end end)
        orca_create_editbox(_t("AB ") .. _t("Battlemaster Name"), ORCA.abbattlemaster, hn,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.abbattlemaster = bF else
                    B:SetText(bF)
                    ORCA.abbattlemaster = nil
                end end)
        orca_create_editbox(_t("WSG ") .. _t("Battlemaster Name"), ORCA.wsgbattlemaster, hn,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.wsgbattlemaster = bF else
                    B:SetText(bF)
                    ORCA.wsgbattlemaster = nil
                end end)
        orca_create_editbox(_t("Idle (X,Y,Z)"), ORCA.idle, h8,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.idle = bF else
                    B:SetText(bF)
                    ORCA.idle = nil
                end end,
            _t(
            "if battleground now you can type in XYZ coordinate to idle at while in queue, to do so go in gui, go to Idle at (XYZ) type in .gps in game, write in the X,Y,Z Separate by comma. doesnt need to be exact decimals, just 1 or 2 is OK."))
        orca_create_slider(_t("Smart Move Friendly Weight"), ORCA.__smart_move_friend_score, 1, 5, 0.1, h8,
            function(S, S, aq) ORCA.__smart_move_friend_score = tonumber(aq) end)
        orca_create_slider(_t("Smart Move Hostile Weight"), ORCA.__smart_move_hostile_score, 0, 5, 0.1, h8,
            function(S, S, aq) ORCA.__smart_move_hostile_score = tonumber(aq) end)
        orca_create_simple_label(_t("\n"), h8)
        settings_button = orca_create_button(_t("More Settings"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("botsetting"))
                ORCA.lastFrame = _t("botsetting")
                _saveSettings()
            end)
    end

    ; function draw_dungeon_group(h8)
        local ho = orca_create_simple_group(_t("Multibox"), h8)
        orca_create_checkbox(_t("Auto Multibox"), ORCA.autobox, ho, function(S, S, M) ORCA.autobox = M end)
        orca_create_checkbox(_t("AutoLoot"), ORCA.autoloot, ho, function(S, S, M) ORCA.autoloot = M end)
        orca_create_checkbox(_t("Slave"), ORCA.slave, ho, function(S, S, M) ORCA.slave = M end)
        orca_create_checkbox(_t("Master") .. _t(" (Open World ONLY)"), ORCA.master, ho, function(S, S, M) ORCA.master = M end)
        orca_create_editbox(_t("Master Name"), ORCA.mastername, ho,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.mastername = bF else
                    B:SetText(bF)
                    ORCA.mastername = nil
                end end)
        orca_create_slider(_t("Kill Distance"), ORCA.slaveKillDist, 0, 40, 1, ho, function(S, S, M) ORCA.slaveKillDist =
            M end)
        orca_create_checkbox(_t("Auto movement values"), ORCA.autovalues, ho,
            function() ORCA.autovalues = not ORCA.autovalues end,
            _t("This will adjust all this for you depending on your class."))
        orca_create_checkbox(_t("Attack from behind"), ORCA.standbehind, ho,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("This will make the bot attempt to attack from behind."))
        orca_create_slider(_t("Min Follow Distance"), ORCA.slaveMinDist, 0, 40, 1, ho,
            function(S, S, M) ORCA.slaveMinDist = M end)
        orca_create_slider(_t("Max Follow Distance"), ORCA.slaveMaxDist, 0, 40, 1, ho,
            function(S, S, M) ORCA.slaveMaxDist = M end)
        orca_create_slider(_t("Min left position offset"), ORCA.minSlaveLeftOffset, 0, 40, 1, ho,
            function(S, S, M) ORCA.minSlaveLeftOffset = M end)
        orca_create_slider(_t("Max left position offset"), ORCA.maxSlaveLeftOffset, 0, 40, 1, ho,
            function(S, S, M) ORCA.maxSlaveLeftOffset = M end)
        orca_create_slider(_t("Min right position offset"), ORCA.minSlaveRightOffset, 0, 40, 1, ho,
            function(S, S, M) ORCA.minSlaveRightOffset = M end)
        orca_create_slider(_t("Max right position offset"), ORCA.maxSlaveRightOffset, 0, 40, 1, ho,
            function(S, S, M) ORCA.maxSlaveRightOffset = M end)
        orca_create_simple_label(
        _t("This will request items to be traded to the slave from the master when the slave doesn't have that item."),
            ho)
        orca_create_editbox(_t("Request Item #1"), ORCA.trade1, ho,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.trade1 = bF else
                    B:SetText(bF)
                    ORCA.trade1 = nil
                end end)
        orca_create_editbox(_t("Request Item #2"), ORCA.trade2, ho,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.trade2 = bF else
                    B:SetText(bF)
                    ORCA.trade2 = nil
                end end)
        orca_create_editbox(_t("Request Item #3"), ORCA.trade3, ho,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.trade3 = bF else
                    B:SetText(bF)
                    ORCA.trade3 = nil
                end end)
        local hp = orca_create_simple_group(_t("Dungeon"), h8)
        orca_create_editbox(_t("Profile Name"), ORCA.grind_profile, hp,
            function(B, S, bF) if string.len(bF) >= 1 then ORCA.grind_profile = bF else
                    B:SetText(bF)
                    ORCA.grind_profile = nil
                end end)
        orca_create_simple_label(
        _t(
        "If multiboxing dungeons, make sure to load the profile on all slaves aswell so they know where the dungeon entrance is."),
            hp)
        orca_create_loadprofile(_t("Load Profile"), ORCA.gay4, hp, function() ORCA.grind_profile = ORCA.gay4 end)
        orca_create_checkbox(_t("Start (MASTER ONLY)"), ORCA.grind, hp,
            function(B, S, aq)
                if ORCA.slave and not ORCA.grind then
                    B:SetValue(false)
                    ORCA.grind = false; Squid_Alert(_t(
                    "You cannot start this while slave is active. Turn slave off first."))
                    return
                end
                ; ORCA.grind = aq; if ORCA.grind and not ORCA.grind_profile then
                    print(_t("|cffff6060ERROR! write the grind profile in the edit box!"))
                    ORCA.grind = nil
                end
                ; if ORCA.grind then B:SetValue(true) else B:SetValue(false) end
            end, _t("This starts the bot."))
        orca_create_slider(_t("Grind Search Range"), ORCA.max_grind_dist, 10, 200, 1, hp,
            function(S, S, aq) ORCA.max_grind_dist = aq end,
            _t(
            "While botting, this makes the green circle bigger or smaller which would increase or decrease the search range."))
        orca_create_checkbox(_t("Pull to grind node"), ORCA.pullback, hp, function(S, S, aq) ORCA.pullback = aq end,
            _t(
            "This is used for some dungeon profiles and it makes the bot pull the mobs back to the previous grind node."))
        orca_create_slider(_t("Max # pulling"), ORCA.maxelitepull, 0, 8, 1, hp, function(S, S, aq) ORCA.maxelitepull = aq end,
            _t(
            "The dungeon bot will only pull this many elites at once, so if there is a patrol making more elites around it might trigger that."))
        orca_create_checkbox(_t("Dungeon bot"), ORCA.dungeonBot, hp, function(S, S, aq) ORCA.dungeonBot = aq end,
            _t("This makes the bot do dungeons."))
        orca_create_checkbox(_t("Directly Exit Dungeon"), ORCA.directExit, hp, function(S, S, aq) ORCA.directExit = aq end,
            _t("This makes the bot exit the dungeon right away without running back through the grind path."))
        orca_create_checkbox(_t("Dont Reset Dungeon"), ORCA.dontReset, hp, function(S, S, aq) ORCA.dontReset = aq end,
            _t("This makes the bot not reset dungeons."))
        orca_create_simple_label(_t("\n"), h8)
        settings_button = orca_create_button(_t("More Settings"), h8,
            function()
                OrcaUITabGroup:SelectTab(_t("botsetting"))
                ORCA.lastFrame = _t("botsetting")
                _saveSettings()
            end)
    end

    ; function draw_relog_group(h8)
        orca_create_checkbox(_t("Relog"), ORCA.relog, h8, function(S, S, aq) ORCA.relog = aq end)
        orca_create_checkbox(_t("AutoStart Grind"), ORCA.autogrind, h8, function(S, S, aq) ORCA.autogrind = aq end)
        orca_create_checkbox(_t("AutoStart Rotation ONLY"), ORCA.autorotation, h8,
            function(S, S, aq) ORCA.autorotation = aq end)
        orca_create_checkbox(_t("AutoStart Battleground Bot"), ORCA.autobg, h8, function(S, S, aq) ORCA.autobg = aq end)
        orca_create_checkbox(_t("Anti AFK"), ORCA.antiafk, h8, function(S, S, aq) ORCA.antiafk = aq end)
        orca_create_checkbox(_t("Port to Rez"), ORCA.portRez, h8, function(S, S, aq) ORCA.portRez = aq end)
        orca_create_slider(_t("Relog After (hours):"), ORCA.relogafter, 0, 6, 1, h8,
            function(S, S, aq) ORCA.relogafter = aq end)
        orca_create_editbox(_t("Wow Account Password"), ORCA.relog_password, h8,
            function(B, S, bF) if string.len(bF) >= 1 then
                    ORCA.relog_password = bF; setRelogPassword = nil
                else
                    B:SetText(bF)
                    ORCA.relog_password = nil; setRelogPassword = nil
                end end)
        orca_create_editbox(_t("Wow Account Email"), ORCA.relog_email, h8,
            function(B, S, bF) if string.len(bF) >= 1 then
                    ORCA.relog_email = bF; setRelogPassword = nil
                else
                    B:SetText(bF)
                    ORCA.relog_email = _t("")
                    setRelogPassword = nil
                end end)
        orca_create_editbox(_t("Wow Account Name (WoW1 or something)"), ORCA.relog_acctname, h8,
            function(B, S, bF) if string.len(bF) >= 1 then
                    ORCA.relog_acctname = bF; setRelogPassword = nil
                else
                    B:SetText(bF)
                    ORCA.relog_acctname = _t("")
                    setRelogPassword = nil
                end end)
        orca_create_editbox(_t("Realm Name"), ORCA.relog_realmname, h8,
            function(B, S, bF) if string.len(bF) >= 1 then
                    ORCA.relog_realmname = bF; setRelogPassword = nil
                else
                    B:SetText(bF)
                    ORCA.relog_realmname = _t("")
                    setRelogPassword = nil
                end end)
        orca_create_editbox(_t("Time to close (seconds)"), ORCA.closeclient, h8,
            function(B, S, bF) if string.len(bF) >= 1 then
                    ORCA.closeclient = tonumber(bF)
                    closeStart = GetTime()
                    print(_t("Client will close in ") .. bF .. _t(" seconds!"))
                else
                    B:SetText(bF)
                    ORCA.closeclient = nil
                end end)
    end
end
; local function hq(...)
    local l = LibStub(_t("AceGUI-3.0"))
    function draw_hfarm_group(h8)
        orca_create_checkbox(_t("Fly"), ORCA.fly, h8, function(S, S, aq) ORCA.fly = aq end)
        local hr = orca_create_simple_group(_t("Disable Collision"), h8)
        orca_create_checkbox(_t("Buildings"), ORCA.buildingcollision, hr, function(S, S, aq) ORCA.buildingcollision = aq end)
        orca_create_checkbox(_t("Static Objects"), ORCA.socollision, hr, function(S, S, aq) ORCA.socollision = aq end)
        orca_create_checkbox(_t("Dynamic Objects"), ORCA.docollision, hr, function(S, S, aq) ORCA.docollision = aq end)
    end

    ; function draw_pswitch_group(h8)
        h8:ReleaseChildren()
        orca_create_checkbox(_t("AutoStart Grind"), ORCA.autogrind, h8, function(S, S, aq) ORCA.autogrind = aq end)
        local hs = orca_create_simple_group(_t("#1"), h8)
        orca_create_slider(_t("Time to switch (hours)"), ORCA.switchprofilehoursone, 0, 24, 0.25, hs,
            function(S, S, aq) ORCA.switchprofilehoursone = aq end)
        orca_create_slider(_t("Level to switch"), ORCA.switchprofilelevelone, 0, 60, 1, hs,
            function(S, S, aq) ORCA.switchprofilelevelone = aq end)
        orca_create_slider(_t("Grind Distance to Switch"), ORCA.switchprofiledistone, 0, 200, 1, hs,
            function(S, S, aq) ORCA.switchprofiledistone = aq end)
        orca_create_editbox(_t("Switch to profile:"), ORCA.switchprofileone, hs,
            function(B, S, aq) if string.len(aq) >= 1 then ORCA.switchprofileone = aq else
                    B:SetText(aq)
                    ORCA.switchprofileone = nil
                end end)
        orca_create_loadprofile2(_t("Switch profile #1"), ORCA.gay, hs, function() ORCA.switchprofileone = ORCA.gay end)
        local ht = orca_create_simple_group(_t("#2"), h8)
        orca_create_slider(_t("Time to switch (hours)"), ORCA.switchprofilehourstwo, 0, 24, 0.25, ht,
            function(S, S, aq) ORCA.switchprofilehourstwo = aq end)
        orca_create_slider(_t("Level to switch"), ORCA.switchprofileleveltwo, 0, 60, 1, ht,
            function(S, S, aq) ORCA.switchprofileleveltwo = aq end)
        orca_create_slider(_t("Grind Distance to Switch"), ORCA.switchprofiledisttwo, 0, 200, 1, ht,
            function(S, S, aq) ORCA.switchprofiledisttwo = aq end)
        orca_create_editbox(_t("Switch to profile:"), ORCA.switchprofiletwo, ht,
            function(B, S, aq) if string.len(aq) >= 1 then ORCA.switchprofiletwo = aq else
                    B:SetText(aq)
                    ORCA.switchprofiletwo = nil
                end end)
        orca_create_loadprofile3(_t("Switch profile #2"), ORCA.gay, ht, function() ORCA.switchprofiletwo = ORCA.gay end)
        local hu = orca_create_simple_group(_t("#3"), h8)
        orca_create_slider(_t("Time to switch (hours)"), ORCA.switchprofilehoursthree, 0, 24, 0.25, hu,
            function(S, S, aq) ORCA.switchprofilehoursthree = aq end)
        orca_create_slider(_t("Level to switch"), ORCA.switchprofilelevelthree, 0, 60, 1, hu,
            function(S, S, aq) ORCA.switchprofilelevelthree = aq end)
        orca_create_slider(_t("Grind Distance to Switch"), ORCA.switchprofiledistthree, 0, 200, 1, hu,
            function(S, S, aq) ORCA.switchprofiledistthree = aq end)
        orca_create_editbox(_t("Switch to profile:"), ORCA.switchprofilethree, hu,
            function(B, S, aq) if string.len(aq) >= 1 then ORCA.switchprofilethree = aq else
                    B:SetText(aq)
                    ORCA.switchprofilethree = nil
                end end)
        orca_create_loadprofile4(_t("Switch profile #3"), ORCA.gay, hu, function() ORCA.switchprofilethree = ORCA.gay end)
        local hv = orca_create_simple_group(_t("#4"), h8)
        orca_create_slider(_t("Time to switch (hours)"), ORCA.switchprofilehoursfour, 0, 24, 0.25, hv,
            function(S, S, aq) ORCA.switchprofilehoursfour = aq end)
        orca_create_slider(_t("Level to switch"), ORCA.switchprofilelevelfour, 0, 60, 1, hv,
            function(S, S, aq) ORCA.switchprofilelevelfour = aq end)
        orca_create_slider(_t("Grind Distance to Switch"), ORCA.switchprofiledistfour, 0, 200, 1, hv,
            function(S, S, aq) ORCA.switchprofiledistfour = aq end)
        orca_create_editbox(_t("Switch to profile:"), ORCA.switchprofilefour, hv,
            function(B, S, aq) if string.len(aq) >= 1 then ORCA.switchprofilefour = aq else
                    B:SetText(aq)
                    ORCA.switchprofilefour = nil
                end end)
        orca_create_loadprofile5(_t("Switch profile #4"), ORCA.gay, hv, function() ORCA.switchprofilefour = ORCA.gay end)
        local hw = orca_create_simple_group(_t("#5"), h8)
        orca_create_slider(_t("Time to switch (hours)"), ORCA.switchprofilehoursfive, 0, 24, 0.25, hw,
            function(S, S, aq) ORCA.switchprofilehoursfive = aq end)
        orca_create_slider(_t("Level to switch"), ORCA.switchprofilelevelfive, 0, 60, 1, hw,
            function(S, S, aq) ORCA.switchprofilelevelfive = aq end)
        orca_create_slider(_t("Grind Distance to Switch"), ORCA.switchprofiledistfive, 0, 200, 1, hw,
            function(S, S, aq) ORCA.switchprofiledistfive = aq end)
        orca_create_editbox(_t("Switch to profile:"), ORCA.switchprofilefive, hw,
            function(B, S, aq) if string.len(aq) >= 1 then ORCA.switchprofilefive = aq else
                    B:SetText(aq)
                    ORCA.switchprofilefive = nil
                end end)
        orca_create_loadprofile6(_t("Switch profile #5"), ORCA.gay, hw, function() ORCA.switchprofilefive = ORCA.gay end)
        orca_create_simple_label(_t("------------------------------------"), h8)
    end

    ; function draw_wtool_group(h8) h8:ReleaseChildren() end

    ; function draw_afk_two_group(h8)
        h8:ReleaseChildren()
        orca_create_editbox(_t("Telegram"), _t("https://t.me/orcabotproject"), h8, function(...)
        end)
        orca_create_editbox(_t("Discord"), _t("https://discord.gg/VuUBadP"), h8, function(...)
        end)
        orca_create_editbox(_t("Website"), _t("https://forums.getgud.cc"), h8, function(...)
        end)
        orca_create_simple_label(_t("--------------"), h8)
        orca_create_simple_label(_t("SPECIAL THANKS\n"), h8)
        orca_create_simple_label(_t("Icyfresh-Faerlina (Dalton Heintz)\n"), h8)
        orca_create_simple_label(
        _t(
        "Without you I would have never had the strength to carry on doing this as long as I have. You have inspired me.\n"),
            h8)
    end

    ; function draw_info_group(h8) h8:ReleaseChildren() end

    ; function draw_lists_group(h8)
    end
end
; local function hx(...)
    local l = LibStub(_t("AceGUI-3.0"))
    function draw_class_group(h8)
        local g1 = select(2, UnitClass(_t("player")))
        if g1 == _t("WARRIOR") then draw_class_warrior(h8) elseif g1 == _t("MAGE") then draw_class_mage(h8) elseif g1 == _t("PALADIN") then
            draw_class_paladin(h8) elseif g1 == _t("ROGUE") then draw_class_rogue(h8) elseif g1 == _t("DRUID") then
            draw_class_druid(h8) elseif g1 == _t("PRIEST") then draw_class_priest(h8) elseif g1 == _t("WARLOCK") then
            draw_class_warlock(h8) elseif g1 == _t("SHAMAN") then draw_class_shaman(h8) elseif g1 == _t("HUNTER") then
            draw_class_hunter(h8) elseif g1 == _t("DEATHKNIGHT") then draw_class_deathknight(h8) end
        ; local hy = orca_create_simple_group(_t("Trinket Usage"), h8)
        orca_create_checkbox(_t("DPS Trinket (slot13)"), ORCA.dpsTrinket, hy,
            function() ORCA.dpsTrinket = not ORCA.dpsTrinket end)
        orca_create_checkbox(_t("DPS Trinket (slot14)"), ORCA.dpsTrinket2, hy,
            function() ORCA.dpsTrinket2 = not ORCA.dpsTrinket2 end)
        orca_create_slider(_t("Battlemaster (slot13)"), ORCA.battlemaster, 0, 100, 1, hy,
            function(S, S, aq) ORCA.battlemaster = aq end)
        orca_create_slider(_t("Battlemaster (slot14)"), ORCA.battlemaster2, 0, 100, 1, hy,
            function(S, S, aq) ORCA.battlemaster2 = aq end)
        local hz = orca_create_simple_group(_t("Targeting"), h8)
        orca_create_editbox(_t("Play off this Person's Target"), ORCA.targeter_saved_text, hz,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.targeter_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.targeter = h4 else
                        B:SetText(bF)
                        ORCA.targeter = nil; ORCA.targeter_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.targeter = nil; ORCA.targeter_saved_text = nil
                end end)
        orca_create_checkbox(_t("Draw Main Target"), ORCA.draw_main_target, hz,
            function() ORCA.draw_main_target = not ORCA.draw_main_target end,
            _t("This will draw a line to your main target."))
        local hA = orca_create_simple_group(_t("Helpful drawings"), h8)
        orca_create_checkbox(_t("Draw healing help line"), ORCA.heal_helper, hA,
            function() ORCA.heal_helper = not ORCA.heal_helper end,
            _t("This will draw a line to the lowest player in your roster and will change to red if you can't help."))
        orca_create_editbox(_t("Draw Player name:"), ORCA._draw_name_saved_text, hA,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA._draw_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA._draw_name = h4 else
                        B:SetText(bF)
                        ORCA._draw_name = nil; ORCA._draw_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA._draw_name = nil; ORCA._draw_name_saved_text = nil
                end end)
        orca_create_checkbox(_t("Draw help line to player"), ORCA.help_player, hA,
            function() ORCA.help_player = not ORCA.help_player end,
            _t("This will draw a line to the named player in your roster and will change to red if you can't help."))
        orca_create_checkbox(_t("Draw enemy warrior deadzone"), ORCA.draw_warrior_deadzone, hA,
            function() ORCA.draw_warrior_deadzone = not ORCA.draw_warrior_deadzone end,
            _t("This will draw a circle around enemy warriors to show when they can charge."))
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_warrior(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        prot_war_button = orca_create_button(_t("Protection"), hB,
            function()
                ORCA.war_tank = true; ORCA.tanking = true; ORCA.taunt = true; ORCA.hsthreat = true; ORCA.sunderthreat = true; ORCA.concussthreat = true; ORCA.concussBlow = 0; ORCA.blocktorev = true; ORCA.sblock = 0; ORCA.sblockhp = 0; ORCA.disarm = 0; ORCA.laststand = 40; ORCA.shieldwall = 20; ORCA.warinterrupt = true; ORCA.kickdelay = 250; ORCA.rend = false; ORCA.cleave = true; ORCA.slam = false; ORCA.bloodrage = true; ORCA.smartrage = false; ORCA.pumFlurry = false; ORCA.hamFlurry = false; ORCA.nohs = false; ORCA.noExecute = false; ORCA.noWW = false; ORCA.dontcharge = false; ORCA.hamstring = false; ORCA.hamstringFill = false; ORCA.intercept = false; ORCA.tclap = 3; ORCA.spamclap = true; ORCA.demo = 3; ORCA.sunders = 0; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.sticktarget = false; ORCA.ragedump = 50; ORCA.attemptHsCancelling = false; ORCA.hsCancel = 0.4; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.bladestorm = 0; ORCA.battlestance = false; ORCA.defensivestance = true; ORCA.berserkerstance = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        fury_war_button = orca_create_button(_t("Fury"), hB,
            function()
                ORCA.tanking = false; ORCA.war_tank = false; ORCA.taunt = false; ORCA.hsthreat = false; ORCA.sunderthreat = false; ORCA.concussthreat = false; ORCA.concussBlow = 0; ORCA.blocktorev = false; ORCA.sblock = 0; ORCA.sblockhp = 0; ORCA.disarm = 0; ORCA.laststand = 0; ORCA.shieldwall = 0; ORCA.warinterrupt = true; ORCA.kickdelay = 250; ORCA.rend = false; ORCA.cleave = true; ORCA.slam = false; ORCA.bloodrage = false; ORCA.smartrage = true; ORCA.pumFlurry = true; ORCA.hamFlurry = true; ORCA.nohs = false; ORCA.noExecute = false; ORCA.noWW = false; ORCA.dontcharge = false; ORCA.hamstring = false; ORCA.hamstringFill = false; ORCA.intercept = true; ORCA.tclap = 0; ORCA.spamclap = false; ORCA.demo = 0; ORCA.sunders = 0; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.sticktarget = false; ORCA.ragedump = 50; ORCA.attemptHsCancelling = true; ORCA.hsCancel = 0.4; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.bladestorm = 0; ORCA.battlestance = false; ORCA.defensivestance = false; ORCA.berserkerstance = true; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        arms_war_button = orca_create_button(_t("Arms"), hB,
            function()
                ORCA.bladestorm = 2; ORCA.war_tank = false; ORCA.taunt = false; ORCA.tanking = false; ORCA.hsthreat = false; ORCA.sunderthreat = false; ORCA.concussthreat = false; ORCA.concussBlow = 0; ORCA.blocktorev = false; ORCA.sblock = 0; ORCA.sblockhp = 0; ORCA.disarm = 0; ORCA.laststand = 0; ORCA.shieldwall = 0; ORCA.warinterrupt = true; ORCA.kickdelay = 250; ORCA.rend = true; ORCA.cleave = true; ORCA.slam = false; ORCA.bloodrage = false; ORCA.smartrage = true; ORCA.pumFlurry = true; ORCA.hamFlurry = true; ORCA.nohs = false; ORCA.noExecute = false; ORCA.noWW = false; ORCA.dontcharge = false; ORCA.hamstringFill = false; ORCA.intercept = true; ORCA.tclap = 0; ORCA.spamclap = false; ORCA.demo = 0; ORCA.sunders = 0; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.sticktarget = false; ORCA.ragedump = 50; ORCA.attemptHsCancelling = false; ORCA.hsCancel = 0.4; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.battlestance = true; ORCA.defensivestance = false; ORCA.berserkerstance = false; ORCA.hamstring = true; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        local hC = orca_create_simple_group(_t("Main Stance"), h8)
        orca_create_checkbox(_t("Battle Stance"), ORCA.battlestance, hC, function(S, S, aq) ORCA.battlestance = aq end)
        orca_create_checkbox(_t("Defensive Stance"), ORCA.defensivestance, hC,
            function(S, S, aq) ORCA.defensivestance = aq end)
        orca_create_checkbox(_t("Berserker Stance"), ORCA.berserkerstance, hC,
            function(S, S, aq) ORCA.berserkerstance = aq end)
        local hD = orca_create_simple_group(_t("PvP"), h8)
        orca_create_checkbox(_t("Revenge Shield"), ORCA.revengeshield, hD, function(S, S, aq) ORCA.revengeshield = aq end,
            _t("This is for revenge spec arms warriors."))
        orca_create_checkbox(_t("Overpower Spellcast"), ORCA.overpowerSpellcast, hD,
            function(S, S, aq) ORCA.overpowerSpellcast = aq end)
        orca_create_checkbox(_t("Disarm Bladestorm"), ORCA.disarmbladestorm, hD,
            function(S, S, aq) ORCA.disarmbladestorm = aq end)
        orca_create_checkbox(_t("Disarm Melee Cds"), ORCA.disarm_cds, hD, function(S, S, aq) ORCA.disarm_cds = aq end)
        orca_create_checkbox(_t("Charge Interrupt"), ORCA.chargeinterrupt, hD,
            function(S, S, aq) ORCA.chargeinterrupt = aq end)
        local hE = orca_create_simple_group(_t("Tanking"), h8)
        orca_create_checkbox(_t("Auto target for threat"), ORCA.war_tank, hE, function(S, S, aq) ORCA.war_tank = aq end)
        orca_create_checkbox(_t("Tanking"), ORCA.tanking, hE, function(S, S, aq) ORCA.tanking = aq end,
            _t("Enable this when you are tanking for correct targeting and stances."))
        local hF = orca_create_simple_group(_t("Shield Abilities"), h8)
        orca_create_checkbox(_t("Auto Spell Reflect"), ORCA.spellreflect, hF, function(S, S, aq) ORCA.spellreflect = aq end)
        orca_create_slider(_t("Shield Wall @"), ORCA.shieldwall, 0, 100, 1, hF, function(S, S, aq) ORCA.shieldwall = aq end)
        orca_create_slider(_t("Shield block this many"), ORCA.sblock, 0, 8, 1, hF, function(S, S, aq) ORCA.sblock = aq end,
            _t("When this many enemies or more are blockable bot will use shield block"))
        orca_create_slider(_t("Shield block @ my hp"), ORCA.sblockhp, 0, 100, 1, hF, function(S, S, aq) ORCA.sblockhp =
            aq end, _t("When your hp is below this % bot will use shield block"))
        local hG = orca_create_simple_group(_t("Arms Abilities"), h8)
        orca_create_checkbox(_t("Spread Rend"), ORCA.rend, hG, function(S, S, aq) ORCA.rend = aq end)
        orca_create_checkbox(_t("Disable Heroic Strike"), ORCA.nohs, hG, function(S, S, aq) ORCA.nohs = aq end)
        orca_create_checkbox(_t("Disable Auto Charge"), ORCA.dontcharge, hG, function(S, S, aq) ORCA.dontcharge = aq end)
        orca_create_checkbox(_t("Hamstring"), ORCA.hamstring, hG, function(S, S, aq) ORCA.hamstring = aq end)
        orca_create_checkbox(_t("Hamstring Fill"), ORCA.hamstringFill, hG, function(S, S, aq) ORCA.hamstringFill = aq end)
        orca_create_slider(_t("Bladestorm X Units"), ORCA.bladestorm, 0, 4, 1, hG, function(S, S, aq) ORCA.bladestorm =
            aq end)
        orca_create_slider(_t("Thunderclap X Units"), ORCA.tclap, 0, 10, 1, hG, function(S, S, aq) ORCA.tclap = aq end)
        orca_create_checkbox(_t("Spam Thunderclap"), ORCA.spamclap, hG, function(S, S, aq) ORCA.spamclap = aq end)
        orca_create_slider(_t("Retaliation on HP"), ORCA.retaliation, 0, 100, 1, hG,
            function(S, S, aq) ORCA.retaliation = aq end)
        orca_create_slider(_t("Retaliation on #enemies"), ORCA.retaliationenemies, 0, 10, 1, hG,
            function(S, S, aq) ORCA.retaliationenemies = aq end)
        local hH = orca_create_simple_group(_t("Prot Abilities"), h8)
        orca_create_checkbox(_t("Bloodrage on cd"), ORCA.bloodrage, hH, function(S, S, aq) ORCA.bloodrage = aq end)
        orca_create_checkbox(_t("Smart Bloodrage"), ORCA.smartrage, hH, function(S, S, aq) ORCA.smartrage = aq end)
        orca_create_slider(_t("Demo X Units"), ORCA.demo, 0, 10, 1, hH, function(S, S, aq) ORCA.demo = aq end)
        orca_create_slider(_t("Sunder stacks"), ORCA.sunders, 0, 5, 1, hH, function(S, S, aq) ORCA.sunders = aq end)
        orca_create_checkbox(_t("Auto Taunt"), ORCA.taunt, hH, function(S, S, aq) ORCA.taunt = aq end)
        orca_create_checkbox(_t("HS gain back threat"), ORCA.hsthreat, hH, function(S, S, aq) ORCA.hsthreat = aq end,
            _t("This makes the bot fill with heroic strike when it loses threat"))
        orca_create_checkbox(_t("Sunder gain back threat"), ORCA.sunderthreat, hH,
            function(S, S, aq) ORCA.sunderthreat = aq end, _t("This makes the bot fill with sunder when it loses threat"))
        orca_create_checkbox(_t("Concussive gain back threat"), ORCA.concussthreat, hH,
            function(S, S, aq) ORCA.concussthreat = aq end)
        orca_create_slider(_t("Concussive Blow @ Enemy %"), ORCA.concussBlow, 0, 100, 1, hH,
            function(S, S, aq) ORCA.concussBlow = aq end)
        orca_create_checkbox(_t("Shield block to get revenge"), ORCA.blocktorev, hH,
            function(S, S, aq) ORCA.blocktorev = aq end)
        orca_create_slider(_t("Disarm when friendly below %"), ORCA.disarm, 0, 100, 1, hH,
            function(S, S, aq) ORCA.disarm = aq end)
        orca_create_slider(_t("Last Stand @"), ORCA.laststand, 0, 100, 1, hH, function(S, S, aq) ORCA.laststand = aq end)
        orca_create_slider(_t("Shockwave #enemies"), ORCA.shockwave, 0, 10, 1, hH, function(S, S, aq) ORCA.shockwave = aq end)
        local hI = orca_create_simple_group(_t("Fury Abiltiies"), h8)
        orca_create_checkbox(_t("Pummel for interrupt"), ORCA.warinterrupt, hI, function(S, S, aq) ORCA.warinterrupt = aq end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, hI, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_checkbox(_t("Cleave"), ORCA.cleave, hI, function(S, S, aq) ORCA.cleave = aq end)
        orca_create_checkbox(_t("Slam"), ORCA.slam, hI, function(S, S, aq) ORCA.slam = aq end)
        orca_create_checkbox(_t("Pummel for Flurry"), ORCA.pumFlurry, hI, function(S, S, aq) ORCA.pumFlurry = aq end)
        orca_create_checkbox(_t("Hamstring for Flurry"), ORCA.hamFlurry, hI, function(S, S, aq) ORCA.hamFlurry = aq end)
        orca_create_checkbox(_t("Disable Execute"), ORCA.noExecute, hI, function(S, S, aq) ORCA.noExecute = aq end)
        orca_create_checkbox(_t("Disable Whirlwind"), ORCA.noWW, hI, function(S, S, aq) ORCA.noWW = aq end)
        orca_create_checkbox(_t("Intercept/Juggernaut"), ORCA.intercept, hI, function(S, S, aq) ORCA.intercept = aq end)
        orca_create_checkbox(_t("Commanding Shout"), ORCA.commanding, hI, function(S, S, aq) ORCA.commanding = aq end,
            _t("This makes the bot use commanding shout instead of battle shout."))
        orca_create_checkbox(_t("Melee random Strafe"), ORCA.juggle, h8, function() ORCA.juggle = not ORCA.juggle end,
            _t("The bot will randomly strafe if it is in melee range of the enemy."))
        orca_create_checkbox(_t("Melee stand behind"), ORCA.standbehind, h8,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("The bot will attempt to stand behind the target."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_checkbox(_t("Move to target"), ORCA.sticktarget, h8, function(S, S, aq) ORCA.sticktarget = aq end)
        orca_create_slider(_t("Dump Rage @"), ORCA.ragedump, 0, 100, 1, h8, function(S, S, aq) ORCA.ragedump = aq end)
        orca_create_checkbox(_t("Attempt HS Cancelling"), ORCA.attemptHsCancelling, h8,
            function(S, S, aq) ORCA.attemptHsCancelling = aq end)
        orca_create_slider(_t("no HS cancelling @"), ORCA.hsCancel, 0, 1, .1, h8, function(S, S, aq) ORCA.hsCancel = aq end)
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, h8,
            function(S, S, aq) ORCA.giftpercent = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hJ = orca_create_simple_group(_t("Weapon Swap"), h8)
        orca_create_editbox(_t("2hand weapon name:"), ORCA._2h_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA._2h_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA._2h_name = h4 else
                        B:SetText(bF)
                        ORCA._2h_name = nil; ORCA._2h_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA._2h_name = nil; ORCA._2h_name_saved_text = nil
                end end)
        orca_create_editbox(_t("Mainhand weapon name:"), ORCA.mh_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_name = h4 else
                        B:SetText(bF)
                        ORCA.mh_name = nil; ORCA.mh_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_name = nil; ORCA.mh_name_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand weapon name:"), ORCA.oh_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.oh_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.oh_name = h4 else
                        B:SetText(bF)
                        ORCA.oh_name = nil; ORCA.oh_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.oh_name = nil; ORCA.oh_name_saved_text = nil
                end end)
        orca_create_editbox(_t("Shield name:"), ORCA.shield_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.shield_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.shield_name = h4 else
                        B:SetText(bF)
                        ORCA.shield_name = nil; ORCA.shield_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.shield_name = nil; ORCA.shield_name_saved_text = nil
                end end)
        orca_create_slider(_t("Shield @ HP"), ORCA.shieldpercent, 0, 100, 1, hJ,
            function(S, S, aq) ORCA.shieldpercent = aq end)
        orca_create_checkbox(_t("Switch back to 2h"), ORCA.switchback2h, hJ,
            function() ORCA.switchback2h = not ORCA.switchback2h end)
        orca_create_checkbox(_t("Switch back to dual wield"), ORCA.switchbackdual, hJ,
            function() ORCA.switchbackdual = not ORCA.switchbackdual end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand"), ORCA.oh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.oh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.oh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_paladin(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        prot_paladin_button = orca_create_button(_t("Protection"), hB,
            function()
                if GetNumExpansions() >= 2 then ORCA.autoBlessings = true end
                ; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.fastheal = false; ORCA.fastheal_percent = 0; ORCA.autoheal_percent = 65; ORCA.hshock = 0; ORCA.shockenemy = false; ORCA.overheal_percent = 30; ORCA.loh = 15; ORCA.bubble = 10; ORCA.bop = 10; ORCA.sackplayerhp = 0; ORCA.sack = 0; ORCA.devotion = true; ORCA.retribution = false; ORCA.concentration = false; ORCA.shadowresist = false; ORCA.frostresist = false; ORCA.fireresist = false; ORCA.sancaura = false; ORCA.twistrighteous = false; ORCA.twistblood = false; ORCA.judge = true; ORCA.sotr = true; ORCA.soc = false; ORCA.socr1 = false; ORCA.crusaderb = false; ORCA.crusader = false; ORCA.sol = false; ORCA.sold = false; ORCA.sow = false; ORCA.sowd = false; ORCA.pal_tank = true; ORCA.judgethreat = false; ORCA.exorcismthreat = false; ORCA.hojthreat = true; ORCA.rf = true; ORCA.rdefense = true; ORCA.avengeShield = 3; ORCA.hsh = 3; ORCA.hshp = 0; ORCA.exorcism = false; ORCA.how = true; ORCA.holywrath = 0; ORCA.dispel = true; ORCA.hojint = true; ORCA.consecration = 3; ORCA.hoj = 0; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.divinesackplayerhp = 90; ORCA.divinesack = 35; ORCA.judgeDebuff = false; ORCA.judgeLight = true; ORCA.judgeWisdom = false; ORCA.judgeJustice = false; ORCA.handreck = true; ORCA.hor = 3; ORCA.dp = 35; ORCA.divineStorm = 0; ORCA.autobeacon = false; ORCA.aow_flashheal = false; ORCA.aow_exorcism = false; ORCA.divineplea = 65; ORCA.sacredshield = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        holy_paladin_button = orca_create_button(_t("Holy"), hB,
            function()
                if GetNumExpansions() >= 2 then ORCA.autoBlessings = true end
                ; ORCA.autobeacon = true; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.castheal = true; ORCA.oocHeal = false; ORCA.fastheal = false; ORCA.fastheal_percent = 30; ORCA.autoheal_percent = 65; ORCA.hshock = 75; ORCA.shockenemy = false; ORCA.overheal_percent = 30; ORCA.loh = 15; ORCA.bubble = 10; ORCA.bop = 10; ORCA.sackplayerhp = 95; ORCA.sack = 45; ORCA.devotion = false; ORCA.retribution = false; ORCA.concentration = true; ORCA.shadowresist = false; ORCA.frostresist = false; ORCA.fireresist = false; ORCA.sancaura = false; ORCA.twistrighteous = false; ORCA.twistblood = false; ORCA.judge = true; ORCA.sotr = false; ORCA.soc = false; ORCA.socr1 = false; ORCA.crusaderb = false; ORCA.crusader = false; ORCA.sol = false; ORCA.sold = false; ORCA.sow = true; ORCA.sowd = false; ORCA.pal_tank = false; ORCA.judgethreat = false; ORCA.exorcismthreat = false; ORCA.hojthreat = false; ORCA.rf = false; ORCA.rdefense = false; ORCA.avengeShield = 0; ORCA.hsh = 0; ORCA.hshp = 0; ORCA.exorcism = false; ORCA.how = false; ORCA.holywrath = 0; ORCA.dispel = true; ORCA.hojint = true; ORCA.consecration = 0; ORCA.hoj = 0; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.divinesackplayerhp = 90; ORCA.divinesack = 35; ORCA.judgeDebuff = false; ORCA.judgeLight = true; ORCA.judgeWisdom = false; ORCA.judgeJustice = false; ORCA.handreck = false; ORCA.hor = 0; ORCA.dp = 35; ORCA.divineStorm = 0; ORCA.aow_flashheal = false; ORCA.aow_exorcism = false; ORCA.divineplea = 65; ORCA.sacredshield = 95; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        ret_paladin_button = orca_create_button(_t("Retribution"), hB,
            function()
                if GetNumExpansions() >= 2 then ORCA.autoBlessings = true end
                ; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.fastheal = false; ORCA.fastheal_percent = 0; ORCA.autoheal_percent = 65; ORCA.hshock = 0; ORCA.shockenemy = false; ORCA.overheal_percent = 30; ORCA.loh = 15; ORCA.bubble = 10; ORCA.bop = 10; ORCA.sackplayerhp = 0; ORCA.sack = 0; ORCA.devotion = false; ORCA.retribution = true; ORCA.concentration = false; ORCA.shadowresist = false; ORCA.frostresist = false; ORCA.fireresist = false; ORCA.twistrighteous = false; ORCA.twistblood = false; ORCA.judge = false; if socID and socID == 0 then ORCA.sotr = true else ORCA.sotr = false end
                ; if socID and socID > 0 and sobID == 0 then ORCA.soc = false end
                ; if socID and socID > 0 and sobID > 0 then ORCA.socr1 = true else ORCA.socr1 = false end
                ; ORCA.crusaderb = false; ORCA.crusader = false; ORCA.sol = false; ORCA.sold = false; ORCA.sow = false; ORCA.sowd = false; ORCA.pal_tank = false; ORCA.judgethreat = false; ORCA.exorcismthreat = false; ORCA.hojthreat = false; ORCA.rf = false; ORCA.rdefense = false; ORCA.avengeShield = 0; ORCA.hsh = 0; ORCA.hshp = 0; ORCA.exorcism = false; ORCA.how = true; ORCA.holywrath = 0; ORCA.dispel = true; ORCA.hojint = true; ORCA.consecration = 3; ORCA.hoj = 0; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.divinesackplayerhp = 90; ORCA.divinesack = 35; ORCA.judge = true; ORCA.judgeDebuff = false; ORCA.judgeLight = true; ORCA.judgeWisdom = false; ORCA.judgeJustice = false; ORCA.handreck = false; ORCA.hor = 0; ORCA.dp = 35; ORCA.divineStorm = 3; ORCA.autobeacon = false; ORCA.aow_flashheal = true; ORCA.aow_exorcism = true; ORCA.divineplea = 65; ORCA.sacredshield = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_checkbox(_t("Auto Buff"), ORCA.autobuff, h8, function() ORCA.autobuff = not ORCA.autobuff end,
            _t("This will make the bot buff everyone in the group with the appropriate buffs based on class."))
        orca_create_checkbox(_t("Only Buff Self"), ORCA.selfbuff, h8, function() ORCA.selfbuff = not ORCA.selfbuff end,
            _t(
            "This will make the bot only buff itself, not others in the group. Do not use AutoBuff if using this option."))
        orca_create_checkbox(_t("Melee random Strafe"), ORCA.juggle, h8, function() ORCA.juggle = not ORCA.juggle end,
            _t("The bot will randomly strafe if it is in melee range of the enemy."))
        orca_create_checkbox(_t("Melee stand behind"), ORCA.standbehind, h8,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("The bot will attempt to stand behind the target."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        local hL = orca_create_simple_group(_t("Blessings (names separated by comma)"), h8)
        orca_create_checkbox(_t("Auto Blessings (WoLK only)"), ORCA.autoBlessings, hL,
            function() ORCA.autoBlessings = not ORCA.autoBlessings end,
            _t("This will make the bot automatically bless the appropriate people in the group based on class."))
        orca_create_editbox(_t("Use Wisdom on:"), ORCA.wisdom_box_saved_text, hL,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.wisdom_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_wisdom = h4 else
                        B:SetText(bF)
                        ORCA.who_to_wisdom = nil; ORCA.wisdom_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_wisdom = nil; ORCA.wisdom_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Use Might on:"), ORCA.might_box_saved_text, hL,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.might_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_might = h4 else
                        B:SetText(bF)
                        ORCA.who_to_might = nil; ORCA.might_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_might = nil; ORCA.might_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Use Salvation on:"), ORCA.salv_box_saved_text, hL,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.salv_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_salv = h4 else
                        B:SetText(bF)
                        ORCA.who_to_salv = nil; ORCA.salv_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_salv = nil; ORCA.salv_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Use Kings on:"), ORCA.king_box_saved_text, hL,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.king_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_king = h4 else
                        B:SetText(bF)
                        ORCA.who_to_king = nil; ORCA.king_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_king = nil; ORCA.king_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Use Sanctuary on:"), ORCA.sanc_box_saved_text, hL,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.sanc_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_sanc = h4 else
                        B:SetText(bF)
                        ORCA.who_to_sanc = nil; ORCA.sanc_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_sanc = nil; ORCA.sanc_box_saved_text = nil
                end end)
        local hM = orca_create_simple_group(_t("Healing"), h8)
        orca_create_checkbox(_t("Auto Heal"), ORCA.castheal, hM, function(S, S, aq) ORCA.castheal = aq end)
        orca_create_checkbox(_t("Heal out of combat only"), ORCA.oocHeal, hM, function(S, S, aq) ORCA.oocHeal = aq end)
        orca_create_checkbox(_t("Only Fast Heals"), ORCA.fastheal, hM, function(S, S, aq) ORCA.fastheal = aq end)
        orca_create_slider(_t("When to use Fast Heal (%)"), ORCA.fastheal_percent, 0, 100, 1, hM,
            function(S, S, aq) ORCA.fastheal_percent = aq end)
        orca_create_slider(_t("AutoHeal %"), ORCA.autoheal_percent, 0, 100, 1, hM,
            function(S, S, aq) ORCA.autoheal_percent = aq end)
        orca_create_checkbox(_t("Auto Beacon"), ORCA.autobeacon, hM, function(S, S, aq) ORCA.autobeacon = aq end)
        orca_create_checkbox(_t("Holy Shock Enemies"), ORCA.shockenemy, hM, function(S, S, aq) ORCA.shockenemy = aq end)
        orca_create_slider(_t("Max Overheal %"), ORCA.overheal_percent, 0, 100, 1, hM,
            function(S, S, aq) ORCA.overheal_percent = aq end)
        orca_create_slider(_t("Lay on Hands %"), ORCA.loh, 0, 100, 1, hM, function(S, S, aq) ORCA.loh = aq end)
        orca_create_slider(_t("Divine Shield %"), ORCA.bubble, 0, 100, 1, hM, function(S, S, aq) ORCA.bubble = aq end)
        orca_create_slider(_t("BoP friendly @ hp"), ORCA.bop, 0, 100, 1, hM, function(S, S, aq) ORCA.bop = aq end)
        orca_create_slider(_t("Avenging Wrath friendly hp"), ORCA.avengingwrath_hp, 0, 100, 1, hM,
            function(S, S, aq) ORCA.avengingwrath_hp = aq end)
        orca_create_slider(_t("Hand of Freedom hp"), ORCA.hof_hp, 0, 100, 1, hM, function(S, S, aq) ORCA.hof_hp = aq end)
        orca_create_slider(_t("Hand of Freedom enemy hp"), ORCA.hof_enemy_hp, 0, 100, 1, hM,
            function(S, S, aq) ORCA.hof_enemy_hp = aq end)
        orca_create_slider(_t("Divine Illumination"), ORCA.di, 0, 100, 1, hM, function(S, S, aq) ORCA.di = aq end)
        orca_create_slider(_t("Divine Plea"), ORCA.divineplea, 0, 100, 1, hM, function(S, S, aq) ORCA.divineplea = aq end)
        orca_create_slider(_t("Cancel Divine Plea"), ORCA.divineplea_cancel, 0, 100, 1, hM,
            function(S, S, aq) ORCA.divineplea_cancel = aq end)
        orca_create_slider(_t("Sacred Shield"), ORCA.sacredshield, 0, 100, 1, hM,
            function(S, S, aq) ORCA.sacredshield = aq end)
        orca_create_slider(_t("Spam dispel @ hp"), ORCA.spamdispel, 0, 100, 1, hM, function(S, S, aq) ORCA.spamdispel =
            aq end)
        orca_create_checkbox(_t("Dispel for Sacred Cleansing"), ORCA.dispelsacred, hM,
            function(S, S, aq) ORCA.dispelsacred = aq end)
        local hN = orca_create_simple_group(_t("Blessing of Sacrifice"), hM)
        orca_create_slider(_t("Sac @ self hp above"), ORCA.sackplayerhp, 0, 100, 1, hN,
            function(S, S, aq) ORCA.sackplayerhp = aq end)
        orca_create_slider(_t("Sac @ friendly hp below"), ORCA.sack, 0, 100, 1, hN, function(S, S, aq) ORCA.sack = aq end)
        local hO = orca_create_simple_group(_t("Divine Sacrifice"), hM)
        orca_create_slider(_t("Divine Sacrifice @ self hp above"), ORCA.divinesackplayerhp, 0, 100, 1, hO,
            function(S, S, aq) ORCA.divinesackplayerhp = aq end)
        orca_create_slider(_t("Divine Sacrifice @ friendly hp below"), ORCA.divinesack, 0, 100, 1, hO,
            function(S, S, aq) ORCA.divinesack = aq end)
        local hP = orca_create_simple_group(_t("Auras"), h8)
        orca_create_checkbox(_t("Devotion Aura"), ORCA.devotion, hP, function(S, S, aq) ORCA.devotion = aq end)
        orca_create_checkbox(_t("Retribution Aura"), ORCA.retribution, hP, function(S, S, aq) ORCA.retribution = aq end)
        orca_create_checkbox(_t("Concentration Aura"), ORCA.concentration, hP, function(S, S, aq) ORCA.concentration = aq end)
        orca_create_checkbox(_t("Shadow Resist Aura"), ORCA.shadowresist, hP, function(S, S, aq) ORCA.shadowresist = aq end)
        orca_create_checkbox(_t("Frost Resist Aura"), ORCA.frostresist, hP, function(S, S, aq) ORCA.frostresist = aq end)
        orca_create_checkbox(_t("Fire Resist Aura"), ORCA.fireresist, hP, function(S, S, aq) ORCA.fireresist = aq end)
        orca_create_checkbox(_t("Sanctity Aura"), ORCA.sancaura, hP, function(S, S, aq) ORCA.sancaura = aq end)
        local hQ = orca_create_simple_group(_t("Seal Twisting"), h8)
        orca_create_checkbox(_t("Twist to Righteous"), ORCA.twistrighteous, hQ,
            function(S, S, aq) ORCA.twistrighteous = aq end)
        orca_create_checkbox(_t("Twist to Blood"), ORCA.twistblood, hQ, function(S, S, aq) ORCA.twistblood = aq end)
        local hR = orca_create_simple_group(_t("Judgement"), h8)
        orca_create_checkbox(_t("Judge on Cooldown"), ORCA.judge, hR, function(S, S, aq) ORCA.judge = aq end)
        orca_create_checkbox(_t("Judge for Debuff only"), ORCA.judgeDebuff, hR, function(S, S, aq) ORCA.judgeDebuff = aq end)
        orca_create_checkbox(_t("Judgement of Light"), ORCA.judgeLight, hR, function(S, S, aq) ORCA.judgeLight = aq end)
        orca_create_checkbox(_t("Judgement of Wisdom"), ORCA.judgeWisdom, hR, function(S, S, aq) ORCA.judgeWisdom = aq end)
        orca_create_checkbox(_t("Judgement of Justice"), ORCA.judgeJustice, hR, function(S, S, aq) ORCA.judgeJustice = aq end)
        local hS = orca_create_simple_group(_t("Seal"), h8)
        orca_create_slider(_t("Veng/Corr <= "), ORCA.vengeance, 0, 15, 1, hS, function(S, S, aq) ORCA.vengeance = aq end)
        orca_create_checkbox(_t("Righteous"), ORCA.sotr, hS, function(S, S, aq) ORCA.sotr = aq end)
        orca_create_checkbox(_t("Command"), ORCA.soc, hS, function(S, S, aq) ORCA.soc = aq end)
        orca_create_checkbox(_t("Command R1"), ORCA.socr1, hS, function(S, S, aq) ORCA.socr1 = aq end)
        orca_create_checkbox(_t("Crusader always"), ORCA.crusaderb, hS, function(S, S, aq) ORCA.crusaderb = aq end)
        orca_create_checkbox(_t("Crusader for debuff only"), ORCA.crusader, hS, function(S, S, aq) ORCA.crusader = aq end)
        orca_create_checkbox(_t("Light Always"), ORCA.sol, hS, function(S, S, aq) ORCA.sol = aq end)
        orca_create_checkbox(_t("Light Debuff"), ORCA.sold, hS, function(S, S, aq) ORCA.sold = aq end)
        orca_create_checkbox(_t("Wisdom Always"), ORCA.sow, hS, function(S, S, aq) ORCA.sow = aq end)
        orca_create_checkbox(_t("Wisdom Debuff"), ORCA.sowd, hS, function(S, S, aq) ORCA.sowd = aq end)
        local hT = orca_create_simple_group(_t("Tanking"), h8)
        orca_create_checkbox(_t("Auto target for threat"), ORCA.pal_tank, hT, function(S, S, aq) ORCA.pal_tank = aq end)
        orca_create_checkbox(_t("Judge for threat"), ORCA.judgethreat, hT, function(S, S, aq) ORCA.judgethreat = aq end)
        orca_create_checkbox(_t("Exorcism for threat"), ORCA.exorcismthreat, hT,
            function(S, S, aq) ORCA.exorcismthreat = aq end)
        orca_create_checkbox(_t("HoJ for threat"), ORCA.hojthreat, hT, function(S, S, aq) ORCA.hojthreat = aq end)
        orca_create_checkbox(_t("Righteous Fury"), ORCA.rf, hT, function(S, S, aq) ORCA.rf = aq end)
        orca_create_checkbox(_t("Hand of Reckoning"), ORCA.handreck, hT, function(S, S, aq) ORCA.handreck = aq end)
        orca_create_checkbox(_t("Rightous Defender"), ORCA.rdefense, hT, function(S, S, aq) ORCA.rdefense = aq end)
        orca_create_slider(_t("Ham Righteous this many"), ORCA.hor, 0, 3, 1, hT, function(S, S, aq) ORCA.hor = aq end)
        orca_create_slider(_t("Avenger's Shield this many"), ORCA.avengeShield, 0, 3, 1, hT,
            function(S, S, aq) ORCA.avengeShield = aq end)
        orca_create_slider(_t("Holy Shield this many"), ORCA.hsh, 0, 8, 1, hT, function(S, S, aq) ORCA.hsh = aq end,
            _t("When this many enemies or more are blockable bot will use holy shield"))
        orca_create_slider(_t("Holy Shield @ my hp"), ORCA.hshp, 0, 100, 1, hT, function(S, S, aq) ORCA.hshp = aq end,
            _t("When your hp is below this % bot will use holy shield"))
        orca_create_checkbox(_t("Shield of the Righteous"), ORCA.sh_otr, hT, function(S, S, aq) ORCA.sh_otr = aq end)
        local hU = orca_create_simple_group(_t("Art of War"), h8)
        orca_create_checkbox(_t("Flash heal for AoW"), ORCA.aow_flashheal, hU, function(S, S, aq) ORCA.aow_flashheal = aq end)
        orca_create_checkbox(_t("Exorcism for AoW"), ORCA.aow_exorcism, hU, function(S, S, aq) ORCA.aow_exorcism = aq end)
        orca_create_slider(_t("Avenging Wrath #enemies"), ORCA.avengingWrath, 0, 8, 1, h8,
            function(S, S, aq) ORCA.avengingWrath = aq end,
            _t("When this many enemies or more are in range bot will use avenging wrath"))
        orca_create_slider(_t("Divine Protection"), ORCA.dp, 0, 100, 1, h8, function(S, S, aq) ORCA.dp = aq end,
            _t("When your hp is below this % bot will use divine protection"))
        orca_create_checkbox(_t("Exorcism"), ORCA.exorcism, h8, function(S, S, aq) ORCA.exorcism = aq end)
        orca_create_checkbox(_t("Hammer of Wrath"), ORCA.how, h8, function(S, S, aq) ORCA.how = aq end)
        orca_create_slider(_t("Divine Storm this many"), ORCA.divineStorm, 0, 4, 1, h8,
            function(S, S, aq) ORCA.divineStorm = aq end)
        orca_create_slider(_t("Holy Wrath this many"), ORCA.holywrath, 0, 8, 1, h8, function(S, S, aq) ORCA.holywrath =
            aq end)
        orca_create_checkbox(_t("Auto Dispel"), ORCA.dispel, h8, function(S, S, aq) ORCA.dispel = aq end)
        orca_create_checkbox(_t("HoJ Interrupt"), ORCA.hojint, h8, function(S, S, aq) ORCA.hojint = aq end)
        orca_create_slider(_t("Min Enemys to Consecrate"), ORCA.consecration, 0, 4, 1, h8,
            function(S, S, aq) ORCA.consecration = aq end)
        orca_create_slider(_t("HoJ @ Enemy hp %"), ORCA.hoj, 0, 100, 1, h8, function(S, S, aq) ORCA.hoj = aq end)
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, h8,
            function(S, S, aq) ORCA.giftpercent = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_mage(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        frost_mage_button = orca_create_button(_t("Frost"), hB,
            function()
                ORCA.wand = true; ORCA.wandfinish = 0; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.fbolt = true; ORCA.fnova = true; ORCA.runBackwardsAfterNova = 0; ORCA.coc = 2; ORCA.waterele = true; ORCA.lance = true; ORCA.icebarrier = true; ORCA.iceblock = 15; ORCA.blizzenemies = 3; ORCA.freezeEnemies = 1; ORCA.scorch = false; ORCA.combust = false; ORCA.fblast = false; ORCA.fstrikeenemies = 0; ORCA.bwave = 0; ORCA.pyroblast = false; ORCA.pompyro = false; ORCA.poly = false; if marmorID and marmorID > 0 then ORCA.marmor = true else ORCA.marmor = false end
                ; ORCA.mshield = false; ORCA.blink = false; ORCA.dampen = false; ORCA.counterspell = true; ORCA.kickdelay = 250; ORCA.evocate = 10; ORCA.decurse = true; ORCA.arcanex = 0; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.automagecd = false; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.moltarmor = false; ORCA.arcanemissiles = false; ORCA.arcaneblast = false; ORCA.slow = false; ORCA.arcanebarrage = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        fire_mage_button = orca_create_button(_t("Fire"), hB,
            function()
                ORCA.wand = true; ORCA.wandfinish = 0; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.fbolt = false; ORCA.fnova = false; ORCA.runBackwardsAfterNova = 0; ORCA.coc = 0; ORCA.waterele = false; ORCA.lance = false; ORCA.icebarrier = false; ORCA.iceblock = 15; ORCA.blizzenemies = 0; ORCA.freezeEnemies = 0; ORCA.scorch = true; ORCA.combust = true; ORCA.fblast = true; ORCA.fstrikeenemies = 3; ORCA.bwave = 3; ORCA.pyroblast = false; ORCA.pompyro = false; ORCA.poly = false; if marmorID and marmorID > 0 then ORCA.marmor = true else ORCA.marmor = false end
                ; ORCA.mshield = false; ORCA.blink = false; ORCA.dampen = false; ORCA.counterspell = true; ORCA.kickdelay = 250; ORCA.evocate = 10; ORCA.decurse = true; ORCA.arcanex = 0; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.automagecd = false; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.arcanemissiles = false; ORCA.arcaneblast = false; ORCA.slow = false; ORCA.arcanebarrage = false; if moltarmorID and moltarmorID > 0 then
                    ORCA.moltarmor = true; ORCA.marmor = false
                end
                ; OrcaUITabGroup:SelectTab(ORCA.lastFrame)
            end)
        arcane_mage_button = orca_create_button(_t("Arcane"), hB,
            function()
                ORCA.wand = true; ORCA.wandfinish = 0; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.fbolt = false; ORCA.fnova = false; ORCA.runBackwardsAfterNova = 0; ORCA.coc = 0; ORCA.waterele = false; ORCA.lance = false; ORCA.icebarrier = true; ORCA.iceblock = 15; ORCA.blizzenemies = 0; ORCA.freezeEnemies = 0; ORCA.scorch = false; ORCA.combust = false; ORCA.fblast = false; ORCA.fstrikeenemies = 0; ORCA.bwave = 0; ORCA.pyroblast = false; ORCA.pompyro = false; ORCA.poly = false; if marmorID and marmorID > 0 then ORCA.marmor = true else ORCA.marmor = false end
                ; ORCA.mshield = false; ORCA.blink = false; ORCA.dampen = false; ORCA.counterspell = true; ORCA.kickdelay = 250; ORCA.evocate = 10; ORCA.decurse = true; ORCA.arcanex = 3; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.automagecd = false; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.moltarmor = false; ORCA.arcanemissiles = true; ORCA.arcaneblast = true; ORCA.slow = true; ORCA.arcanebarrage = true; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_checkbox(_t("Wanding"), ORCA.wand, h8, function() ORCA.wand = not ORCA.wand end,
            _t("This will make you use wand if equipped."))
        orca_create_slider(_t("Finish With Wand %"), ORCA.wandfinish, 0, 100, 1, h8, function(S, S, M) ORCA.wandfinish =
            M end, _t("This will only do wanding and no other spells or abilitys when the enemy is below this % HP."))
        orca_create_checkbox(_t("Auto Buff"), ORCA.autobuff, h8, function() ORCA.autobuff = not ORCA.autobuff end,
            _t("This will make the bot buff everyone in the group with the appropriate buffs based on class."))
        orca_create_checkbox(_t("Only Buff Self"), ORCA.selfbuff, h8, function() ORCA.selfbuff = not ORCA.selfbuff end,
            _t(
            "This will make the bot only buff itself, not others in the group. Do not use AutoBuff if using this option."))
        local hV = orca_create_simple_group(_t("Frost Spells"), h8)
        orca_create_checkbox(_t("Frost Bolt"), ORCA.fbolt, hV, function(S, S, aq) ORCA.fbolt = aq end)
        orca_create_checkbox(_t("Frost Nova"), ORCA.fnova, hV, function(S, S, aq) ORCA.fnova = aq end)
        orca_create_slider(_t("Run Backwards after nova for"), ORCA.runBackwardsAfterNova, 0, 5, 0.5, hV,
            function(S, S, aq) ORCA.runBackwardsAfterNova = aq end)
        orca_create_slider(_t("Cone of Cold"), ORCA.coc, 0, 3, 1, hV, function(S, S, aq) ORCA.coc = aq end)
        orca_create_checkbox(_t("Summon Water Elemental"), ORCA.waterele, hV, function(S, S, aq) ORCA.waterele = aq end)
        orca_create_checkbox(_t("Ice Lance Frozen Targets"), ORCA.lance, hV, function(S, S, aq) ORCA.lance = aq end)
        orca_create_checkbox(_t("Ice Barrier"), ORCA.icebarrier, hV, function(S, S, aq) ORCA.icebarrier = aq end)
        orca_create_slider(_t("Ice Block @ HP%"), ORCA.iceblock, 0, 100, 1, hV, function(S, S, aq) ORCA.iceblock = aq end)
        orca_create_slider(_t(">=# to Blizzard"), ORCA.blizzenemies, 0, 8, 1, hV,
            function(S, S, aq) ORCA.blizzenemies = aq end)
        orca_create_slider(_t(">=# to Pet Freeze"), ORCA.freezeEnemies, 0, 8, 1, hV,
            function(S, S, aq) ORCA.freezeEnemies = aq end)
        local hW = orca_create_simple_group(_t("Fire Spells"), h8)
        orca_create_checkbox(_t("Scorch"), ORCA.scorch, hW, function(S, S, aq) ORCA.scorch = aq end)
        orca_create_checkbox(_t("Scorch fill"), ORCA.scorchfill, hW, function(S, S, aq) ORCA.scorchfill = aq end)
        orca_create_checkbox(_t("Combustion"), ORCA.combust, hW, function(S, S, aq) ORCA.combust = aq end)
        orca_create_checkbox(_t("Fire Blast"), ORCA.fblast, hW, function(S, S, aq) ORCA.fblast = aq end)
        orca_create_slider(_t("Flamestrike"), ORCA.fstrikeenemies, 0, 8, 1, hW,
            function(S, S, aq) ORCA.fstrikeenemies = aq end)
        orca_create_slider(_t("Blast Wave"), ORCA.bwave, 0, 8, 1, hW, function(S, S, aq) ORCA.bwave = aq end)
        orca_create_checkbox(_t("Pyroblast"), ORCA.pyroblast, hW, function(S, S, aq) ORCA.pyroblast = aq end)
        orca_create_checkbox(_t("Pom Pyro"), ORCA.pompyro, hW, function(S, S, aq) ORCA.pompyro = aq end)
        orca_create_checkbox(_t("Molten Armor"), ORCA.moltarmor, hW, function(S, S, aq) ORCA.moltarmor = aq end)
        local hX = orca_create_simple_group(_t("Arcane Spells"), h8)
        orca_create_checkbox(_t("Arcane Missiles"), ORCA.arcanemissiles, hX, function(S, S, aq) ORCA.arcanemissiles = aq end)
        orca_create_checkbox(_t("Arcane Blast"), ORCA.arcaneblast, hX, function(S, S, aq) ORCA.arcaneblast = aq end)
        orca_create_checkbox(_t("Arcane Barrage"), ORCA.arcanebarrage, hX, function(S, S, aq) ORCA.arcanebarrage = aq end)
        orca_create_checkbox(_t("Slow"), ORCA.slow, hX, function(S, S, aq) ORCA.slow = aq end)
        orca_create_checkbox(_t("Polymorph an off target"), ORCA.poly, hX, function(S, S, aq) ORCA.poly = aq end)
        orca_create_checkbox(_t("Mage Armor"), ORCA.marmor, hX, function(S, S, aq) ORCA.marmor = aq end)
        orca_create_checkbox(_t("Mana Shield"), ORCA.mshield, hX, function(S, S, aq) ORCA.mshield = aq end)
        orca_create_checkbox(_t("Auto Blink"), ORCA.blink, hX, function(S, S, aq) ORCA.blink = aq end)
        orca_create_checkbox(_t("Dampen Magic"), ORCA.dampen, hX, function(S, S, aq) ORCA.dampen = aq end)
        orca_create_checkbox(_t("Use Counterspell"), ORCA.counterspell, hX, function(S, S, aq) ORCA.counterspell = aq end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, hX, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_slider(_t("Evocation @"), ORCA.evocate, 0, 100, 1, hX, function(S, S, aq) ORCA.evocate = aq end)
        orca_create_checkbox(_t("Auto Decurse"), ORCA.decurse, hX, function(S, S, aq) ORCA.decurse = aq end)
        orca_create_slider(_t(">=# to Arcane Explosion"), ORCA.arcanex, 0, 8, 1, hX, function(S, S, aq) ORCA.arcanex = aq end)
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_checkbox(_t("Auto Cooldowns"), ORCA.automagecd, h8, function(S, S, aq) ORCA.automagecd = aq end)
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, h8,
            function(S, S, aq) ORCA.giftpercent = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_rogue(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        sword_rogue_button = orca_create_button(_t("Swords"), hB,
            function()
                ORCA.kickdelay = 250; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.stealth = false; ORCA.kick = true; ORCA.sprint = false; ORCA.backstab = false; ORCA.noss = false; ORCA.pickpocket = false; ORCA.cheap = false; ORCA.garrote = false; ORCA.ambush = false; ORCA.feint = false; ORCA.disableSnd = false; ORCA.eviscount = 0; ORCA.autoevis = true; ORCA.rupturecount = 0; ORCA.evasion = 40; ORCA.vanish = 20; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.ks = 2; ORCA.bf = 2; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        dagger_rogue_button = orca_create_button(_t("Dagger"), hB,
            function()
                ORCA.kickdelay = 250; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.stealth = false; ORCA.kick = true; ORCA.sprint = false; ORCA.backstab = true; ORCA.noss = false; ORCA.pickpocket = false; ORCA.cheap = false; ORCA.garrote = false; ORCA.ambush = false; ORCA.feint = false; ORCA.disableSnd = false; ORCA.eviscount = 0; ORCA.autoevis = true; ORCA.rupturecount = 0; ORCA.evasion = 40; ORCA.vanish = 20; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.ks = 2; ORCA.bf = 2; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, h8, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_checkbox(_t("Melee random Strafe"), ORCA.juggle, h8, function() ORCA.juggle = not ORCA.juggle end,
            _t("The bot will randomly strafe if it is in melee range of the enemy."))
        orca_create_checkbox(_t("Melee stand behind"), ORCA.standbehind, h8,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("The bot will attempt to stand behind the target."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_checkbox(_t("Auto Stealth Out of Combat"), ORCA.stealth, h8, function(S, S, aq) ORCA.stealth = aq end)
        orca_create_checkbox(_t("Auto Kick"), ORCA.kick, h8, function(S, S, aq) ORCA.kick = aq end)
        orca_create_checkbox(_t("Sprint"), ORCA.sprint, h8, function(S, S, aq) ORCA.sprint = aq end)
        orca_create_checkbox(_t("Backstab"), ORCA.backstab, h8, function(S, S, aq) ORCA.backstab = aq end)
        orca_create_checkbox(_t("Disable ") .. _t("Sinister Strike"), ORCA.noss, h8, function(S, S, aq) ORCA.noss = aq end)
        orca_create_checkbox(_t("Pick Pocket"), ORCA.pickpocket, h8, function(S, S, aq) ORCA.pickpocket = aq end)
        orca_create_checkbox(_t("Cheap Shot"), ORCA.cheap, h8, function(S, S, aq) ORCA.cheap = aq end)
        orca_create_checkbox(_t("Garrote"), ORCA.garrote, h8, function(S, S, aq) ORCA.garrote = aq end)
        orca_create_checkbox(_t("Ambush"), ORCA.ambush, h8, function(S, S, aq) ORCA.ambush = aq end)
        orca_create_checkbox(_t("Feint"), ORCA.feint, h8, function(S, S, aq) ORCA.feint = aq end)
        orca_create_checkbox(_t("Disable ") .. _t("Slice and Dice"), ORCA.disableSnd, h8,
            function(S, S, aq) ORCA.disableSnd = aq end)
        orca_create_slider(_t("Eviscerate @"), ORCA.eviscount, 0, 5, 1, h8, function(S, S, aq) ORCA.eviscount = aq end)
        orca_create_checkbox(_t("Auto Eviscerate"), ORCA.autoevis, h8, function(S, S, aq) ORCA.autoevis = aq end)
        orca_create_slider(_t("Rupture") .. _t(" @"), ORCA.rupturecount, 0, 5, 1, h8,
            function(S, S, aq) ORCA.rupturecount = aq end)
        orca_create_slider(_t("Evasion @ HP%"), ORCA.evasion, 0, 100, 1, h8, function(S, S, aq) ORCA.evasion = aq end)
        orca_create_slider(_t("Vanish @ HP%"), ORCA.vanish, 0, 100, 1, h8, function(S, S, aq) ORCA.vanish = aq end)
        orca_create_slider(_t("Cloak of Shadows @ HP%"), ORCA.cloak, 0, 100, 1, h8, function(S, S, aq) ORCA.cloak = aq end)
        orca_create_checkbox(_t("Disarm on CD"), ORCA.dismantle, h8, function(S, S, aq) ORCA.dismantle = aq end)
        orca_create_slider(_t("Killing Spree #enemies"), ORCA.ks, 0, 5, 1, h8, function(S, S, aq) ORCA.ks = aq end)
        orca_create_slider(_t("Blade Flurry #enemies"), ORCA.bf, 0, 5, 1, h8, function(S, S, aq) ORCA.bf = aq end)
        local hY = orca_create_simple_group(_t("Poisons"), h8)
        orca_create_editbox(_t("Mainhand Poison:"), ORCA.mhpois_box_saved_text, hY,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mhpois_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mhpois = h4 else
                        B:SetText(bF)
                        ORCA.mhpois = nil; ORCA.mhpois_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mhpois = nil; ORCA.mhpois_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand Poison:"), ORCA.ohpois_box_saved_text, hY,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.ohpois_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.ohpois = h4 else
                        B:SetText(bF)
                        ORCA.ohpois = nil; ORCA.ohpois_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.ohpois = nil; ORCA.ohpois_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_hunter(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        default_hunter_button = orca_create_button(_t("Default Behavior"), hB,
            function()
                ORCA.noPetAttack = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.runBackwardsAfterAA = 0; ORCA.ssting = false; ORCA.scorpid = false; ORCA.viper = false; ORCA.huntmark = true; ORCA.concuss = false; ORCA.aimed = false; ORCA.multi = 0; ORCA.arcaneshot = false; ORCA.viperAspect = false; ORCA.cheetahWeave = false; ORCA.pack = false; ORCA.cheetahAlways = false; if UnitLevel(_t("player")) < 10 then ORCA.huntpet = true else ORCA.huntpet = false end
                ; if not ORCA.huntpet then ORCA.autosummon = true else ORCA.autosummon = false end
                ; ORCA.funnel = 0; ORCA.dontwait = false; ORCA.feign = 0; ORCA.drawdeadzone = false; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_checkbox(_t("Prevent Pet Attack"), ORCA.noPetAttack, h8,
            function() ORCA.noPetAttack = not ORCA.noPetAttack end,
            _t("This makes it so the pet stays on passive mode and doesnt attack."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_slider(_t("Run Backwards after shoot for"), ORCA.runBackwardsAfterAA, 0, 5, 0.5, h8,
            function(S, S, aq) ORCA.runBackwardsAfterAA = aq end)
        local hZ = orca_create_simple_group(_t("Stings"), h8)
        orca_create_checkbox(_t("Serpent Sting"), ORCA.ssting, hZ, function(S, S, aq) ORCA.ssting = aq end)
        orca_create_checkbox(_t("Scorpid Sting"), ORCA.scorpid, hZ, function(S, S, aq) ORCA.scorpid = aq end)
        orca_create_checkbox(_t("Viper Sting"), ORCA.viper, hZ, function(S, S, aq) ORCA.viper = aq end,
            _t(
            "This will use viper sting only when the enemy has mana and cd available. You can use a different sting aswell as this one so it will do viper on eligible units + other sting on anything else."))
        local h_ = orca_create_simple_group(_t("Skills"), h8)
        orca_create_checkbox(_t("Hunter's Mark"), ORCA.huntmark, h_, function(S, S, aq) ORCA.huntmark = aq end)
        orca_create_checkbox(_t("Concussive Shot"), ORCA.concuss, h_, function(S, S, aq) ORCA.concuss = aq end)
        orca_create_checkbox(_t("Aimed Shot"), ORCA.aimed, h_, function(S, S, aq) ORCA.aimed = aq end)
        orca_create_checkbox(_t("Arcane Shot"), ORCA.arcaneshot, h_, function(S, S, aq) ORCA.arcaneshot = aq end)
        orca_create_checkbox(_t("Aspect of the Viper"), ORCA.viperAspect, h_, function(S, S, aq) ORCA.viperAspect = aq end)
        orca_create_checkbox(_t("Aspect of Cheetah Weave"), ORCA.cheetahWeave, h_,
            function(S, S, aq) ORCA.cheetahWeave = aq end)
        orca_create_checkbox(_t("Asp. of Pack (out of combat)"), ORCA.pack, h_, function(S, S, aq) ORCA.pack = aq end)
        orca_create_checkbox(_t("Aspect of Cheetah Always"), ORCA.cheetahAlways, h_,
            function(S, S, aq) ORCA.cheetahAlways = aq end)
        orca_create_checkbox(_t("Aspect of the Dragonhawk"), ORCA.dragonhawk, h_, function(S, S, aq) ORCA.dragonhawk = aq end)
        orca_create_slider(_t("Multi Shot"), ORCA.multi, 0, 3, 1, h_, function(S, S, aq) ORCA.multi = aq end)
        orca_create_checkbox(_t("Disengage"), ORCA.disengage, h_, function(S, S, aq) ORCA.disengage = aq end)
        orca_create_checkbox(_t("Steady Shot"), ORCA.steady, h_, function(S, S, aq) ORCA.steady = aq end)
        local i0 = orca_create_simple_group(_t("Pet Management"), h8)
        orca_create_checkbox(_t("Dont use pet"), ORCA.huntpet, i0, function(S, S, aq) ORCA.huntpet = aq end)
        orca_create_checkbox(_t("Auto Summon"), ORCA.autosummon, i0, function(S, S, aq) ORCA.autosummon = aq end)
        orca_create_slider(_t("Mend Pet %"), ORCA.funnel, 0, 100, 1, i0, function(S, S, aq) ORCA.funnel = aq end)
        orca_create_checkbox(_t("Attack immediately"), ORCA.dontwait, i0, function(S, S, aq) ORCA.dontwait = aq end,
            _t("The hunter will attack immediately and not wait for the pet to engage combat"))
        orca_create_editbox(_t("Pet food (separate by comma)"), ORCA.petfood_saved_text, i0,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.petfood_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then ORCA.petfood = h4 else
                        B:SetText(bF)
                        ORCA.petfood = nil; ORCA.petfood_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.petfood = nil; ORCA.petfood_saved_text = nil
                end end)
        orca_create_checkbox(_t("Draw deadzone"), ORCA.drawdeadzone, h8,
            function() ORCA.drawdeadzone = not ORCA.drawdeadzone end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        orca_create_slider(_t("Feign Death%"), ORCA.feign, 0, 100, 1, h8, function(S, S, aq) ORCA.feign = aq end)
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, h8,
            function(S, S, aq) ORCA.giftpercent = aq end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand"), ORCA.oh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.oh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.oh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_shaman(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        enh_shaman_button = orca_create_button(_t("Enhancement (PvE)"), hB,
            function()
                ORCA.tremor = false; ORCA.kickdelay = 250; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.esKick = true; ORCA.liteshield = true; ORCA.watershield = false; ORCA.srage = 35; ORCA.sragehp = 35; ORCA.rockbite = false; ORCA.flametongue = false; ORCA.windfurywep = true; ORCA.earthliving = false; ORCA.frostbrand = false; ORCA.oh_rockbite = false; ORCA.oh_flametongue = true; ORCA.oh_windfurywep = false; ORCA.oh_frostbrand = false; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.fastheal = 0; ORCA.chainheal = false; ORCA.fastheal_percent = 0; ORCA.autoheal_percent = 65; ORCA.overheal_percent = 0; ORCA.chainlite = false; ORCA.lb = false; ORCA.dispel = true; ORCA.fs = true; ORCA.es = true; ORCA.frostshock = false; ORCA.wftotem = true; ORCA.gracetotem = false; ORCA.soe = true; ORCA.mstotem = true; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.mwheal = false; ORCA.mwcl = 3; ORCA.mwlb = true; ORCA.ms_hex = false; ORCA.firenova = 2; ORCA.magmatotem = 2; ORCA.natureresist = false; ORCA.earthbind = false; ORCA.stoneclaw = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        enh_pvp_button = orca_create_button(_t("Enhancement (PvP)"), hB,
            function()
                ORCA.watershield = true; ORCA.stoneclaw = 95; ORCA.earthbind = true; ORCA.tremor = true; ORCA.natureresist = true; ORCA.magmatotem = 0; ORCA.firenova = 0; ORCA.kickdelay = 0; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.esKick = true; ORCA.liteshield = false; ORCA.srage = 35; ORCA.sragehp = 35; ORCA.rockbite = false; ORCA.flametongue = false; ORCA.windfurywep = true; ORCA.earthliving = false; ORCA.frostbrand = false; ORCA.oh_rockbite = false; ORCA.oh_flametongue = false; ORCA.oh_windfurywep = false; ORCA.oh_frostbrand = true; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.fastheal = 0; ORCA.chainheal = false; ORCA.fastheal_percent = 0; ORCA.autoheal_percent = 65; ORCA.overheal_percent = 0; ORCA.chainlite = false; ORCA.lb = false; ORCA.dispel = true; ORCA.fs = false; ORCA.es = false; ORCA.frostshock = true; ORCA.wftotem = true; ORCA.gracetotem = false; ORCA.soe = true; ORCA.mstotem = true; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.mwheal = true; ORCA.mwcl = 3; ORCA.mwlb = true; ORCA.ms_hex = true; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        spellhance_shaman_button = orca_create_button("Spellhance Dungeon/Raid", hB,
            function()
                ORCA.kickdelay = 250; ORCA.rockbite = false; ORCA.flametongue = true; ORCA.windfurywep = false; ORCA.earthliving = false; ORCA.frostbrand = false; ORCA.oh_rockbite = false; ORCA.oh_flametongue = true; ORCA.oh_windfurywep = false; ORCA.oh_frostbrand = false; ORCA.seartotem = false; ORCA.flametonguetotem = false; ORCA.firenova = 1; ORCA.magmatotem = 1; ORCA.mstotem = false; ORCA.hstotem = false; ORCA.cleantotem = false; ORCA.soe = false; ORCA.stoneskin = false; ORCA.tremor = false; ORCA.tremor_always = false; ORCA.earthbind = false; ORCA.wftotem = false; ORCA.gracetotem = false; ORCA.wrathtotem = false; ORCA.natureresist = false; ORCA.groundtotem = false; ORCA.fs = true; ORCA.es = true; ORCA.frostshock = false; ORCA.lavaburst = false; ORCA.elemastery = false; ORCA.chainlightning = 0; ORCA.lb = false; ORCA.esKick = true; ORCA.fillpurge = false; ORCA.mwheal = false; ORCA.mwlb = true; ORCA.mwcl = 3; ORCA.ms_hex = false; ORCA.mw_hard_cast = 3; ORCA.feralspirit = 0; ORCA.liteshield = true; ORCA.watershield = false; ORCA.autoshield = false; ORCA.srage = 0; ORCA.sragehp = 0; ORCA.stoneclaw = 0; ORCA.castheal = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        healing_shaman_button = orca_create_button(_t("Restoration"), hB,
            function()
                ORCA.kickdelay = 250; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.esKick = false; ORCA.liteshield = false; ORCA.watershield = true; ORCA.srage = 0; ORCA.sragehp = 0; ORCA.rockbite = false; ORCA.flametongue = false; ORCA.windfurywep = false; ORCA.earthliving = true; ORCA.oh_rockbite = false; ORCA.oh_flametongue = false; ORCA.oh_windfurywep = false; ORCA.castheal = true; ORCA.oocHeal = false; ORCA.fastheal = 30; ORCA.chainheal = true; ORCA.fastheal_percent = 0; ORCA.autoheal_percent = 65; ORCA.overheal_percent = 0; ORCA.chainlite = false; ORCA.lb = false; ORCA.dispel = true; ORCA.fs = false; ORCA.es = false; ORCA.wftotem = false; ORCA.gracetotem = false; ORCA.soe = false; ORCA.mstotem = true; ORCA.giftpercent = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.mwheal = false; ORCA.mwcl = 0; ORCA.mwlb = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, h8, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        local i1 = orca_create_simple_group(_t("Mainhand Enchant"), h8)
        orca_create_checkbox(_t("Rockbiter Weapon"), ORCA.rockbite, i1, function(S, S, aq) ORCA.rockbite = aq end)
        orca_create_checkbox(_t("Flametongue Weapon"), ORCA.flametongue, i1, function(S, S, aq) ORCA.flametongue = aq end)
        orca_create_checkbox(_t("Flametongue (rank9)"), ORCA.flametongue9, i1, function(S, S, aq) ORCA.flametongue9 = aq end)
        orca_create_checkbox(_t("Windfury Weapon"), ORCA.windfurywep, i1, function(S, S, aq) ORCA.windfurywep = aq end)
        orca_create_checkbox(_t("Earthliving Weapon"), ORCA.earthliving, i1, function(S, S, aq) ORCA.earthliving = aq end)
        orca_create_checkbox(_t("Frostbrand Weapon"), ORCA.frostbrand, i1, function(S, S, aq) ORCA.frostbrand = aq end)
        local i2 = orca_create_simple_group(_t("Offhand Enchant"), h8)
        orca_create_checkbox(_t("Rockbiter Weapon"), ORCA.oh_rockbite, i2, function(S, S, aq) ORCA.oh_rockbite = aq end)
        orca_create_checkbox(_t("Flametongue Weapon"), ORCA.oh_flametongue, i2,
            function(S, S, aq) ORCA.oh_flametongue = aq end)
        orca_create_checkbox(_t("Windfury Weapon"), ORCA.oh_windfurywep, i2, function(S, S, aq) ORCA.oh_windfurywep = aq end)
        orca_create_checkbox(_t("Frostbrand Weapon"), ORCA.oh_frostbrand, i2, function(S, S, aq) ORCA.oh_frostbrand = aq end)
        local hW = orca_create_simple_group(_t("Fire Totem"), h8)
        orca_create_checkbox(_t("Searing"), ORCA.seartotem, hW, function(S, S, aq) ORCA.seartotem = aq end)
        orca_create_checkbox(_t("fTongue/Wrath"), ORCA.flametonguetotem, hW, function(S, S, aq) ORCA.flametonguetotem =
            aq end)
        orca_create_slider(_t("Fire Nova @enemies"), ORCA.firenova, 0, 3, 1, hW, function(S, S, aq) ORCA.firenova = aq end)
        orca_create_slider(_t("Magma @enemies"), ORCA.magmatotem, 0, 3, 1, hW, function(S, S, aq) ORCA.magmatotem = aq end)
        local i3 = orca_create_simple_group(_t("Water Totem"), h8)
        orca_create_checkbox(_t("Mana Spring"), ORCA.mstotem, i3, function(S, S, aq) ORCA.mstotem = aq end)
        orca_create_checkbox(_t("Healing Stream"), ORCA.hstotem, i3, function(S, S, aq) ORCA.hstotem = aq end)
        orca_create_checkbox(_t("Cleansing Totem"), ORCA.cleantotem, i3, function(S, S, aq) ORCA.cleantotem = aq end)
        local i4 = orca_create_simple_group(_t("Earth Totem"), h8)
        orca_create_checkbox(_t("Strength of Earth"), ORCA.soe, i4, function(S, S, aq) ORCA.soe = aq end)
        orca_create_checkbox(_t("Stoneskin Totem"), ORCA.stoneskin, i4, function(S, S, aq) ORCA.stoneskin = aq end)
        orca_create_checkbox(_t("Tremor totem occasional use"), ORCA.tremor, i4, function(S, S, aq) ORCA.tremor = aq end)
        orca_create_checkbox(_t("Tremor totem full time"), ORCA.tremor_always, i4,
            function(S, S, aq) ORCA.tremor_always = aq end)
        orca_create_checkbox(_t("Earthbind totem to slow"), ORCA.earthbind, i4, function(S, S, aq) ORCA.earthbind = aq end)
        local i5 = orca_create_simple_group(_t("Air Totem"), h8)
        orca_create_checkbox(_t("Windfury Totem"), ORCA.wftotem, i5, function(S, S, aq) ORCA.wftotem = aq end)
        orca_create_checkbox(_t("Grace of Air Totem"), ORCA.gracetotem, i5, function(S, S, aq) ORCA.gracetotem = aq end)
        orca_create_checkbox(_t("Wrath of air"), ORCA.wrathtotem, i5, function(S, S, aq) ORCA.wrathtotem = aq end)
        orca_create_checkbox(_t("Grounding Totem to kick"), ORCA.groundtotem, i5, function(S, S, aq) ORCA.groundtotem =
            aq end)
        orca_create_checkbox(_t("Situational Nature Resist"), ORCA.natureresist, i5,
            function(S, S, aq) ORCA.natureresist = aq end,
            _t("This will cast Nature Resistance Totem against enemy Rogue, Druid, and Shaman."))
        local i6 = orca_create_simple_group(_t("Elemental Spells"), h8)
        orca_create_checkbox(_t("Flame Shock"), ORCA.fs, i6, function(S, S, aq) ORCA.fs = aq end)
        orca_create_checkbox(_t("Earth Shock"), ORCA.es, i6, function(S, S, aq) ORCA.es = aq end)
        orca_create_checkbox(_t("Frost Shock"), ORCA.frostshock, i6, function(S, S, aq) ORCA.frostshock = aq end)
        orca_create_checkbox(_t("Lava Burst"), ORCA.lavaburst, i6, function(S, S, aq) ORCA.lavaburst = aq end)
        orca_create_checkbox(_t("Auto Ele Mastery"), ORCA.elemastery, i6, function(S, S, aq) ORCA.elemastery = aq end)
        orca_create_slider(_t("Chain Lighting"), ORCA.chainlightning, 0, 3, 1, i6,
            function(S, S, aq) ORCA.chainlightning = aq end,
            _t("This will cast chain lightning if there are >= than this number of enemies that will be hit by it."))
        orca_create_checkbox(_t("Fill with ") .. _t("Lightning Bolt"), ORCA.lb, i6, function(S, S, aq) ORCA.lb = aq end)
        orca_create_checkbox(_t("Auto Interrupt"), ORCA.esKick, i6, function(S, S, aq) ORCA.esKick = aq end,
            _t("This will interrupt enemy casting with earth shock."))
        orca_create_checkbox(_t("Fill with purge"), ORCA.purgefill, i6, function(S, S, aq) ORCA.purgefill = aq end,
            _t("This will cast purge if you have nothing else to cast."))
        orca_create_slider(_t("Thunderstorm mp%"), ORCA.thunderstorm, 0, 100, 1, i6,
            function(S, S, aq) ORCA.thunderstorm = aq end,
            _t("This will cast thunderstorm if your mana is below this percentage."))
        orca_create_simple_label(_t("Purge these buffs (separate by comma)"), i6)
        orca_create_multiline_editbox(_t(""), ORCA.what_to_purge_saved_text, i6,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_purge_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.purgeWhitelist = h4; xRunMacroText(_t("/dump ORCA.purgeWhitelist"))
                    else
                        B:SetText(bF)
                        ORCA.purgeWhitelist = {}
                        ORCA.what_to_purge_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.purgeWhitelist = {}
                    ORCA.what_to_purge_saved_text = nil
                end end,
            _t(
            "If this is blank, the class rotation will purge nothing. If you put something in here, it will only purge the spells you put in here."))
        orca_create_checkbox("Sync Weapons", ORCA.syncweapons, h8, function(S, S, aq) ORCA.syncweapons = aq end,
            _t(
            "This will sync your mainhand and offhand hits to take more advantage of flurry procs. Only use when equipped weapon speeds are close together (preferably theyre both the same speed)."))
        local i7 = orca_create_simple_group(_t("Maelstrom Weapon"), h8)
        orca_create_checkbox(_t("Heal"), ORCA.mwheal, i7, function(S, S, aq) ORCA.mwheal = aq end,
            _t("This will cast healing wave if you have 5 stacks of maelstrom weapon."))
        orca_create_checkbox(_t("Lightning Bolt"), ORCA.mwlb, i7, function(S, S, aq) ORCA.mwlb = aq end,
            _t("This will cast lightning bolt if you have 5 stacks of maelstrom weapon."))
        orca_create_slider(_t("Chain Lightning"), ORCA.mwcl, 0, 3, 1, i7, function(S, S, aq) ORCA.mwcl = aq end,
            _t(
            "This will cast chain lightning if there are >= than this number of enemies that will be hit by it (5 stacks Maelstrom Weapon)."))
        orca_create_checkbox(_t("Hex (pvp only)"), ORCA.ms_hex, i7, function(S, S, aq) ORCA.ms_hex = aq end,
            _t("This will cast hex if you have 5 stacks of maelstrom weapon."))
        orca_create_checkbox("Hard cast to increase dps", ORCA.mw_hard_cast, i7, function(S, S, aq) ORCA.mw_hard_cast =
            aq end, _t("This will hard cast a damage spell when it will increase dps."))
        local i8 = orca_create_simple_group(_t("Cooldowns"), h8)
        orca_create_slider(_t("Feral Spirit >= #enemies"), ORCA.feralspirit, 0, 3, 1, i8,
            function(S, S, aq) ORCA.feralspirit = aq end,
            _t("This will cast feral spirit if there are >= than this number of enemies in combat."))
        orca_create_editbox(_t("Rocketglove (Ele) glove name:"), ORCA.rocketglove_saved_text, i8,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.rocketglove_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.rocketglove = h4 else
                        B:SetText(bF)
                        ORCA.rocketglove = nil; ORCA.rocketglove_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.rocketglove = nil; ORCA.rocketglove_saved_text = nil
                end end)
        local i9 = orca_create_simple_group(_t("Defensives"), h8)
        orca_create_checkbox(_t("Lightning Shield"), ORCA.liteshield, i9, function(S, S, aq) ORCA.liteshield = aq end)
        orca_create_checkbox(_t("Water Shield"), ORCA.watershield, i9, function(S, S, aq) ORCA.watershield = aq end)
        orca_create_checkbox(_t("Auto select shield"), ORCA.autoshield, i9, function(S, S, aq) ORCA.autoshield = aq end,
            _t("This will automatically select the best shield for your current situation."))
        orca_create_slider(_t("Shamanistic Rage MP%"), ORCA.srage, 0, 100, 1, i9, function(S, S, M) ORCA.srage = M end,
            _t("This will cast Shamanistic Rage when your mana is below the set percentage."))
        orca_create_slider(_t("Shamanistic Rage HP%"), ORCA.sragehp, 0, 100, 1, i9, function(S, S, M) ORCA.sragehp = M end,
            _t("This will cast Shamanistic Rage when your health is below the set percentage."))
        orca_create_slider(_t("Stoneclaw @ hp"), ORCA.stoneclaw, 0, 100, 1, i9, function(S, S, M) ORCA.stoneclaw = M end,
            _t("This will cast Stoneclaw Totem when your health is below the set percentage."))
        local ia = orca_create_simple_group(_t("Healing"), h8)
        orca_create_checkbox(_t("Auto Heal"), ORCA.castheal, ia, function(S, S, aq) ORCA.castheal = aq end)
        orca_create_checkbox(_t("Heal out of combat only"), ORCA.oocHeal, ia, function(S, S, aq) ORCA.oocHeal = aq end)
        orca_create_checkbox(_t("Only Fast heals"), ORCA.fastheal, ia, function(S, S, aq) ORCA.fastheal = aq end)
        orca_create_checkbox(_t("Use Chain Heal"), ORCA.chainheal, ia, function(S, S, aq) ORCA.chainheal = aq end)
        orca_create_slider(_t("When to use Fast Heal (%)"), ORCA.fastheal_percent, 0, 100, 1, ia,
            function(S, S, aq) ORCA.fastheal_percent = aq end)
        orca_create_slider(_t("Auto Heal %"), ORCA.autoheal_percent, 0, 100, 1, ia,
            function(S, S, aq) ORCA.autoheal_percent = aq end)
        orca_create_slider(_t("Max Overheal %"), ORCA.overheal_percent, 0, 100, 1, ia,
            function(S, S, aq) ORCA.overheal_percent = aq end)
        orca_create_checkbox(_t("Auto Dispel"), ORCA.dispel, ia, function(S, S, aq) ORCA.dispel = aq end)
        local hJ = orca_create_simple_group(_t("Weapon Swap"), h8)
        orca_create_editbox(_t("Spellpower Weapon"), ORCA._sp_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA._sp_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA._sp_name = h4 else
                        B:SetText(bF)
                        ORCA._sp_name = nil; ORCA._sp_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA._sp_name = nil; ORCA._sp_name_saved_text = nil
                end end)
        orca_create_editbox(_t("Spellpower Offhand"), ORCA._sp_name_saved_text2, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA._sp_name_saved_text2 = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA._sp_name2 = h4 else
                        B:SetText(bF)
                        ORCA._sp_name2 = nil; ORCA._sp_name_saved_text2 = nil
                    end
                else
                    B:SetText(bF)
                    ORCA._sp_name2 = nil; ORCA._sp_name_saved_text2 = nil
                end end)
        orca_create_editbox(_t("Mainhand melee wep"), ORCA.melee1h_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.melee1h_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.melee1h_name = h4 else
                        B:SetText(bF)
                        ORCA.melee1h_name = nil; ORCA.melee1h_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.melee1h_name = nil; ORCA.melee1h_name_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand melee wep"), ORCA.melee2h_name_saved_text, hJ,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.melee2h_name_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.melee2h_name = h4 else
                        B:SetText(bF)
                        ORCA.melee2h_name = nil; ORCA.melee2h_name_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.melee2h_name = nil; ORCA.melee2h_name_saved_text = nil
                end end)
        orca_create_checkbox(_t("Melee stand behind"), ORCA.standbehind, h8,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("The bot will attempt to stand behind the target."))
        orca_create_checkbox(_t("Melee random Strafe"), ORCA.juggle, h8, function() ORCA.juggle = not ORCA.juggle end,
            _t("The bot will randomly strafe if it is in melee range of the enemy."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, h8,
            function(S, S, aq) ORCA.giftpercent = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
    end

    ; function draw_class_druid(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        balance_druid_button = orca_create_button(_t("Balance"), hB,
            function()
                ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.bear = false; ORCA.cat = false; ORCA.catrake = false; ORCA.moonkin = true; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.autoheal_percent = 65; ORCA.fastheal = false; ORCA.fastheal_percent = 0; ORCA.renew_percent = 0; ORCA.overheal_percent = 0; ORCA.abolish = true; ORCA.druiddecurse = true; ORCA.wrath = true; ORCA.starfire = true; ORCA.moonfire = true; ORCA.insect = true; ORCA.hurricaneEnemies = 3; ORCA.fon = 2; ORCA.tigerfury = false; ORCA.rake = false; ORCA.mangleDebuff = false; ORCA.shred = false; ORCA.biteCP = 0; ORCA.autobite = false; ORCA.biteHP = 0; ORCA.ripCP = 0; ORCA.ravage = false; ORCA.prowl = false; ORCA.prowlalways = false; ORCA.cat_pshift = false; ORCA.dru_tank = false; ORCA.enrage = false; ORCA.demo = 0; ORCA.fcharge = false; ORCA.bashint = false; ORCA.fchargethreat = false; ORCA.bashthreat = false; ORCA.growl = false; ORCA.bear_pshift = false; ORCA.ragedump = 50; ORCA.bearHP = 0; ORCA.bearEnemies = 0; ORCA.barkHP = 80; ORCA.regenHP = 0; ORCA.leaveForm = 60; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        healing_druid_button = orca_create_button(_t("Restoration"), hB,
            function()
                ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.bear = false; ORCA.cat = false; ORCA.catrake = false; ORCA.moonkin = false; ORCA.castheal = true; ORCA.oocHeal = false; ORCA.autoheal_percent = 65; ORCA.fastheal = false; ORCA.fastheal_percent = 20; ORCA.renew_percent = 0; ORCA.overheal_percent = 0; ORCA.abolish = true; ORCA.druiddecurse = true; ORCA.wrath = false; ORCA.starfire = false; ORCA.moonfire = false; ORCA.insect = false; ORCA.hurricaneEnemies = 0; ORCA.fon = 0; ORCA.tigerfury = false; ORCA.rake = false; ORCA.mangleDebuff = false; ORCA.shred = false; ORCA.biteCP = 0; ORCA.autobite = false; ORCA.biteHP = 0; ORCA.ripCP = 0; ORCA.ravage = false; ORCA.prowl = false; ORCA.prowlalways = false; ORCA.cat_pshift = false; ORCA.dru_tank = false; ORCA.enrage = false; ORCA.demo = 0; ORCA.fcharge = false; ORCA.bashint = false; ORCA.fchargethreat = false; ORCA.bashthreat = false; ORCA.growl = false; ORCA.bear_pshift = false; ORCA.ragedump = 50; ORCA.bearHP = 0; ORCA.bearEnemies = 0; ORCA.barkHP = 80; ORCA.regenHP = 0; ORCA.leaveForm = 60; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        cat_druid_button = orca_create_button(_t("Cat"), hB,
            function()
                ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = true; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.bear = false; ORCA.cat = true; ORCA.catrake = false; ORCA.moonkin = false; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.autoheal_percent = 65; ORCA.fastheal = false; ORCA.fastheal_percent = 0; ORCA.renew_percent = 0; ORCA.overheal_percent = 0; ORCA.abolish = true; ORCA.druiddecurse = true; ORCA.wrath = false; ORCA.starfire = false; ORCA.moonfire = false; ORCA.insect = false; ORCA.hurricaneEnemies = 0; ORCA.fon = 0; ORCA.tigerfury = true; ORCA.rake = false; ORCA.mangleDebuff = false; ORCA.shred = true; ORCA.biteCP = 0; ORCA.autobite = true; ORCA.biteHP = 0; ORCA.ripCP = 0; ORCA.ravage = false; ORCA.prowl = false; ORCA.prowlalways = false; if select(5, GetTalentInfo(3, 2)) >= 5 then ORCA.cat_pshift = true else ORCA.cat_pshift = false end
                ; ORCA.dru_tank = false; ORCA.enrage = false; ORCA.demo = 0; ORCA.fcharge = true; ORCA.bashint = false; ORCA.fchargethreat = false; ORCA.bashthreat = false; ORCA.growl = false; ORCA.bear_pshift = false; ORCA.ragedump = 50; ORCA.bearHP = 0; ORCA.bearEnemies = 0; ORCA.barkHP = 40; ORCA.regenHP = 0; ORCA.leaveForm = 60; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        bear_druid_button = orca_create_button(_t("Bear"), hB,
            function()
                ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.juggle = false; ORCA.standbehind = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.bear = true; ORCA.cat = false; ORCA.catrake = false; ORCA.moonkin = false; ORCA.castheal = true; ORCA.oocHeal = true; ORCA.autoheal_percent = 65; ORCA.fastheal = false; ORCA.fastheal_percent = 0; ORCA.renew_percent = 0; ORCA.overheal_percent = 0; ORCA.abolish = true; ORCA.druiddecurse = true; ORCA.wrath = false; ORCA.starfire = false; ORCA.moonfire = false; ORCA.insect = false; ORCA.hurricaneEnemies = 0; ORCA.fon = 0; ORCA.tigerfury = false; ORCA.rake = false; ORCA.mangleDebuff = false; ORCA.shred = false; ORCA.biteCP = 0; ORCA.autobite = false; ORCA.biteHP = 0; ORCA.ripCP = 0; ORCA.ravage = false; ORCA.prowl = false; ORCA.prowlalways = false; ORCA.cat_pshift = false; ORCA.dru_tank = true; ORCA.enrage = true; ORCA.demo = 3; ORCA.fcharge = true; ORCA.bashint = true; ORCA.fchargethreat = true; ORCA.bashthreat = true; ORCA.growl = true; if select(5, GetTalentInfo(3, 2)) >= 5 then ORCA.bear_pshift = true else ORCA.bear_pshift = false end
                ; ORCA.ragedump = 50; ORCA.bearHP = 0; ORCA.bearEnemies = 0; ORCA.barkHP = 40; ORCA.regenHP = 30; ORCA.leaveForm = 60; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_checkbox(_t("Auto Buff"), ORCA.autobuff, h8, function() ORCA.autobuff = not ORCA.autobuff end,
            _t("This will make the bot buff everyone in the group with the appropriate buffs based on class."))
        orca_create_checkbox(_t("Only Buff Self"), ORCA.selfbuff, h8, function() ORCA.selfbuff = not ORCA.selfbuff end,
            _t(
            "This will make the bot only buff itself, not others in the group. Do not use AutoBuff if using this option."))
        orca_create_checkbox(_t("Melee random Strafe"), ORCA.juggle, h8, function() ORCA.juggle = not ORCA.juggle end,
            _t("The bot will randomly strafe if it is in melee range of the enemy."))
        orca_create_checkbox(_t("Melee stand behind"), ORCA.standbehind, h8,
            function() ORCA.standbehind = not ORCA.standbehind end,
            _t("The bot will attempt to stand behind the target."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_simple_label(_t("Only select 1 form, the form you want the bot to use the most of"), h8)
        orca_create_checkbox(_t("Bear Form"), ORCA.bear, h8, function(S, S, aq) ORCA.bear = aq end)
        orca_create_checkbox(_t("Cat Form"), ORCA.cat, h8, function(S, S, aq) ORCA.cat = aq end)
        orca_create_checkbox(_t("Cat (RAKE ONLY)"), ORCA.catrake, h8, function(S, S, aq) ORCA.catrake = aq end)
        orca_create_checkbox(_t("Moonkin Form"), ORCA.moonkin, h8, function(S, S, aq) ORCA.moonkin = aq end)
        local ib = orca_create_simple_group(_t("Healing"), h8)
        orca_create_checkbox(_t("AutoHeal"), ORCA.castheal, ib, function(S, S, aq) ORCA.castheal = aq end)
        orca_create_checkbox(_t("Heal out of combat only"), ORCA.oocHeal, ib, function(S, S, aq) ORCA.oocHeal = aq end)
        orca_create_slider(_t("AutoHeal %"), ORCA.autoheal_percent, 0, 100, 1, ib,
            function(S, S, aq) ORCA.autoheal_percent = aq end)
        orca_create_checkbox(_t("Only Fast heals"), ORCA.fastheal, ib, function(S, S, aq) ORCA.fastheal = aq end)
        orca_create_slider(_t("When to use Fast Heal (%)"), ORCA.fastheal_percent, 0, 100, 1, ib,
            function(S, S, aq) ORCA.fastheal_percent = aq end)
        orca_create_slider(_t("Rejuv %"), ORCA.renew_percent, 0, 100, 1, ib, function(S, S, aq) ORCA.renew_percent = aq end)
        orca_create_slider(_t("Max Overheal %"), ORCA.overheal_percent, 0, 100, 1, ib,
            function(S, S, aq) ORCA.overheal_percent = aq end)
        orca_create_checkbox(_t("Abolish Poison"), ORCA.abolish, ib, function(S, S, aq) ORCA.abolish = aq end)
        orca_create_checkbox(_t("Decurse"), ORCA.druiddecurse, ib, function(S, S, aq) ORCA.druiddecurse = aq end)
        local ic = orca_create_simple_group(_t("Caster/Moonkin Form"), h8)
        orca_create_checkbox(_t("Wrath"), ORCA.wrath, ic, function(S, S, aq) ORCA.wrath = aq end)
        orca_create_checkbox(_t("Starfire"), ORCA.starfire, ic, function(S, S, aq) ORCA.starfire = aq end)
        orca_create_checkbox(_t("Moonfire"), ORCA.moonfire, ic, function(S, S, aq) ORCA.moonfire = aq end)
        orca_create_checkbox(_t("Insect Swarm"), ORCA.insect, ic, function(S, S, aq) ORCA.insect = aq end)
        orca_create_slider(_t("Hurricane this many"), ORCA.hurricaneEnemies, 0, 8, 1, ic,
            function(S, S, aq) ORCA.hurricaneEnemies = aq end)
        orca_create_slider(_t("Force of Nature @ X enemies"), ORCA.fon, 0, 8, 1, ic, function(S, S, aq) ORCA.fon = aq end)
        orca_create_editbox(_t("Use Innervate on:"), ORCA.innervate_box_saved_text, ic,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.innervate_box_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do
                        h4[T] = select(T, strsplit(_t(","), bF))
                        if h4[T] then h4[T] = strlower(h4[T]):gsub(_t("%s+"), _t("")) end
                    end
                    ; if #h4 > 0 then ORCA.who_to_innervate = h4 else
                        B:SetText(bF)
                        ORCA.who_to_innervate = nil; ORCA.innervate_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.who_to_innervate = nil; ORCA.innervate_box_saved_text = nil
                end end)
        orca_create_slider(_t("Innervate") .. _t(" @"), ORCA.innervatemp, 0, 100, 1, ic,
            function(S, S, aq) ORCA.innervatemp = aq end)
        local id = orca_create_simple_group(_t("Big Cooldowns"), h8)
        orca_create_slider(_t("Berserk #enemies"), ORCA.berserk, 0, 8, 1, id, function(S, S, aq) ORCA.berserk = aq end)
        orca_create_slider(_t("Starfall #enemies"), ORCA.starfall, 0, 8, 1, id, function(S, S, aq) ORCA.starfall = aq end)
        local ie = orca_create_simple_group(_t("Cat Form"), h8)
        orca_create_checkbox(_t("Auto Tiger's Fury"), ORCA.tigerfury, ie, function(S, S, aq) ORCA.tigerfury = aq end)
        orca_create_checkbox(_t("Rake"), ORCA.rake, ie, function(S, S, aq) ORCA.rake = aq end)
        orca_create_checkbox(_t("Mangle for debuff"), ORCA.mangleDebuff, ie, function(S, S, aq) ORCA.mangleDebuff = aq end)
        orca_create_checkbox(_t("Use shred when behind"), ORCA.shred, ie, function(S, S, aq) ORCA.shred = aq end)
        orca_create_slider(_t("Ferocious Bite") .. _t(" @"), ORCA.biteCP, 0, 5, 1, ie, function(S, S, aq) ORCA.biteCP =
            aq end)
        orca_create_checkbox(_t("Bite to kill only"), ORCA.autobite, ie, function(S, S, aq) ORCA.autobite = aq end)
        orca_create_slider(_t("Bite @ enemy hp%"), ORCA.biteHP, 0, 100, 1, ie, function(S, S, aq) ORCA.biteHP = aq end)
        orca_create_slider(_t("Rip") .. _t(" @"), ORCA.ripCP, 0, 5, 1, ie, function(S, S, aq) ORCA.ripCP = aq end)
        orca_create_checkbox(_t("Ravage when possible"), ORCA.ravage, ie, function(S, S, aq) ORCA.ravage = aq end)
        orca_create_checkbox(_t("Stealth between targets"), ORCA.prowl, ie, function(S, S, aq) ORCA.prowl = aq end)
        orca_create_checkbox(_t("Stealth all the time"), ORCA.prowlalways, ie, function(S, S, aq) ORCA.prowlalways = aq end)
        orca_create_checkbox(_t("Shift for energy (furor)"), ORCA.cat_pshift, ie, function(S, S, aq) ORCA.cat_pshift = aq end)
        local ig = orca_create_simple_group(_t("Bear Form"), h8)
        orca_create_checkbox(_t("Auto target for threat"), ORCA.dru_tank, ig, function(S, S, aq) ORCA.dru_tank = aq end)
        orca_create_checkbox(_t("Auto Enrag"), ORCA.enrage, ig, function(S, S, aq) ORCA.enrage = aq end)
        orca_create_slider(_t("Demo X Units"), ORCA.demo, 0, 4, 1, ig, function(S, S, aq) ORCA.demo = aq end)
        orca_create_checkbox(_t("Auto Feral Charge"), ORCA.fcharge, ig, function(S, S, aq) ORCA.fcharge = aq end)
        orca_create_checkbox(_t("Feral Charge for Threat"), ORCA.fchargethreat, ig,
            function(S, S, aq) ORCA.fchargethreat = aq end)
        orca_create_checkbox(_t("Bash for Threat"), ORCA.bashthreat, ig, function(S, S, aq) ORCA.bashthreat = aq end)
        orca_create_checkbox(_t("Bash Interrupt"), ORCA.bashint, ig, function(S, S, aq) ORCA.bashint = aq end)
        orca_create_checkbox(_t("Auto Growl"), ORCA.growl, ig, function(S, S, aq) ORCA.growl = aq end)
        orca_create_checkbox(_t("Shift for rage (furor)"), ORCA.bear_pshift, ig, function(S, S, aq) ORCA.bear_pshift = aq end)
        orca_create_slider(_t("Dump Rage @"), ORCA.ragedump, 0, 100, 1, ig, function(S, S, aq) ORCA.ragedump = aq end)
        local i9 = orca_create_simple_group(_t("Defensives"), h8)
        orca_create_slider(_t("Bear form @ Hp%"), ORCA.bearHP, 0, 100, 1, i9, function(S, S, aq) ORCA.bearHP = aq end)
        orca_create_slider(_t("Bear form @ #enemies"), ORCA.bearEnemies, 0, 3, 1, i9,
            function(S, S, aq) ORCA.bearEnemies = aq end)
        orca_create_slider(_t("Barkskin @ Hp%"), ORCA.barkHP, 0, 100, 1, i9, function(S, S, aq) ORCA.barkHP = aq end)
        orca_create_slider(_t("Frenzied Regen HP%"), ORCA.regenHP, 0, 100, 1, i9, function(S, S, aq) ORCA.regenHP = aq end)
        orca_create_slider(_t("Leave form after (s)"), ORCA.leaveForm, 0, 60, 1, h8,
            function(S, S, aq) ORCA.leaveForm = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_priest(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        priest_healing_button = orca_create_button(_t("Healing"), hB,
            function()
                ORCA.castheal = true; ORCA.fastheal = false; ORCA.autoheal_percent = 65; ORCA.overheal_percent = 30; ORCA.fastheal_percent = 20; ORCA.oocHeal = false; ORCA.renew_percent = 0; ORCA.renew_rank = 0; ORCA.alwayspws = false; ORCA.pws = 35; ORCA.dispel = true; ORCA.dprayer = 15; ORCA.giftpercent = 0; ORCA.wand = false; ORCA.wandfinish = 0; ORCA.sfiend = true; ORCA.smite = false; ORCA.manaburn = false; ORCA.spreadvt = false; ORCA.swdhp = 0; ORCA.spreadswp = false; ORCA.sform = false; ORCA.hfire = false; ORCA.mflay = false; ORCA.mblast = false; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.ve = false; ORCA.silence = false; ORCA.kickdelay = 250; ORCA.fade = true; ORCA.autofear = false; ORCA.hnova = 3; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.painsup = 35; ORCA.guardianspirit = 35; ORCA.penanceheal = true; ORCA.prayerofmending = 95; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        priest_shadow_button = orca_create_button(_t("Shadow"), hB,
            function()
                ORCA.castheal = true; ORCA.fastheal = false; ORCA.autoheal_percent = 65; ORCA.overheal_percent = 30; ORCA.fastheal_percent = 0; ORCA.oocHeal = true; ORCA.renew_percent = 0; ORCA.renew_rank = 0; ORCA.alwayspws = false; ORCA.pws = 35; ORCA.dispel = true; ORCA.dprayer = 15; ORCA.giftpercent = 0; ORCA.wand = true; ORCA.wandfinish = 0; ORCA.sfiend = true; ORCA.smite = false; ORCA.manaburn = false; ORCA.spreadvt = true; ORCA.swdhp = 0; ORCA.spreadswp = true; ORCA.sform = true; ORCA.hfire = false; ORCA.mflay = true; ORCA.mblast = true; ORCA.autobuff = true; ORCA.selfbuff = false; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.ve = true; ORCA.silence = true; ORCA.kickdelay = 250; ORCA.fade = false; ORCA.autofear = false; ORCA.hnova = 0; ORCA.customRotation = false; ORCA.dontspin = false; ORCA.prayerofmending = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        local ih = orca_create_simple_group(_t("Healing"), h8)
        orca_create_checkbox(_t("Auto Heal"), ORCA.castheal, ih, function(S, S, aq) ORCA.castheal = aq end)
        orca_create_checkbox(_t("Only Fast Heals"), ORCA.fastheal, ih, function(S, S, aq) ORCA.fastheal = aq end)
        orca_create_slider(_t("AutoHeal %"), ORCA.autoheal_percent, 0, 100, 1, ih,
            function(S, S, aq) ORCA.autoheal_percent = aq end)
        orca_create_slider(_t("Max Overheal %"), ORCA.overheal_percent, 0, 100, 1, ih,
            function(S, S, aq) ORCA.overheal_percent = aq end)
        orca_create_slider(_t("When to use Fast Heal (%)"), ORCA.fastheal_percent, 0, 100, 1, ih,
            function(S, S, aq) ORCA.fastheal_percent = aq end)
        orca_create_checkbox(_t("Heal out of combat only"), ORCA.oocHeal, ih, function(S, S, aq) ORCA.oocHeal = aq end)
        orca_create_slider(_t("Prayer of Mending"), ORCA.prayerofmending, 0, 100, 1, ih,
            function(S, S, aq) ORCA.prayerofmending = aq end)
        orca_create_slider(_t("Renew %"), ORCA.renew_percent, 0, 100, 1, ih, function(S, S, aq) ORCA.renew_percent = aq end)
        orca_create_slider(_t("Renew Rank"), ORCA.renew_rank, 0, 12, 1, ih, function(S, S, aq) ORCA.renew_rank = aq end)
        orca_create_checkbox(_t("PW:S self in combat"), ORCA.alwayspws, ih, function(S, S, aq) ORCA.alwayspws = aq end)
        orca_create_slider(_t("PW:S %"), ORCA.pws, 0, 100, 1, ih, function(S, S, aq) ORCA.pws = aq end)
        orca_create_checkbox(_t("Penance for healing"), ORCA.penanceheal, ih, function(S, S, aq) ORCA.penanceheal = aq end)
        orca_create_slider(_t("Pain Suppression %"), ORCA.painsup, 0, 100, 1, ih, function(S, S, aq) ORCA.painsup = aq end)
        orca_create_slider(_t("Guardian Spirit %"), ORCA.guardianspirit, 0, 100, 1, ih,
            function(S, S, aq) ORCA.guardianspirit = aq end)
        orca_create_checkbox(_t("Auto Dispel"), ORCA.dispel, ih, function(S, S, aq) ORCA.dispel = aq end)
        orca_create_slider(_t("Desperate Prayer"), ORCA.dprayer, 0, 100, 1, ih, function(S, S, aq) ORCA.dprayer = aq end)
        orca_create_slider(_t("Gift of the Naaru%"), ORCA.giftpercent, 0, 100, 1, ih,
            function(S, S, aq) ORCA.giftpercent = aq end)
        local ii = orca_create_simple_group(_t("Damage"), h8)
        orca_create_checkbox(_t("Wanding"), ORCA.wand, ii, function() ORCA.wand = not ORCA.wand end,
            _t("This will make you use wand if equipped."))
        orca_create_slider(_t("Finish With Wand %"), ORCA.wandfinish, 0, 100, 1, ii, function(S, S, M) ORCA.wandfinish =
            M end, _t("This will only do wanding and no other spells or abilitys when the enemy is below this % HP."))
        orca_create_checkbox(_t("Shadowfiend"), ORCA.sfiend, ii, function(S, S, aq) ORCA.sfiend = aq end)
        orca_create_checkbox(_t("Smite"), ORCA.smite, ii, function(S, S, aq) ORCA.smite = aq end)
        orca_create_checkbox(_t("Mana burn"), ORCA.manaburn, ii, function(S, S, aq) ORCA.manaburn = aq end)
        orca_create_checkbox(_t("Spread VT"), ORCA.spreadvt, ii, function(S, S, aq) ORCA.spreadvt = aq end)
        orca_create_slider(_t("SWD Enemy HP%"), ORCA.swdhp, 0, 100, 1, ii, function(S, S, aq) ORCA.swdhp = aq end)
        orca_create_checkbox(_t("Spread SW:P"), ORCA.spreadswp, ii, function(S, S, aq) ORCA.spreadswp = aq end)
        orca_create_checkbox(_t("Shadow Form"), ORCA.sform, ii, function(S, S, aq) ORCA.sform = aq end)
        orca_create_checkbox(_t("Holy Fire"), ORCA.hfire, ii, function(S, S, aq) ORCA.hfire = aq end)
        orca_create_checkbox(_t("Mind Flay"), ORCA.mflay, ii, function(S, S, aq) ORCA.mflay = aq end)
        orca_create_checkbox(_t("Mind Blast on CD"), ORCA.mblast, ii, function(S, S, aq) ORCA.mblast = aq end)
        orca_create_checkbox(_t("Penance for damage"), ORCA.penance, ii, function(S, S, aq) ORCA.penance = aq end)
        local ij = orca_create_simple_group(_t("Utility"), h8)
        orca_create_checkbox(_t("Auto Buff"), ORCA.autobuff, ij, function() ORCA.autobuff = not ORCA.autobuff end,
            _t("This will make the bot buff everyone in the group with the appropriate buffs based on class."))
        orca_create_checkbox(_t("Only Buff Self"), ORCA.selfbuff, ij, function() ORCA.selfbuff = not ORCA.selfbuff end,
            _t(
            "This will make the bot only buff itself, not others in the group. Do not use AutoBuff if using this option."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, ij,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, ij, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, ij,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, ij, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        orca_create_checkbox(_t("Vampiric Embrace"), ORCA.ve, ij, function(S, S, aq) ORCA.ve = aq end)
        orca_create_checkbox(_t("Auto Silence"), ORCA.silence, ij, function(S, S, aq) ORCA.silence = aq end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, ij, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_slider(_t("Dispersion %"), ORCA.disperse_hp, 0, 100, 1, ij, function(S, S, aq) ORCA.disperse_hp = aq end)
        orca_create_simple_label(_t("Purge these buffs (separate by comma)"), ij)
        orca_create_multiline_editbox(_t(""), ORCA.what_to_purge_saved_text, ij,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.what_to_purge_saved_text = bF; local h4 = {}
                    for T = 1, 1337 do h4[T] = select(T, strsplit(_t(","), bF)) end
                    ; if #h4 > 0 then
                        ORCA.purgeWhitelist = h4; xRunMacroText(_t("/dump ORCA.purgeWhitelist"))
                    else
                        B:SetText(bF)
                        ORCA.purgeWhitelist = {}
                        ORCA.what_to_purge_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.purgeWhitelist = {}
                    ORCA.what_to_purge_saved_text = nil
                end end,
            _t("If this is blank, the class rotation will purge nothing. If you put something in here, it will only purge the spells you put in here."))
        orca_create_checkbox(_t("Use Fade"), ORCA.fade, h8, function(S, S, aq) ORCA.fade = aq end)
        orca_create_checkbox(_t("Auto Fear"), ORCA.autofear, h8, function(S, S, aq) ORCA.autofear = aq end)
        orca_create_slider(_t("Holy Nova"), ORCA.hnova, 0, 8, 1, h8, function(S, S, aq) ORCA.hnova = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_warlock(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        warlock_dotting_button = orca_create_button(_t("Multi-Dot"), hB,
            function()
                ORCA.noPetAttack = false; ORCA.wand = true; ORCA.wandfinish = 0; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.incinerate = false; ORCA.sbolt = false; ORCA.spreadua = true; ORCA.spreadimm = true; ORCA.spreadcor = true; ORCA.siphonlife = true; ORCA.autosummon = true; ORCA.autodom = true; ORCA.filldrain = true; ORCA.felhunter = false; ORCA.succubus = false; ORCA.imp = false; ORCA.voidwalker = true; ORCA.felguard = false; ORCA.nods = false; ORCA.drainlife = 0; ORCA.drainsoul = 10; ORCA.funnel = 0; ORCA.lifetap = 75; ORCA.soulshardcount = 8; ORCA.dpact = 75; ORCA.sburn = 0; ORCA.autoburn = true; ORCA.rofenemies = 0; ORCA.hfenemies = 0; ORCA.dclowhp = 0; ORCA.dcehp = 0; ORCA.spreadagony = true; ORCA.spreadreck = false; ORCA.spreadshadow = false; ORCA.spreadtongues = false; ORCA.spreadweak = false; ORCA.spreadelements = false; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        warlock_destruction_button = orca_create_button(_t("Destruction"), hB,
            function()
                ORCA.noPetAttack = false; ORCA.wand = true; ORCA.wandfinish = 0; ORCA.singletarget = false; ORCA.burst = false; ORCA.autoracial = false; ORCA.wpvp = false; ORCA.incinerate = false; ORCA.sbolt = true; ORCA.spreadua = false; ORCA.spreadimm = false; ORCA.spreadcor = false; ORCA.siphonlife = false; ORCA.autosummon = true; ORCA.autodom = true; ORCA.filldrain = false; ORCA.felhunter = false; ORCA.succubus = false; ORCA.imp = true; ORCA.voidwalker = false; ORCA.felguard = false; ORCA.nods = false; ORCA.drainlife = 0; ORCA.drainsoul = 10; ORCA.funnel = 0; ORCA.lifetap = 75; ORCA.soulshardcount = 8; ORCA.dpact = 75; ORCA.sburn = 0; ORCA.autoburn = true; ORCA.rofenemies = 3; ORCA.hfenemies = 3; ORCA.dclowhp = 0; ORCA.dcehp = 0; ORCA.spreadagony = false; ORCA.spreadreck = false; ORCA.spreadshadow = false; ORCA.spreadtongues = false; ORCA.spreadweak = false; ORCA.spreadelements = false; ORCA.customRotation = false; ORCA.dontspin = false; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        orca_create_checkbox(_t("Felhunter Auto Interrupt"), ORCA.petKick, h8,
            function() ORCA.petKick = not ORCA.petKick end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, h8, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_checkbox(_t("Prevent Pet Attack"), ORCA.noPetAttack, h8,
            function() ORCA.noPetAttack = not ORCA.noPetAttack end,
            _t("This makes it so the pet stays on passive mode and doesnt attack."))
        orca_create_checkbox(_t("Wanding"), ORCA.wand, h8, function() ORCA.wand = not ORCA.wand end,
            _t("This will make you use wand if equipped."))
        orca_create_slider(_t("Finish With Wand %"), ORCA.wandfinish, 0, 100, 1, h8, function(S, S, M) ORCA.wandfinish =
            M end, _t("This will only do wanding and no other spells or abilitys when the enemy is below this % HP."))
        orca_create_checkbox(_t("Use Single Target"), ORCA.singletarget, h8,
            function() ORCA.singletarget = not ORCA.singletarget end, _t("The bot will only hit 1 enemy, not multiple."))
        orca_create_checkbox(_t("Burst Damage"), ORCA.burst, h8, function() ORCA.burst = not ORCA.burst end,
            _t("This will make it so the bot uses all mana and does as much damage as possible."))
        orca_create_checkbox(_t("Use DPS Racials"), ORCA.autoracial, h8,
            function() ORCA.autoracial = not ORCA.autoracial end, _t("This uses the troll or orc racial."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        local ik = orca_create_simple_group(_t("Dots"), h8)
        orca_create_checkbox(_t("Spread Immolate"), ORCA.spreadimm, ik, function(S, S, aq) ORCA.spreadimm = aq end)
        orca_create_checkbox(_t("Spread Corruption"), ORCA.spreadcor, ik, function(S, S, aq) ORCA.spreadcor = aq end)
        orca_create_checkbox(_t("Spread Siphon Life"), ORCA.siphonlife, ik, function(S, S, aq) ORCA.siphonlife = aq end)
        orca_create_checkbox(_t("Spread UA"), ORCA.spreadua, ik, function(S, S, aq) ORCA.spreadua = aq end)
        orca_create_checkbox(_t("Haunt"), ORCA.haunt, ik, function(S, S, aq) ORCA.haunt = aq end)
        orca_create_slider(_t("Seed of Corruption"), ORCA.seed, 0, 10, 1, ik, function(S, S, M) ORCA.seed = M end)
        local il = orca_create_simple_group(_t("Pet"), h8)
        orca_create_checkbox(_t("Auto Fel Domination"), ORCA.autodom, il, function(S, S, aq) ORCA.autodom = aq end)
        orca_create_checkbox(_t("Auto Summon"), ORCA.autosummon, il, function(S, S, aq) ORCA.autosummon = aq end)
        orca_create_checkbox(_t("Imp"), ORCA.imp, il, function(S, S, aq) ORCA.imp = aq end)
        orca_create_checkbox(_t("Voidwalker"), ORCA.voidwalker, il, function(S, S, aq) ORCA.voidwalker = aq end)
        orca_create_checkbox(_t("Succubus"), ORCA.succubus, il, function(S, S, aq) ORCA.succubus = aq end)
        orca_create_checkbox(_t("Felhunter"), ORCA.felhunter, il, function(S, S, aq) ORCA.felhunter = aq end)
        orca_create_checkbox(_t("Felguard"), ORCA.felguard, il, function(S, S, aq) ORCA.felguard = aq end)
        local im = orca_create_simple_group(_t("Filler"), h8)
        orca_create_checkbox(_t("Shadowbolt before corrupt"), ORCA.sb_corruption, im,
            function(S, S, aq) ORCA.sb_corruption = aq end)
        orca_create_checkbox(_t("Incinerate"), ORCA.incinerate, im, function(S, S, aq) ORCA.incinerate = aq end)
        orca_create_checkbox(_t("Shadow Bolt"), ORCA.sbolt, im, function(S, S, aq) ORCA.sbolt = aq end)
        orca_create_checkbox(_t("Fill with DrainLife"), ORCA.filldrain, im, function(S, S, aq) ORCA.filldrain = aq end)
        local io = orca_create_simple_group(_t("Curses"), h8)
        orca_create_checkbox(_t("Curse of Doom >60s TTD"), ORCA.doom, io, function(S, S, aq) ORCA.doom = aq end)
        orca_create_checkbox(_t("Curse of Agony"), ORCA.spreadagony, io, function(S, S, aq) ORCA.spreadagony = aq end)
        orca_create_checkbox(_t("Curse of Recklessness"), ORCA.spreadreck, io, function(S, S, aq) ORCA.spreadreck = aq end)
        orca_create_checkbox(_t("Curse of Shadow"), ORCA.spreadshadow, io, function(S, S, aq) ORCA.spreadshadow = aq end)
        orca_create_checkbox(_t("Curse of Tongues"), ORCA.spreadtongues, io, function(S, S, aq) ORCA.spreadtongues = aq end)
        orca_create_checkbox(_t("Curse of Weakness"), ORCA.spreadweak, io, function(S, S, aq) ORCA.spreadweak = aq end)
        orca_create_checkbox(_t("Curse of the Elements"), ORCA.spreadelements, io,
            function(S, S, aq) ORCA.spreadelements = aq end)
        local ip = orca_create_simple_group(_t("AoE"), h8)
        orca_create_slider(_t(">=# to Rain of Fire"), ORCA.rofenemies, 0, 8, 1, ip,
            function(S, S, aq) ORCA.rofenemies = aq end)
        orca_create_slider(_t(">=# to Hellfire"), ORCA.hfenemies, 0, 8, 1, ip, function(S, S, aq) ORCA.hfenemies = aq end)
        orca_create_slider(_t(">=# to shadowflame"), ORCA.sfenemies, 0, 8, 1, ip, function(S, S, aq) ORCA.sfenemies = aq end)
        orca_create_slider(_t(">=# to immolation aura"), ORCA.immolationaura, 0, 8, 1, ip,
            function(S, S, aq) ORCA.immolationaura = aq end)
        local iq = orca_create_simple_group(_t("Defensive"), h8)
        orca_create_slider(_t("DrainLife %"), ORCA.drainlife, 0, 100, 1, iq, function(S, S, aq) ORCA.drainlife = aq end)
        orca_create_slider(_t("Deathcoil on my hp%"), ORCA.dclowhp, 0, 100, 1, iq, function(S, S, aq) ORCA.dclowhp = aq end)
        orca_create_slider(_t("Deathcoil on enemy hp%"), ORCA.dcehp, 0, 100, 1, iq, function(S, S, aq) ORCA.dcehp = aq end)
        orca_create_slider(_t("HealthFunnel %"), ORCA.funnel, 0, 100, 1, iq, function(S, S, aq) ORCA.funnel = aq end)
        orca_create_checkbox(_t("Use Demon Armor"), ORCA.demonarmor, iq, function(S, S, aq) ORCA.demonarmor = aq end)
        orca_create_slider(_t("DrainSoul %"), ORCA.drainsoul, 0, 100, 1, h8, function(S, S, aq) ORCA.drainsoul = aq end)
        orca_create_slider(_t("Lifetap %"), ORCA.lifetap, 0, 100, 1, h8, function(S, S, aq) ORCA.lifetap = aq end)
        orca_create_checkbox(_t("Lifetap Glyph"), ORCA.lifetapglyph, h8, function(S, S, aq) ORCA.lifetapglyph = aq end)
        orca_create_checkbox(_t("Dont use Drain Soul"), ORCA.nods, h8, function(S, S, aq) ORCA.nods = aq end)
        orca_create_slider(_t("Soulshard Count"), ORCA.soulshardcount, 0, 20, 1, h8,
            function(S, S, aq) ORCA.soulshardcount = aq end)
        orca_create_slider(_t("Dark Pact %"), ORCA.dpact, 0, 100, 1, h8, function(S, S, aq) ORCA.dpact = aq end)
        orca_create_slider(_t("Shadowburn %"), ORCA.sburn, 0, 100, 1, h8, function(S, S, aq) ORCA.sburn = aq end)
        orca_create_checkbox(_t("Shadowburn auto%"), ORCA.autoburn, h8, function(S, S, aq) ORCA.autoburn = aq end)
        orca_create_checkbox(_t("No Spells"), ORCA.customRotation, h8,
            function() ORCA.customRotation = not ORCA.customRotation end,
            _t("This will make the bot cast nothing at all."))
        orca_create_checkbox(_t("Disable facing"), ORCA.dontspin, h8, function() ORCA.dontspin = not ORCA.dontspin end)
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end

    ; function draw_class_deathknight(h8)
        local hB = orca_create_simple_group(_t("Default Settings"), h8)
        dk_tanking_button = orca_create_button(_t("Blood"), hB,
            function()
                ORCA.war_tank = true; ORCA.presence_blood = true; ORCA.presence_frost = false; ORCA.presence_unholy = false; ORCA.bloodstrike = true; ORCA.pestilence = true; ORCA.bloodboil = 3; ORCA.heartstrike = 2; ORCA.froststrike = false; ORCA.howlingblast = false; ORCA.obliterate = false; ORCA.icytouch = 0.1; ORCA.filldeathstrike = true; ORCA.scourgestrike = false; ORCA.bloodstrike_desolation = false; ORCA.plaguestrike = 0.1; ORCA.dnd = 3; ORCA.deathcoil = 40; ORCA.dancingrune = 3; ORCA.gargoyle = 0; ORCA.raisedead = 2; ORCA.vampiricblood = 30; ORCA.runetap = 45; ORCA.dgrip = true; ORCA.mindfreeze = true; ORCA.darkcommand = true; ORCA.iceboundfortitude = 30; ORCA.bloodtap = true; ORCA.corpseexplode = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        dk_frost_button = orca_create_button(_t("Frost"), hB,
            function()
                ORCA.war_tank = false; ORCA.presence_blood = true; ORCA.presence_frost = false; ORCA.presence_unholy = false; ORCA.bloodstrike = false; ORCA.pestilence = true; ORCA.bloodboil = 0; ORCA.heartstrike = 0; ORCA.froststrike = true; ORCA.howlingblast = true; ORCA.obliterate = true; ORCA.icytouch = 0.1; ORCA.filldeathstrike = false; ORCA.scourgestrike = false; ORCA.bloodstrike_desolation = false; ORCA.plaguestrike = 0.1; ORCA.dnd = 0; ORCA.deathcoil = 40; ORCA.dancingrune = 0; ORCA.gargoyle = 0; ORCA.raisedead = 2; ORCA.vampiricblood = 30; ORCA.runetap = 45; ORCA.dgrip = true; ORCA.mindfreeze = true; ORCA.darkcommand = false; ORCA.iceboundfortitude = 30; ORCA.bloodtap = true; ORCA.corpseexplode = 0; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        dk_unholy_button = orca_create_button(_t("Unholy"), hB,
            function()
                ORCA.war_tank = false; ORCA.presence_blood = true; ORCA.presence_frost = false; ORCA.presence_unholy = false; ORCA.bloodstrike = false; ORCA.pestilence = true; ORCA.bloodboil = 0; ORCA.heartstrike = 0; ORCA.froststrike = false; ORCA.howlingblast = false; ORCA.obliterate = false; ORCA.icytouch = 2; ORCA.filldeathstrike = false; ORCA.scourgestrike = true; ORCA.bloodstrike_desolation = true; ORCA.plaguestrike = 2; ORCA.dnd = 0; ORCA.deathcoil = 40; ORCA.dancingrune = 0; ORCA.gargoyle = 3; ORCA.raisedead = 2; ORCA.vampiricblood = 30; ORCA.runetap = 45; ORCA.dgrip = true; ORCA.mindfreeze = true; ORCA.darkcommand = false; ORCA.iceboundfortitude = 30; ORCA.bloodtap = true; ORCA.corpseexplode = 3; OrcaUITabGroup
                    :SelectTab(ORCA.lastFrame)
            end)
        local ir = orca_create_simple_group(_t("Presences"), h8)
        orca_create_checkbox(_t("Blood"), ORCA.presence_blood, ir, function(S, S, aq) ORCA.presence_blood = aq end)
        orca_create_checkbox(_t("Frost"), ORCA.presence_frost, ir, function(S, S, aq) ORCA.presence_frost = aq end)
        orca_create_checkbox(_t("Unholy"), ORCA.presence_unholy, ir, function(S, S, aq) ORCA.presence_unholy = aq end)
        orca_create_slider(_t("Frost Presence when #melee on you"), ORCA.presence_frost_melee, 0, 5, 1, ir,
            function(S, S, aq) ORCA.presence_frost_melee = aq end,
            "In PvE this will count all enemys on you, in PvP, this will count only melee players on you.")
        orca_create_slider(_t("Blood Presence @hp"), ORCA.presence_blood_hp, 0, 100, 1, ir,
            function(S, S, aq) ORCA.presence_blood_hp = aq end)
        local is = orca_create_simple_group(_t("Blood Spells"), h8)
        orca_create_checkbox(_t("Use Blood Strike"), ORCA.bloodstrike, is, function(S, S, aq) ORCA.bloodstrike = aq end)
        orca_create_checkbox(_t("Pestilence"), ORCA.pestilence, is, function(S, S, aq) ORCA.pestilence = aq end)
        orca_create_checkbox(_t("Dark Command"), ORCA.darkcommand, is, function(S, S, aq) ORCA.darkcommand = aq end)
        orca_create_checkbox(_t("Auto Blood Tap"), ORCA.bloodtap, is, function(S, S, aq) ORCA.bloodtap = aq end)
        orca_create_checkbox(_t("Tank movement (afk)"), ORCA.war_tank, is, function(S, S, aq) ORCA.war_tank = aq end)
        orca_create_slider(_t("Blood Boil >= #enemies"), ORCA.bloodboil, 0, 8, 1, is,
            function(S, S, aq) ORCA.bloodboil = aq end)
        orca_create_slider(_t("Heart Strike >= #enemies"), ORCA.heartstrike, 0, 2, 1, is,
            function(S, S, aq) ORCA.heartstrike = aq end)
        local it = orca_create_simple_group(_t("Frost Spells"), h8)
        orca_create_checkbox(_t("Use Frost Strike"), ORCA.froststrike, it, function(S, S, aq) ORCA.froststrike = aq end)
        orca_create_checkbox(_t("Howling Blast"), ORCA.howlingblast, it, function(S, S, aq) ORCA.howlingblast = aq end)
        orca_create_checkbox(_t("Obliterate"), ORCA.obliterate, it, function(S, S, aq) ORCA.obliterate = aq end)
        orca_create_checkbox(_t("Rune Strike"), ORCA.runestrike, it, function(S, S, aq) ORCA.runestrike = aq end)
        orca_create_slider(_t("Icy Touch when remains <= "), ORCA.icytouch, 0, 10, 0.1, it,
            function(S, S, aq) ORCA.icytouch = aq end)
        orca_create_checkbox(_t("Chains of Ice auto"), ORCA.chains, it, function(S, S, aq) ORCA.chains = aq end)
        local iu = orca_create_simple_group(_t("Unholy Spells"), h8)
        orca_create_checkbox(_t("Fill with Death Strike"), ORCA.filldeathstrike, iu,
            function(S, S, aq) ORCA.filldeathstrike = aq end)
        orca_create_checkbox(_t("Scourge Strike"), ORCA.scourgestrike, iu, function(S, S, aq) ORCA.scourgestrike = aq end)
        orca_create_checkbox(_t("BloodStrike for Desolation"), ORCA.bloodstrike_desolation, iu,
            function(S, S, aq) ORCA.bloodstrike_desolation = aq end)
        orca_create_slider(_t("Plague Strike when remains <= "), ORCA.plaguestrike, 0, 10, 0.1, iu,
            function(S, S, aq) ORCA.plaguestrike = aq end)
        orca_create_slider(_t("DnD #enemies >= "), ORCA.dnd, 0, 10, 1, iu, function(S, S, aq) ORCA.dnd = aq end)
        orca_create_slider(_t("DeathCoil when power >="), ORCA.deathcoil, 0, 100, 1, iu,
            function(S, S, aq) ORCA.deathcoil = aq end)
        orca_create_slider(_t("Corpse Explode #enemies"), ORCA.corpseexplode, 0, 10, 1, iu,
            function(S, S, aq) ORCA.corpseexplode = aq end)
        local id = orca_create_simple_group(_t("Big Cooldowns"), h8)
        orca_create_slider(_t("Dancing Rune #enemies >= "), ORCA.dancingrune, 0, 10, 1, id,
            function(S, S, aq) ORCA.dancingrune = aq end)
        orca_create_slider(_t("Gargoyle #enemies >= "), ORCA.gargoyle, 0, 10, 1, id, function(S, S, aq) ORCA.gargoyle =
            aq end)
        orca_create_slider(_t("Raise Dead #enemies >= "), ORCA.raisedead, 0, 10, 1, id,
            function(S, S, aq) ORCA.raisedead = aq end)
        local iv = orca_create_simple_group(_t("Defensives"), h8)
        orca_create_slider(_t("Death Strike when health <="), ORCA.deathstrike, 0, 100, 1, iv,
            function(S, S, aq) ORCA.deathstrike = aq end)
        orca_create_slider(_t("Vampiric Blood when health <="), ORCA.vampiricblood, 0, 100, 1, iv,
            function(S, S, aq) ORCA.vampiricblood = aq end)
        orca_create_slider(_t("Rune Tap when health <="), ORCA.runetap, 0, 100, 1, iv,
            function(S, S, aq) ORCA.runetap = aq end)
        orca_create_slider(_t("Icebound Fortitude when health <="), ORCA.iceboundfortitude, 0, 100, 1, iv,
            function(S, S, aq) ORCA.iceboundfortitude = aq end)
        orca_create_slider(_t("AMS hp%"), ORCA.ams, 0, 100, 1, iv, function(S, S, aq) ORCA.ams = aq end)
        orca_create_checkbox(_t("AMS incoming CC"), ORCA.ams_cc, iv, function(S, S, aq) ORCA.ams_cc = aq end)
        local iw = orca_create_simple_group(_t("Utility"), h8)
        orca_create_checkbox(_t("Death Grip Interrupt"), ORCA.dgrip, iw, function(S, S, aq) ORCA.dgrip = aq end)
        orca_create_checkbox(_t("Interrupt with Mind Freeze"), ORCA.mindfreeze, iw,
            function(S, S, aq) ORCA.mindfreeze = aq end)
        orca_create_slider(_t("Interrupt Delay (MS)"), ORCA.kickdelay, 0, 500, 1, iw, function(S, S, M) ORCA.kickdelay =
            M end, _t("This delays your interrupt ability an amount of milliseconds to humanize it."))
        orca_create_checkbox(_t("Target Enemy Players"), ORCA.wpvp, h8, function() ORCA.wpvp = not ORCA.wpvp end,
            _t(
            "This will make the bot hit enemy players unprovoked in world. It is not necessary to use this option if you are doing battlegrounds."))
        local hK = orca_create_simple_group(_t("Temp. Weapon Enchants "), h8)
        orca_create_simple_label(_t("This is for weapon stones/oils."), hK)
        orca_create_editbox(_t("Mainhand"), ORCA.mh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.mh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.mh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.mh_enchant = nil; ORCA.mh_enchant_box_saved_text = nil
                end end)
        orca_create_editbox(_t("Offhand"), ORCA.oh_enchant_box_saved_text, hK,
            function(B, S, bF) if bF:gsub(_t("%s+"), _t("")) ~= _t("") then
                    ORCA.oh_enchant_box_saved_text = bF; local h4 = {}
                    h4[1] = bF; if #h4 > 0 then ORCA.oh_enchant = h4 else
                        B:SetText(bF)
                        ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                    end
                else
                    B:SetText(bF)
                    ORCA.oh_enchant = nil; ORCA.oh_enchant_box_saved_text = nil
                end end)
        orca_create_checkbox(_t("Display Spells Casted"), ORCA.debug, h8, function() ORCA.debug = not ORCA.debug end)
        orca_create_simple_label(_t("---"), h8)
    end
end
; local function ix(...)
    local l = LibStub(_t("AceGUI-3.0"))
    local iy = false; local iz = false; if not _saveSettings then function _saveSettings() return end end
    ; ConfigForm = l:Create(_t("Frame"))
    ConfigForm:SetCallback(_t("OnClose"), function(B)
        if ORCA then ORCA.uishown = false end
        ; _saveSettings()
    end)
    ConfigForm:SetTitle(_t("|cff69CCF0Orca"))
    ConfigForm:SetStatusText(_t("Getting Ready"))
    ConfigForm:SetLayout(_t("Fill"))
    local function iA(h8, bj, bk)
        h8:ReleaseChildren()
        local iB = l:Create(_t("ScrollFrame"))
        iB:SetLayout(_t("Flow"))
        h8:AddChild(iB)
        if bk == _t("class") then
            local iC = orca_create_simple_group(_t("Class Rotation"), iB)
            local iD = orcaStart or false; local iE = _t("Start")
            if iD then iE = _t("Stop") end
            ; if not (orcaStartStop == nil) and not iy then
                orcaStartStop = function()
                    orcaStart = not orcaStart; local iD = orcaStart; local iE = _t("Start")
                    if iD then iE = _t("Stop") end
                    ; orca_enable_button:SetText(iE)
                end; iy = true
            end
            ; orca_enable_button = orca_create_button(iE, iC,
                function()
                    orcaStart = not orcaStart; local iD = orcaStart; local iE = _t("Run")
                    if iD then iE = _t("Stop") end
                    ; orca_enable_button:SetText(iE)
                end)
        end
        ; if ORCA then
            ORCA.lastFrame = bk; _saveSettings()
            if bk == _t("general") then draw_general_group(iB) elseif bk == _t("class") then draw_class_group(iB) elseif bk == _t("afk_2") then
                draw_afk_two_group(iB) elseif bk == _t("multibox") then draw_multi_group(iB) elseif bk == _t("relog") then
                draw_relog_group(iB) elseif bk == _t("profileswitching") then draw_pswitch_group(iB) elseif bk == _t("quest") then
                draw_quest_group(iB) elseif bk == _t("gather") then draw_gather_group(iB) elseif bk == _t("pvp") then
                draw_pvp_group(iB) elseif bk == _t("createprofile") then draw_create_group(iB) elseif bk == _t("botsetting") then
                draw_afk_one_group(iB) elseif bk == _t("dung") then draw_dungeon_group(iB) elseif bk == _t("grind") then
                draw_grind_group(iB) elseif bk == _t("keybinds") then draw_keybind_group(iB) elseif bk == _t("fishing") then
                draw_fishing_group(iB) end
        end
    end
    ; local iF = { [_t("WARRIOR")] = _t("|cffC79C6E"), [_t("PALADIN")] = _t("|cffF58CBA"),
        [_t("HUNTER")] = _t("|cffABD473"), [_t("ROGUE")] = _t("|cffFFF569"), [_t("PRIEST")] = _t("|cffFFFFFF"),
        [_t("DEATHKNIGHT")] = _t("|cffC41F3B"), [_t("SHAMAN")] = _t("|cff0070DE"), [_t("MAGE")] = _t("|cff69CCF0"),
        [_t("WARLOCK")] = _t("|cff9482C9"), [_t("MONK")] = _t("|cff00FF96"), [_t("DRUID")] = _t("|cffFF7D0A"),
        [_t("DEMONHUNTER")] = _t("|cffA330C9") }
    function _classColorText(bF)
        local S, iG = UnitClass(_t("player"))
        return iF[iG] .. bF .. _t("|r")
    end

    ; UiTabData = { { text = _classColorText(UnitClass(_t("player")) .. _t(" Settings")), value = _t("class") },
        { text = _t("Keybinds"), value = _t("keybinds") }, { text = _t("Grind"), value = _t("grind") },
        { text = _t("PvP"), value = _t("pvp") }, { text = _t("Gather"), value = _t("gather") },
        { text = _t("Multibox/Dungeon"), value = _t("dung") }, { text = _t("Fishing"), value = _t("fishing") },
        { text = _t("Settings"), value = _t("botsetting") }, { text = _t("Create Profile"), value = _t("createprofile") },
        { text = _t("Quest"), value = _t("quest") }, { text = _t("Contact"), value = _t("afk_2") },
        { text = _t("Relogger"), value = _t("relog") } }
    OrcaUITabGroup = l:Create(_t("TabGroup"))
    OrcaUITabGroup:SetLayout(_t("Fill"))
    OrcaUITabGroup:SetTabs(UiTabData)
    OrcaUITabGroup:SetCallback(_t("OnGroupSelected"), iA)
    selectgrp = CreateFrame(_t("Frame"))
    ConfigForm:SetWidth(350)
    ConfigForm:AddChild(OrcaUITabGroup)
    ConfigForm:Hide()
    SLASH_OrcaNew1 = _t("/o")
    SLASH_OrcaNew2 = _t("/or")
    SLASH_OrcaNew3 = _t("/orc")
    SLASH_OrcaNew4 = _t("/orca")
    SlashCmdList[_t("OrcaNew")] = function() if not ConfigForm:IsVisible() then
            ConfigForm:Show()
            if ORCA then ORCA.uishown = true end
            ; _saveSettings()
        else
            ConfigForm:Hide()
            if ORCA then ORCA.uishown = false end
            ; _saveSettings()
        end end
end
; a(...)
b(...)
i(...)
b3(...)
bh(...)
bs(...)
bU(...)
bV(...)
c7(...)
c8(...)
cB(...)
dB(...)
e6(...)
ea(...)
em(...)
ey(...)
fD(...)
fN(...)
fY(...)
fZ(...)
f_(...)
g2(...)
ge(...)
gl(...)
gD(...)
gR(...)
h3(...)
hq(...)
hx(...)
ix(...)
